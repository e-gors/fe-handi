{"version":3,"file":"static/js/9440.51676364.chunk.js","mappings":"kOA8BA,UA3BA,SAAmBA,GACjB,IAAQC,EAAuCD,EAAvCC,OAAQC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,YAAgBC,GAAIC,EAAAA,EAAAA,GAAKL,EAAKM,GAEhDC,GAAQ,EACRC,EAAa,GAEbL,IACFI,GAAQ,EACRC,EAAaL,GAGXF,IACFM,EAASN,GAAUA,EAAOQ,IAAIP,KAAU,EACxCM,EAAcP,GAAUA,EAAOS,MAAMR,IAAU,IAGjD,IAAMS,GAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACdL,MAAAA,EACAL,KAAAA,EACAM,WAAAA,GACGJ,GAAI,IACPS,MAAOT,EAAKS,OAAS,KAGvB,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,GAASH,EAAAA,EAAAA,GAAA,CAACI,KAAK,QAAQC,QAAQ,YAAeN,GACxD,C,mFC1Be,SAASO,EAAkBC,EAAQC,EAASC,GACzD,MAAe,YAAXF,EACKG,EAAAA,GAAAA,QAAcF,EAASC,GAEzBC,EAAAA,GAAAA,MAAYF,EAASC,EAC9B,C,yGCJe,SAASE,IACtB,OACET,EAAAA,EAAAA,KAACU,EAAAA,GAAc,CACbC,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,MAAM,WAGZ,C,qEClBO,IAAMb,EAAU,CACrBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBK,WAAW,EACXG,mBAAoB,EACpBC,iBAAkB,GAClBF,MAAO,U,0NCUHG,EAAY,IAAIC,EAAAA,GAAAA,UAAsB,CAC1CC,MAAO,qBAqJT,UAlJA,SAAmBvC,GACjB,IAAQwC,EAA2BxC,EAA3BwC,YAAaC,EAAczC,EAAdyC,UACfC,GAAWC,EAAAA,EAAAA,MAKXC,GAHOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,MAAMC,IAAI,IAC5CC,QAEe,GAAGV,MAE1BW,EAAyBC,EAAAA,SAAe,CACtCC,OAAQ,CACNb,MAAO,IAETtC,OAAQoC,EAAUpC,SAClBoD,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GALKX,EAAKc,EAAA,GAAEE,EAAOF,EAAA,GAMrBG,EAAkCL,EAAAA,SAAe,GAAEM,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA5CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAA8BT,EAAAA,UAAe,GAAMU,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA5CE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GA2E1B,OAzEAV,EAAAA,WAAgB,WACVP,IACFW,GAAQ,SAACS,GAAI,OAAApD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRoD,GAAI,IACPZ,OAAQ,CACNb,MAAOK,IACR,IAEHe,EAAaf,EAAOqB,QAExB,GAAG,KAgEDC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAC,SAAA,EACFtD,EAAAA,EAAAA,KAACS,EAAAA,QAA0B,KAC3B2C,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAC,SAAA,EACFF,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAC,SAAA,EACFtD,EAAAA,EAAAA,KAACuD,EAAAA,QAAS,CACRC,WAAS,EACTC,WAAS,EACTC,MAAM,aACNtE,KAAK,QACLuE,SAvEW,SAACC,GACpB,IAAM7D,EAAQ6D,EAAEC,OAAO9D,MACjBX,EAAOwE,EAAEC,OAAOzE,KAEtBqD,GAAQ,SAACS,GAAI,OAAApD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRoD,GAAI,IACPZ,QAAMxC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDoD,EAAKZ,QAAM,IAAAwB,EAAAA,EAAAA,GAAA,GACb1E,EAAOW,KACT,IAGH,IAAQZ,EAAWoC,EAAXpC,OAERoC,EAAUwC,SAAS3E,EAAMW,GAAOiE,MAAK,SAACC,GAC/BA,GACHxB,GAAQ,SAACS,GAAI,OAAApD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRoD,GAAI,IACP/D,OAAAA,GAAM,GAGZ,GACF,EAkDU+E,QAhDa,SAACN,GACtB,IAAM7D,EAAQ6D,EAAEC,OAAO9D,MACvB8C,EAAa9C,EAAMoD,OACrB,EA8CUpD,MAAO0B,EAAMa,OAAOb,MACpBtC,OAAQsC,EAAMtC,UAEhBiE,EAAAA,EAAAA,MAACe,EAAAA,EAAc,CACbC,GAAI,CACFC,MAAqB,MAAdzB,EAAoB,QAAU,MACrC0B,UAAW,SACXhB,SAAA,CAEDV,EAAU,cAGfQ,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFkB,MAAM,QACNH,GAAI,CAAEI,gBAAiB,UAAWC,EAAG,EAAGC,aAAc,EAAGC,GAAI,GAAIrB,SAAA,EAEjEtD,EAAAA,EAAAA,KAAC4E,EAAAA,EAAM,CAAC1E,KAAK,QAAQC,QAAQ,WAAW0E,QAASnD,EAAY4B,SAAC,YAG9DtD,EAAAA,EAAAA,KAAC4E,EAAAA,EAAM,CACL1E,KAAK,QACLC,QAAQ,YACRkE,MAAM,UACND,GAAI,CAAEU,GAAI,GACVD,QAjDa,WACrBtD,EAAUwD,YAAYtD,EAAMa,QAAQ0B,MAAK,SAACC,GACpCA,GApBNhB,GAAW,GACX+B,EAAAA,QAAAA,KAAU,gBAAiBvD,EAAMa,QAC9B0B,MAAK,SAACiB,GACiB,MAAlBA,EAAIC,KAAKC,MACXvD,GAASwD,EAAAA,EAAAA,YAAWH,EAAIC,KAAKhD,QAC7B9B,EAAAA,EAAAA,SAAkB,UAAW6E,EAAIC,KAAK5E,QAASC,EAAAA,SAC/CoB,MAEAvB,EAAAA,EAAAA,SAAkB,QAAS6E,EAAIC,KAAK5E,QAASC,EAAAA,SAE/C0C,GAAW,EACb,IACCoC,OAAM,SAACC,GACNrC,GAAW,IACX7C,EAAAA,EAAAA,SAAkB,QAASkF,EAAIhF,QAASC,EAAAA,QAC1C,KAQEkC,GAAQ,SAACS,GAAI,OAAApD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRoD,GAAI,IACP/D,OAAQoC,EAAUpC,QAAM,GAG9B,GACF,EAuCUoG,SAAUvC,EAAQM,SAEjBN,GACChD,EAAAA,EAAAA,KAACwF,EAAAA,EAAgB,CACftF,KAAM,GACNkE,GAAI,CAAEC,MAAO,SACboB,UAAW,IAGb,iBAOd,C,mCCnKMT,E,SAAOU,EAAAA,SAEbV,EAAKW,SAASC,QAAUC,oDACxBb,EAAKW,SAASG,QAAQC,OAAe,OAAI,mBACzCf,EAAKW,SAASG,QAAQC,OAAO,gBAAkB,mBAC/Cf,EAAKW,SAASG,QAAQC,OAAsB,cAAC,UAAAC,OAAaC,aAAaC,QACrE,gBAGFlB,EAAKmB,aAAaC,SAASC,KACzB,SAAUD,GACR,OAAOA,CACT,IACA,SAAU3G,GACR,GAAsB,kBAAlBA,EAAMa,QACR,OAAOgG,QAAQC,OAAO9G,GAGxB,GACO,OADCA,EAAM2G,UAAY3G,EAAM2G,SAAS/F,QAErC4F,aAAaO,WAAW,eACxBC,OAAOC,SAASC,KAAO,SAM3B,OAAOL,QAAQC,OAAO9G,EACxB,IAGF,W","sources":["components/FormField.js","components/ToastNotification.js","components/ToastNotificationContainer.js","components/options.js","modules/users/components/UpdateBio.js","utils/Http.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction FormField(props) {\r\n  const { errors, name, customError, ...rest } = props;\r\n\r\n  let error = false;\r\n  let helperText = \"\";\r\n\r\n  if (customError) {\r\n    error = true;\r\n    helperText = customError;\r\n  }\r\n\r\n  if (errors) {\r\n    error = (errors && errors.has(name)) || false;\r\n    helperText = (errors && errors.first(name)) || \"\";\r\n  }\r\n\r\n  const fieldProps = {\r\n    error,\r\n    name,\r\n    helperText,\r\n    ...rest,\r\n    value: rest.value || \"\",\r\n  };\r\n\r\n  return <TextField size=\"small\" variant=\"outlined\" {...fieldProps} />;\r\n}\r\n\r\nexport default FormField;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport default function ToastNotification(status, message, options) {\r\n  if (status === \"success\") {\r\n    return toast.success(message, options);\r\n  }\r\n  return toast.error(message, options);\r\n}\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function ToastNotificationContainer() {\r\n  return (\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n      theme=\"colored\"\r\n    />\r\n  );\r\n}\r\n","export const options = {\r\n  position: \"top-right\",\r\n  autoClose: 3000,\r\n  hideProgressBar: false,\r\n  draggable: true,\r\n  draggableDirection: \"x\" | \"y\",\r\n  draggablePercent: 60,\r\n  theme: \"colored\",\r\n};\r\n","import {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  FormHelperText,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport FormField from \"../../../components/FormField\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Http from \"../../../utils/Http\";\r\nimport ToastNotification from \"../../../components/ToastNotification\";\r\nimport { options } from \"../../../components/options\";\r\nimport ToastNotificationContainer from \"../../../components/ToastNotificationContainer\";\r\nimport { updateUser } from \"../../../redux/actions/userActions\";\r\nimport Reevalidate from \"ree-validate-18\";\r\n\r\nconst validator = new Reevalidate.Validator({\r\n  about: \"required|max:100\",\r\n});\r\n\r\nfunction UpdateBio(props) {\r\n  const { handleClose, onConfirm } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state) => state.users.user);\r\n  const { profile } = user;\r\n\r\n  const header = profile[0].about;\r\n\r\n  const [about, setData] = React.useState({\r\n    values: {\r\n      about: \"\",\r\n    },\r\n    errors: validator.errors,\r\n  });\r\n  const [charCount, setCharCount] = React.useState(0);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (header) {\r\n      setData((prev) => ({\r\n        ...prev,\r\n        values: {\r\n          about: header,\r\n        },\r\n      }));\r\n      setCharCount(header.length);\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    setData((prev) => ({\r\n      ...prev,\r\n      values: {\r\n        ...prev.values,\r\n        [name]: value,\r\n      },\r\n    }));\r\n\r\n    const { errors } = validator;\r\n\r\n    validator.validate(name, value).then((success) => {\r\n      if (!success) {\r\n        setData((prev) => ({\r\n          ...prev,\r\n          errors,\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    const value = e.target.value;\r\n    setCharCount(value.length);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n    Http.post(\"/update/about\", about.values)\r\n      .then((res) => {\r\n        if (res.data.code === 200) {\r\n          dispatch(updateUser(res.data.user));\r\n          ToastNotification(\"success\", res.data.message, options);\r\n          onConfirm();\r\n        } else {\r\n          ToastNotification(\"error\", res.data.message, options);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        ToastNotification(\"error\", err.message, options);\r\n      });\r\n  };\r\n\r\n  const handleValidate = () => {\r\n    validator.validateAll(about.values).then((success) => {\r\n      if (success) {\r\n        handleSubmit();\r\n      } else {\r\n        setData((prev) => ({\r\n          ...prev,\r\n          errors: validator.errors,\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <ToastNotificationContainer />\r\n      <Box>\r\n        <Box>\r\n          <FormField\r\n            fullWidth\r\n            multiline\r\n            label=\"Update Bio\"\r\n            name=\"about\"\r\n            onChange={handleChange}\r\n            onKeyUp={handleKeyPress}\r\n            value={about.values.about}\r\n            errors={about.errors}\r\n          />\r\n          <FormHelperText\r\n            sx={{\r\n              color: charCount === 100 ? \"green\" : \"red\",\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            {charCount}/100\r\n          </FormHelperText>\r\n        </Box>\r\n        <Box\r\n          align=\"right\"\r\n          sx={{ backgroundColor: \"#F4F5FB\", p: 2, borderRadius: 3, mt: 5 }}\r\n        >\r\n          <Button size=\"small\" variant=\"outlined\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={{ ml: 1 }}\r\n            onClick={handleValidate}\r\n            disabled={loading}\r\n          >\r\n            {loading ? (\r\n              <CircularProgress\r\n                size={24}\r\n                sx={{ color: \"white\" }}\r\n                thickness={5}\r\n              />\r\n            ) : (\r\n              \"Save\"\r\n            )}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default UpdateBio;\r\n","import axios from \"axios\";\r\n\r\nconst Http = axios.create();\r\n\r\nHttp.defaults.baseURL = process.env.REACT_APP_API_DOMAIN;\r\nHttp.defaults.headers.common[\"Accept\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Content-Type\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Authorization\"] = `Bearer ${localStorage.getItem(\r\n  \"accessToken\"\r\n)}`;\r\n\r\nHttp.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    if (error.message === \"Network Error\") {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    switch (error.response && error.response.status) {\r\n      case 401:\r\n        localStorage.removeItem(\"accessToken\");\r\n        window.location.href = \"/login\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default Http;\r\n"],"names":["props","errors","name","customError","rest","_objectWithoutProperties","_excluded","error","helperText","has","first","fieldProps","_objectSpread","value","_jsx","TextField","size","variant","ToastNotification","status","message","options","toast","ToastNotificationContainer","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","draggableDirection","draggablePercent","validator","Reevalidate","about","handleClose","onConfirm","dispatch","useDispatch","header","useSelector","state","users","user","profile","_React$useState","React","values","_React$useState2","_slicedToArray","setData","_React$useState3","_React$useState4","charCount","setCharCount","_React$useState5","_React$useState6","loading","setLoading","prev","length","_jsxs","Box","children","FormField","fullWidth","multiline","label","onChange","e","target","_defineProperty","validate","then","success","onKeyUp","FormHelperText","sx","color","textAlign","align","backgroundColor","p","borderRadius","mt","Button","onClick","ml","validateAll","Http","res","data","code","updateUser","catch","err","disabled","CircularProgress","thickness","axios","defaults","baseURL","process","headers","common","concat","localStorage","getItem","interceptors","response","use","Promise","reject","removeItem","window","location","href"],"sourceRoot":""}