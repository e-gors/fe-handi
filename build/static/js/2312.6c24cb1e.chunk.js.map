{"version":3,"file":"static/js/2312.6c24cb1e.chunk.js","mappings":"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","sources":["components/FormField.js","components/ToastNotification.js","components/ToastNotificationContainer.js","components/options.js","modules/home/components/ContactUs.js","utils/Http.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction FormField(props) {\r\n  const { errors, name, customError, ...rest } = props;\r\n\r\n  let error = false;\r\n  let helperText = \"\";\r\n\r\n  if (customError) {\r\n    error = true;\r\n    helperText = customError;\r\n  }\r\n\r\n  if (errors) {\r\n    error = (errors && errors.has(name)) || false;\r\n    helperText = (errors && errors.first(name)) || \"\";\r\n  }\r\n\r\n  const fieldProps = {\r\n    error,\r\n    name,\r\n    helperText,\r\n    ...rest,\r\n    value: rest.value || \"\",\r\n  };\r\n\r\n  return <TextField size=\"small\" variant=\"outlined\" {...fieldProps} />;\r\n}\r\n\r\nexport default FormField;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport default function ToastNotification(status, message, options) {\r\n  if (status === \"success\") {\r\n    return toast.success(message, options);\r\n  }\r\n  return toast.error(message, options);\r\n}\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function ToastNotificationContainer() {\r\n  return (\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n      theme=\"colored\"\r\n    />\r\n  );\r\n}\r\n","export const options = {\r\n  position: \"top-right\",\r\n  autoClose: 3000,\r\n  hideProgressBar: false,\r\n  draggable: true,\r\n  draggableDirection: \"x\" | \"y\",\r\n  draggablePercent: 60,\r\n  theme: \"colored\",\r\n};\r\n","import * as React from \"react\";\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  Box,\r\n  Container,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport Http from \"../../../utils/Http\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport FormField from \"../../../components/FormField\";\r\nimport ToastNotificationContainer from \"../../../components/ToastNotificationContainer\";\r\nimport ToastNotification from \"../../../components/ToastNotification\";\r\nimport ReeValidate from \"ree-validate-18\";\r\nimport { styles } from \"../../../assets/styles/styles\";\r\nimport { options } from \"../../../components/options\";\r\n\r\nconst validator = new ReeValidate.Validator({\r\n  email: \"required|email\",\r\n  letter: \"required\",\r\n});\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function ContactUs() {\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [formValues, setFormValues] = React.useState({\r\n    values: {\r\n      email: \"\",\r\n      letter: \"\",\r\n    },\r\n    errors: validator.errors,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setFormValues((prev) => ({\r\n      ...prev,\r\n      values: {\r\n        ...prev.values,\r\n        [name]: value,\r\n      },\r\n    }));\r\n\r\n    const { errors } = validator;\r\n\r\n    validator.validate(name, value).then(() => {\r\n      setFormValues((prev) => ({\r\n        ...prev,\r\n        errors,\r\n      }));\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n    Http.post(\"/contact-us\", formValues.values)\r\n      .then((res) => {\r\n        if (res.data.code === 200) {\r\n          ToastNotification(\"success\", res.data.message, options);\r\n          setFormValues({\r\n            vales: {\r\n              email: \"\",\r\n              letter: \"\",\r\n            },\r\n          });\r\n        } else {\r\n          ToastNotification(\"error\", res.data.message, options);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        ToastNotification(\"error\", err, options);\r\n      });\r\n  };\r\n\r\n  const handleValidate = () => {\r\n    validator.validateAll(formValues.values).then((success) => {\r\n      if (success) {\r\n        handleSubmit();\r\n      } else {\r\n        setFormValues((prev) => ({\r\n          ...prev,\r\n          errors: validator.errors,\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ToastNotificationContainer />\r\n      <Container maxWidth=\"md\">\r\n        <CssBaseline />\r\n        <Box>\r\n          <Box component=\"form\">\r\n            <FormField\r\n              variant=\"standard\"\r\n              required\r\n              name=\"email\"\r\n              errors={formValues.errors}\r\n              onChange={handleChange}\r\n              value={formValues.values.email}\r\n              size=\"small\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              autoComplete=\"email\"\r\n              InputProps={{\r\n                style: {\r\n                  background: \"rgba(255, 255, 255, 0.5)\",\r\n                  color: \"black\",\r\n                },\r\n              }}\r\n            />\r\n            <FormField\r\n              variant=\"standard\"\r\n              multiline\r\n              required\r\n              name=\"letter\"\r\n              errors={formValues.errors}\r\n              value={formValues.values.letter}\r\n              onChange={handleChange}\r\n              size=\"small\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Message\"\r\n              id=\"letter\"\r\n              autoComplete=\"letter\"\r\n              InputProps={{\r\n                style: {\r\n                  background: \"rgba(255, 255, 255, 0.5)\",\r\n                  coor: \"black\",\r\n                },\r\n              }}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={styles.customBlueButton}\r\n              onClick={handleValidate}\r\n              disabled={loading}\r\n            >\r\n              {loading ? <CircularProgress size={24} /> : \"Submit\"}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst Http = axios.create();\r\n\r\nHttp.defaults.baseURL = process.env.REACT_APP_API_DOMAIN;\r\nHttp.defaults.headers.common[\"Accept\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Content-Type\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Authorization\"] = `Bearer ${localStorage.getItem(\r\n  \"accessToken\"\r\n)}`;\r\n\r\nHttp.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    if (error.message === \"Network Error\") {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    switch (error.response && error.response.status) {\r\n      case 401:\r\n        localStorage.removeItem(\"accessToken\");\r\n        window.location.href = \"/login\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default Http;\r\n"],"names":["props","errors","name","customError","rest","_objectWithoutProperties","_excluded","error","helperText","has","first","fieldProps","_objectSpread","value","_jsx","TextField","size","variant","ToastNotification","status","message","options","toast","ToastNotificationContainer","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","draggableDirection","draggablePercent","validator","ReeValidate","email","letter","createTheme","ContactUs","_React$useState","React","_React$useState2","_slicedToArray","loading","setLoading","_React$useState3","values","_React$useState4","formValues","setFormValues","handleChange","e","target","prev","_defineProperty","validate","then","_jsxs","ThemeProvider","children","Container","maxWidth","CssBaseline","Box","component","FormField","required","onChange","margin","fullWidth","id","label","autoComplete","InputProps","style","background","color","multiline","coor","Button","type","sx","styles","onClick","validateAll","success","Http","res","data","code","vales","catch","err","disabled","CircularProgress","axios","defaults","baseURL","process","headers","common","concat","localStorage","getItem","interceptors","response","use","Promise","reject","removeItem","window","location","href"],"sourceRoot":""}