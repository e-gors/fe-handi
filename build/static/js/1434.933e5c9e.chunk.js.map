{"version":3,"file":"static/js/1434.933e5c9e.chunk.js","mappings":"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","sources":["components/FormField.js","components/ToastNotification.js","components/ToastNotificationContainer.js","components/options.js","modules/users/components/UpdateBackground.js","utils/Http.js","../node_modules/@mui/material/TextField/TextField.js","../node_modules/@mui/material/TextField/textFieldClasses.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction FormField(props) {\r\n  const { errors, name, customError, ...rest } = props;\r\n\r\n  let error = false;\r\n  let helperText = \"\";\r\n\r\n  if (customError) {\r\n    error = true;\r\n    helperText = customError;\r\n  }\r\n\r\n  if (errors) {\r\n    error = (errors && errors.has(name)) || false;\r\n    helperText = (errors && errors.first(name)) || \"\";\r\n  }\r\n\r\n  const fieldProps = {\r\n    error,\r\n    name,\r\n    helperText,\r\n    ...rest,\r\n    value: rest.value || \"\",\r\n  };\r\n\r\n  return <TextField size=\"small\" variant=\"outlined\" {...fieldProps} />;\r\n}\r\n\r\nexport default FormField;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport default function ToastNotification(status, message, options) {\r\n  if (status === \"success\") {\r\n    return toast.success(message, options);\r\n  }\r\n  return toast.error(message, options);\r\n}\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function ToastNotificationContainer() {\r\n  return (\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n      theme=\"colored\"\r\n    />\r\n  );\r\n}\r\n","export const options = {\r\n  position: \"top-right\",\r\n  autoClose: 3000,\r\n  hideProgressBar: false,\r\n  draggable: true,\r\n  draggableDirection: \"x\" | \"y\",\r\n  draggablePercent: 60,\r\n  theme: \"colored\",\r\n};\r\n","import { Box, Button, CircularProgress, FormHelperText } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport FormField from \"../../../components/FormField\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Http from \"../../../utils/Http\";\r\nimport ToastNotification from \"../../../components/ToastNotification\";\r\nimport { options } from \"../../../components/options\";\r\nimport ToastNotificationContainer from \"../../../components/ToastNotificationContainer\";\r\nimport { updateUser } from \"../../../redux/actions/userActions\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nfunction UpdateBackground(props) {\r\n  const { handleClose, onConfirm } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state) => state.users.user);\r\n  const { profile } = user;\r\n\r\n  const [error, setError] = React.useState(null);\r\n  const [background, setData] = React.useState();\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (profile[0]) {\r\n      setData(profile[0].background);\r\n    }\r\n  }, []);\r\n\r\n  const handleChangeJobDescription = (content, delta, source, editor) => {\r\n    setData(content);\r\n\r\n    if (content.length <= 51) {\r\n      setError(\"Background characters must be at least 50 or more.\");\r\n    } else {\r\n      setError(null);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n    const formData = new FormData();\r\n    formData.append(\"background\", background);\r\n\r\n    Http.post(\"/update/background\", formData)\r\n      .then((res) => {\r\n        if (res.data.code === 200) {\r\n          setLoading(false);\r\n          dispatch(updateUser(res.data.user));\r\n          ToastNotification(\"success\", res.data.message, options);\r\n          onConfirm();\r\n        } else {\r\n          ToastNotification(\"error\", res.data.message, options);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        ToastNotification(\"error\", err.message, options);\r\n      });\r\n  };\r\n\r\n  const handleValidate = () => {\r\n    if (!background || background.trim().length === 0) {\r\n      setError(\"Job Description is required.\");\r\n      return;\r\n    }\r\n    if (error) {\r\n      ToastNotification(\"error\", error, options);\r\n      return;\r\n    }\r\n    handleSubmit();\r\n  };\r\n  return (\r\n    <Box>\r\n      <ToastNotificationContainer />\r\n      <Box>\r\n        <form encType=\"multipart/form-data\">\r\n          <Box\r\n            sx={{\r\n              \".ql-editor\": {\r\n                height: 200,\r\n              },\r\n            }}\r\n          >\r\n            <ReactQuill\r\n              theme=\"snow\"\r\n              name=\"job_description\"\r\n              value={background}\r\n              onChange={handleChangeJobDescription}\r\n              placeholder=\"Describe yourself in words so that workers will be able to know your worth.\"\r\n              style={{ backgroundColor: \"white\" }}\r\n            />\r\n            {error && <FormHelperText error>{error}</FormHelperText>}\r\n          </Box>\r\n          <Box\r\n            align=\"right\"\r\n            sx={{ backgroundColor: \"#F4F5FB\", p: 2, borderRadius: 3, mt: 5 }}\r\n          >\r\n            <Button size=\"small\" variant=\"outlined\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              sx={{ ml: 1 }}\r\n              onClick={handleValidate}\r\n              disabled={loading}\r\n            >\r\n              {loading ? (\r\n                <CircularProgress\r\n                  size={24}\r\n                  sx={{ color: \"white\" }}\r\n                  thickness={5}\r\n                />\r\n              ) : (\r\n                \"Save\"\r\n              )}\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default UpdateBackground;\r\n","import axios from \"axios\";\r\n\r\nconst Http = axios.create();\r\n\r\nHttp.defaults.baseURL = process.env.REACT_APP_API_DOMAIN;\r\nHttp.defaults.headers.common[\"Accept\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Content-Type\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Authorization\"] = `Bearer ${localStorage.getItem(\r\n  \"accessToken\"\r\n)}`;\r\n\r\nHttp.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    if (error.message === \"Network Error\") {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    switch (error.response && error.response.status) {\r\n      case 401:\r\n        localStorage.removeItem(\"accessToken\");\r\n        window.location.href = \"/login\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default Http;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/material-ui/api/form-control/)\n * - [InputLabel](/material-ui/api/input-label/)\n * - [FilledInput](/material-ui/api/filled-input/)\n * - [OutlinedInput](/material-ui/api/outlined-input/)\n * - [Input](/material-ui/api/input/)\n * - [FormHelperText](/material-ui/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n  const {\n      autoComplete,\n      autoFocus = false,\n      children,\n      className,\n      color = 'primary',\n      defaultValue,\n      disabled = false,\n      error = false,\n      FormHelperTextProps,\n      fullWidth = false,\n      helperText,\n      id: idOverride,\n      InputLabelProps,\n      inputProps,\n      InputProps,\n      inputRef,\n      label,\n      maxRows,\n      minRows,\n      multiline = false,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      required = false,\n      rows,\n      select = false,\n      SelectProps,\n      type,\n      value,\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n  const InputMore = {};\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n    InputMore.label = label;\n  }\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n    InputMore['aria-describedby'] = undefined;\n  }\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label != null && label !== '' && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n  /**\n   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.\n   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.\n   */\n  InputLabelProps: PropTypes.object,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/material-ui/api/filled-input/),\n   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n  /**\n   * Props applied to the [`Select`](/material-ui/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * The size of the component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;"],"names":["props","errors","name","customError","rest","_objectWithoutProperties","_excluded","error","helperText","has","first","fieldProps","_objectSpread","value","_jsx","TextField","size","variant","ToastNotification","status","message","options","toast","ToastNotificationContainer","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","draggableDirection","draggablePercent","handleClose","onConfirm","dispatch","useDispatch","profile","useSelector","state","users","user","_React$useState","React","_React$useState2","_slicedToArray","setError","_React$useState3","_React$useState4","background","setData","_React$useState5","_React$useState6","loading","setLoading","_jsxs","Box","children","encType","sx","height","ReactQuill","onChange","content","delta","source","editor","length","placeholder","style","backgroundColor","FormHelperText","align","p","borderRadius","mt","Button","onClick","color","ml","trim","formData","FormData","append","Http","then","res","data","code","updateUser","catch","err","handleSubmit","disabled","CircularProgress","thickness","axios","defaults","baseURL","process","headers","common","concat","localStorage","getItem","interceptors","response","use","Promise","reject","removeItem","window","location","href","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","TextFieldRoot","styled","FormControl","slot","overridesResolver","styles","root","inProps","ref","useThemeProps","autoComplete","_props$autoFocus","autoFocus","className","_props$color","defaultValue","_props$disabled","_props$error","FormHelperTextProps","_props$fullWidth","fullWidth","idOverride","id","InputLabelProps","inputProps","InputProps","inputRef","label","maxRows","minRows","_props$multiline","multiline","onBlur","onFocus","_props$required","required","rows","_props$select","select","SelectProps","type","_props$variant","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","getTextFieldUtilityClass","useUtilityClasses","InputMore","shrink","notched","native","undefined","useId","helperTextId","inputLabelId","InputComponent","InputElement","clsx","InputLabel","htmlFor","Select","labelId","input","generateUtilityClass","textFieldClasses","generateUtilityClasses"],"sourceRoot":""}