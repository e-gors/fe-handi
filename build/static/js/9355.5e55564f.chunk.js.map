{"version":3,"file":"static/js/9355.5e55564f.chunk.js","mappings":"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","sources":["components/FormField.js","components/ToastNotification.js","components/ToastNotificationContainer.js","components/options.js","modules/users/components/UpdateFullname.js","utils/Http.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction FormField(props) {\r\n  const { errors, name, customError, ...rest } = props;\r\n\r\n  let error = false;\r\n  let helperText = \"\";\r\n\r\n  if (customError) {\r\n    error = true;\r\n    helperText = customError;\r\n  }\r\n\r\n  if (errors) {\r\n    error = (errors && errors.has(name)) || false;\r\n    helperText = (errors && errors.first(name)) || \"\";\r\n  }\r\n\r\n  const fieldProps = {\r\n    error,\r\n    name,\r\n    helperText,\r\n    ...rest,\r\n    value: rest.value || \"\",\r\n  };\r\n\r\n  return <TextField size=\"small\" variant=\"outlined\" {...fieldProps} />;\r\n}\r\n\r\nexport default FormField;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport default function ToastNotification(status, message, options) {\r\n  if (status === \"success\") {\r\n    return toast.success(message, options);\r\n  }\r\n  return toast.error(message, options);\r\n}\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function ToastNotificationContainer() {\r\n  return (\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n      theme=\"colored\"\r\n    />\r\n  );\r\n}\r\n","export const options = {\r\n  position: \"top-right\",\r\n  autoClose: 3000,\r\n  hideProgressBar: false,\r\n  draggable: true,\r\n  draggableDirection: \"x\" | \"y\",\r\n  draggablePercent: 60,\r\n  theme: \"colored\",\r\n};\r\n","import { Box, Button, CircularProgress, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport FormField from \"../../../components/FormField\";\r\nimport Reevalidate from \"ree-validate-18\";\r\nimport Http from \"../../../utils/Http\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport ToastNotification from \"../../../components/ToastNotification\";\r\nimport { options } from \"../../../components/options\";\r\nimport { updateUser } from \"../../../redux/actions/userActions\";\r\nimport ToastNotificationContainer from \"../../../components/ToastNotificationContainer\";\r\n\r\nconst validator = new Reevalidate.Validator({\r\n  first_name: \"required\",\r\n  last_name: \"required\",\r\n});\r\n\r\nfunction UpdateFullname(props) {\r\n  const { full_name, handleClose, onConfirm } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [fullname, setFullname] = React.useState({\r\n    values: {\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n    },\r\n    errors: validator.errors,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (full_name) {\r\n      setFullname((prev) => ({\r\n        ...prev,\r\n        values: {\r\n          ...full_name,\r\n        },\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setFullname((prev) => ({\r\n      ...prev,\r\n      values: {\r\n        ...prev.values,\r\n        [name]: value,\r\n      },\r\n    }));\r\n\r\n    const { errors } = validator;\r\n\r\n    validator.validate(name, value).then((success) => {\r\n      if (!success) {\r\n        setFullname((prev) => ({\r\n          ...prev,\r\n          errors,\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n    Http.post(\"/update/fullname\", fullname.values)\r\n      .then((res) => {\r\n        if (res.data.code === 200) {\r\n          dispatch(updateUser(res.data.user));\r\n          ToastNotification(\"success\", res.data.message, options);\r\n          onConfirm();\r\n        } else {\r\n          ToastNotification(\"error\", res.data.message, options);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        ToastNotification(\"error\", err.message, options);\r\n      });\r\n  };\r\n\r\n  const handleValidate = () => {\r\n    validator.validateAll(fullname.values).then((success) => {\r\n      if (success) {\r\n        handleSubmit();\r\n      } else {\r\n        setFullname((prev) => ({\r\n          ...prev,\r\n          errors: validator.errors,\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <ToastNotificationContainer />\r\n      <Box>\r\n        <Typography>First Name *</Typography>\r\n        <FormField\r\n          fullWidth\r\n          label=\"First Name\"\r\n          name=\"first_name\"\r\n          value={fullname.values.first_name}\r\n          errors={fullname.errors}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n      <Box>\r\n        <Typography>Last Name *</Typography>\r\n        <FormField\r\n          fullWidth\r\n          label=\"Last Name\"\r\n          name=\"last_name\"\r\n          value={fullname.values.last_name}\r\n          errors={fullname.errors}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        align=\"right\"\r\n        sx={{ backgroundColor: \"#F4F5FB\", p: 2, borderRadius: 3, mt: 5 }}\r\n      >\r\n        <Button size=\"small\" variant=\"outlined\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          sx={{ ml: 1 }}\r\n          onClick={handleValidate}\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <CircularProgress size={24} sx={{ color: \"white\" }} thickness={5} />\r\n          ) : (\r\n            \"Save\"\r\n          )}\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default UpdateFullname;\r\n","import axios from \"axios\";\r\n\r\nconst Http = axios.create();\r\n\r\nHttp.defaults.baseURL = process.env.REACT_APP_API_DOMAIN;\r\nHttp.defaults.headers.common[\"Accept\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Content-Type\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Authorization\"] = `Bearer ${localStorage.getItem(\r\n  \"accessToken\"\r\n)}`;\r\n\r\nHttp.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    if (error.message === \"Network Error\") {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    switch (error.response && error.response.status) {\r\n      case 401:\r\n        localStorage.removeItem(\"accessToken\");\r\n        window.location.href = \"/login\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default Http;\r\n"],"names":["props","errors","name","customError","rest","_objectWithoutProperties","_excluded","error","helperText","has","first","fieldProps","_objectSpread","value","_jsx","TextField","size","variant","ToastNotification","status","message","options","toast","ToastNotificationContainer","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","draggableDirection","draggablePercent","validator","Reevalidate","first_name","last_name","full_name","handleClose","onConfirm","dispatch","useDispatch","_React$useState","React","_React$useState2","_slicedToArray","loading","setLoading","_React$useState3","values","_React$useState4","fullname","setFullname","prev","handleChange","e","target","_defineProperty","validate","then","success","_jsxs","Box","children","Typography","FormField","fullWidth","label","onChange","align","sx","backgroundColor","p","borderRadius","mt","Button","onClick","color","ml","validateAll","Http","res","data","code","updateUser","user","catch","err","disabled","CircularProgress","thickness","axios","defaults","baseURL","process","headers","common","concat","localStorage","getItem","interceptors","response","use","Promise","reject","removeItem","window","location","href"],"sourceRoot":""}