{"version":3,"file":"static/js/2970.3ff75f21.chunk.js","mappings":"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","sources":["components/FormField.js","components/ToastNotification.js","components/ToastNotificationContainer.js","components/options.js","modules/login/pages/Login.js","modules/login/service.js","utils/Http.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction FormField(props) {\r\n  const { errors, name, customError, ...rest } = props;\r\n\r\n  let error = false;\r\n  let helperText = \"\";\r\n\r\n  if (customError) {\r\n    error = true;\r\n    helperText = customError;\r\n  }\r\n\r\n  if (errors) {\r\n    error = (errors && errors.has(name)) || false;\r\n    helperText = (errors && errors.first(name)) || \"\";\r\n  }\r\n\r\n  const fieldProps = {\r\n    error,\r\n    name,\r\n    helperText,\r\n    ...rest,\r\n    value: rest.value || \"\",\r\n  };\r\n\r\n  return <TextField size=\"small\" variant=\"outlined\" {...fieldProps} />;\r\n}\r\n\r\nexport default FormField;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport default function ToastNotification(status, message, options) {\r\n  if (status === \"success\") {\r\n    return toast.success(message, options);\r\n  }\r\n  return toast.error(message, options);\r\n}\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function ToastNotificationContainer() {\r\n  return (\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n      theme=\"colored\"\r\n    />\r\n  );\r\n}\r\n","export const options = {\r\n  position: \"top-right\",\r\n  autoClose: 3000,\r\n  hideProgressBar: false,\r\n  draggable: true,\r\n  draggableDirection: \"x\" | \"y\",\r\n  draggablePercent: 60,\r\n  theme: \"colored\",\r\n};\r\n","/** @format */\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Link,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  InputAdornment,\r\n  CircularProgress,\r\n  IconButton,\r\n  FormGroup,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport Http from \"../../../utils/Http\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Favicon from \"../../../assets/images/favicon.png\";\r\nimport { isAuth } from \"../../../utils/helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as service from \"../service\";\r\nimport FormField from \"../../../components/FormField\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport ToastNotificationContainer from \"../../../components/ToastNotificationContainer\";\r\nimport ToastNotification from \"../../../components/ToastNotification\";\r\nimport ReeValidate from \"ree-validate-18\";\r\nimport { styles } from \"../../../assets/styles/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUser } from \"../../../redux/actions/userActions\";\r\nimport { options } from \"../../../components/options\";\r\n\r\nconst validator = new ReeValidate.Validator({\r\n  email: \"required|email\",\r\n  password: \"required\",\r\n});\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        {process.env.REACT_APP_NAME}\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [formValues, setFormValues] = React.useState({\r\n    values: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    errors: validator.errors,\r\n  });\r\n  const [checkStatus, setCheckStatus] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (isAuth()) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setFormValues((prev) => ({\r\n      ...prev,\r\n      values: {\r\n        ...prev.values,\r\n        [name]: value,\r\n      },\r\n    }));\r\n\r\n    const { errors } = validator;\r\n\r\n    validator.validate(name, value).then(() => {\r\n      setFormValues((prev) => ({\r\n        ...prev,\r\n        errors,\r\n      }));\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n    service\r\n      .login(formValues.values)\r\n      .then((res) => {\r\n        if (res.data.code === 200) {\r\n          Http.defaults.headers.common[\r\n            \"Authorization\"\r\n          ] = `Bearer ${res.data.access_token}`;\r\n          localStorage.removeItem(\"user\");\r\n          let user = res.data.user;\r\n          localStorage.setItem(\"accessToken\", res.data.access_token);\r\n          dispatch(setUser(user));\r\n          history.push(\"/dashboard\");\r\n        } else {\r\n          ToastNotification(\"error\", res.data.message, options);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        ToastNotification(\"error\", err.message, options);\r\n      });\r\n  };\r\n\r\n  const handleValidate = () => {\r\n    validator.validateAll(formValues.values).then((success) => {\r\n      if (success) {\r\n        handleSubmit();\r\n      } else {\r\n        setFormValues((prev) => ({\r\n          ...prev,\r\n          errors: validator.errors,\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleCheckChange = () => {\r\n    setCheckStatus(!checkStatus);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleValidate();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ToastNotificationContainer />\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box sx={styles.loginContentWrapper}>\r\n          <Avatar sx={styles.loginAvatar}>\r\n            <img src={Favicon} alt=\"Favicon\" />\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" sx={styles.loginForm}>\r\n            <FormField\r\n              onKeyPress={handleKeyPress}\r\n              required\r\n              name=\"email\"\r\n              errors={formValues.errors}\r\n              onChange={handleChange}\r\n              value={formValues.values.email}\r\n              size=\"small\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              InputProps={{\r\n                style: {\r\n                  background: \"rgba(255, 255, 255, 0.5)\",\r\n                  color: \"black\",\r\n                },\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <PersonIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <FormField\r\n              required\r\n              onKeyPress={handleKeyPress}\r\n              name=\"password\"\r\n              errors={formValues.errors}\r\n              value={formValues.values.password}\r\n              onChange={handleChange}\r\n              size=\"small\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Password\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              InputProps={{\r\n                style: {\r\n                  background: \"rgba(255, 255, 255, 0.5)\",\r\n                  coor: \"black\",\r\n                },\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <LockIcon />\r\n                  </InputAdornment>\r\n                ),\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {showPassword ? (\r\n                        <VisibilityOffIcon />\r\n                      ) : (\r\n                        <VisibilityIcon />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={checkStatus}\r\n                    onChange={handleCheckChange}\r\n                  />\r\n                }\r\n                label=\"Remember me\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </FormGroup>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={styles.loginSubmitButton}\r\n              onClick={handleValidate}\r\n              disabled={loading}\r\n            >\r\n              {loading ? <CircularProgress size={24} /> : \"Login\"}\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"/forgot-password\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/register\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={styles.copyright} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const login = (params) => {\r\n  return axios.post(`${process.env.REACT_APP_API_DOMAIN}/login`, params, {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst Http = axios.create();\r\n\r\nHttp.defaults.baseURL = process.env.REACT_APP_API_DOMAIN;\r\nHttp.defaults.headers.common[\"Accept\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Content-Type\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Authorization\"] = `Bearer ${localStorage.getItem(\r\n  \"accessToken\"\r\n)}`;\r\n\r\nHttp.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    if (error.message === \"Network Error\") {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    switch (error.response && error.response.status) {\r\n      case 401:\r\n        localStorage.removeItem(\"accessToken\");\r\n        window.location.href = \"/login\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default Http;\r\n"],"names":["props","errors","name","customError","rest","_objectWithoutProperties","_excluded","error","helperText","has","first","fieldProps","_objectSpread","value","_jsx","TextField","size","variant","ToastNotification","status","message","options","toast","ToastNotificationContainer","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","draggableDirection","draggablePercent","validator","ReeValidate","email","password","Copyright","_jsxs","Typography","color","align","children","Link","href","process","REACT_APP_NAME","Date","getFullYear","createTheme","Login","history","useHistory","dispatch","useDispatch","_React$useState","React","_React$useState2","_slicedToArray","showPassword","setShowPassword","_React$useState3","_React$useState4","loading","setLoading","_React$useState5","values","_React$useState6","formValues","setFormValues","_React$useState7","_React$useState8","checkStatus","setCheckStatus","isAuth","push","handleChange","e","target","prev","_defineProperty","validate","then","handleValidate","validateAll","success","service","res","data","code","Http","concat","access_token","localStorage","removeItem","user","setItem","setUser","catch","err","handleKeyPress","key","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","styles","Avatar","src","Favicon","alt","LockOutlinedIcon","FormField","onKeyPress","required","onChange","margin","fullWidth","id","label","autoComplete","autoFocus","InputProps","style","background","startAdornment","InputAdornment","PersonIcon","type","coor","LockIcon","endAdornment","IconButton","onClick","onMouseDown","event","preventDefault","VisibilityOffIcon","VisibilityIcon","FormGroup","FormControlLabel","control","Checkbox","checked","labelPlacement","Button","disabled","CircularProgress","Grid","container","item","xs","login","params","axios","REACT_APP_API_DOMAIN","headers","Accept","defaults","baseURL","common","getItem","interceptors","response","use","Promise","reject","window","location"],"sourceRoot":""}