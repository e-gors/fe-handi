{"version":3,"file":"static/js/6383.7f1a1e04.chunk.js","mappings":"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","sources":["components/FormField.js","components/ToastNotification.js","components/ToastNotificationContainer.js","components/options.js","modules/login/pages/LoginSide.js","modules/login/service.js","utils/Http.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction FormField(props) {\r\n  const { errors, name, customError, ...rest } = props;\r\n\r\n  let error = false;\r\n  let helperText = \"\";\r\n\r\n  if (customError) {\r\n    error = true;\r\n    helperText = customError;\r\n  }\r\n\r\n  if (errors) {\r\n    error = (errors && errors.has(name)) || false;\r\n    helperText = (errors && errors.first(name)) || \"\";\r\n  }\r\n\r\n  const fieldProps = {\r\n    error,\r\n    name,\r\n    helperText,\r\n    ...rest,\r\n    value: rest.value || \"\",\r\n  };\r\n\r\n  return <TextField size=\"small\" variant=\"outlined\" {...fieldProps} />;\r\n}\r\n\r\nexport default FormField;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport default function ToastNotification(status, message, options) {\r\n  if (status === \"success\") {\r\n    return toast.success(message, options);\r\n  }\r\n  return toast.error(message, options);\r\n}\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function ToastNotificationContainer() {\r\n  return (\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n      theme=\"colored\"\r\n    />\r\n  );\r\n}\r\n","export const options = {\r\n  position: \"top-right\",\r\n  autoClose: 3000,\r\n  hideProgressBar: false,\r\n  draggable: true,\r\n  draggableDirection: \"x\" | \"y\",\r\n  draggablePercent: 60,\r\n  theme: \"colored\",\r\n};\r\n","/** @format */\r\n\r\nimport * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport ReeValidate from \"ree-validate-18\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUser } from \"../../../redux/actions/userActions\";\r\nimport { options } from \"../../../components/options\";\r\nimport { isAuth } from \"../../../utils/helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as service from \"../service\";\r\nimport FormField from \"../../../components/FormField\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport ToastNotificationContainer from \"../../../components/ToastNotificationContainer\";\r\nimport ToastNotification from \"../../../components/ToastNotification\";\r\nimport Http from \"../../../utils/Http\";\r\nimport {\r\n  CircularProgress,\r\n  FormGroup,\r\n  IconButton,\r\n  InputAdornment,\r\n} from \"@mui/material\";\r\nimport { styles } from \"../../../assets/styles/styles\";\r\n\r\nconst validator = new ReeValidate.Validator({\r\n  email: \"required|email\",\r\n  password: \"required\",\r\n});\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        HandiWorks\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function LoginSide() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [formValues, setFormValues] = React.useState({\r\n    values: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    errors: validator.errors,\r\n  });\r\n  const [checkStatus, setCheckStatus] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (isAuth()) {\r\n      history.push(\"/dashboard/client\");\r\n    }\r\n  }, []);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setFormValues((prev) => ({\r\n      ...prev,\r\n      values: {\r\n        ...prev.values,\r\n        [name]: value,\r\n      },\r\n    }));\r\n\r\n    const { errors } = validator;\r\n\r\n    validator.validate(name, value).then(() => {\r\n      setFormValues((prev) => ({\r\n        ...prev,\r\n        errors,\r\n      }));\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n    service\r\n      .login(formValues.values)\r\n      .then((res) => {\r\n        if (res.data.code === 200) {\r\n          Http.defaults.headers.common[\r\n            \"Authorization\"\r\n          ] = `Bearer ${res.data.access_token}`;\r\n          const user = res.data.user;\r\n          localStorage.setItem(\"accessToken\", res.data.access_token);\r\n          localStorage.setItem(\"tokenExpiration\", res.data.expires_in);\r\n          dispatch(setUser(user));\r\n          if (user.role === \"Super Admin\") {\r\n            history.push(\"/admin/dashboard\");\r\n          } else {\r\n            history.push(\"/dashboard\");\r\n          }\r\n        } else {\r\n          ToastNotification(\"error\", res.data.message, options);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        ToastNotification(\"error\", err.message, options);\r\n      });\r\n  };\r\n\r\n  const handleValidate = () => {\r\n    validator.validateAll(formValues.values).then((success) => {\r\n      if (success) {\r\n        handleSubmit();\r\n      } else {\r\n        setFormValues((prev) => ({\r\n          ...prev,\r\n          errors: validator.errors,\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleCheckChange = () => {\r\n    setCheckStatus(!checkStatus);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleValidate();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ToastNotificationContainer />\r\n      <Grid container component=\"main\" sx={{ height: \"100vh\", mt: 8 }}>\r\n        <CssBaseline />\r\n        <Grid\r\n          item\r\n          xs={false}\r\n          sm={4}\r\n          md={7}\r\n          sx={{\r\n            backgroundImage:\r\n              \"url(https://img.freepik.com/premium-vector/happy-labour-day-construction-workers-are-working-building-labour-day-1-may-illustration_138260-738.jpg?w=2000)\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundColor: (t) =>\r\n              t.palette.mode === \"light\"\r\n                ? t.palette.grey[50]\r\n                : t.palette.grey[900],\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n          }}\r\n        />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <Box\r\n            sx={{\r\n              my: 8,\r\n              mx: 4,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <Box component=\"form\" sx={styles.loginForm}>\r\n              <FormField\r\n                onKeyPress={handleKeyPress}\r\n                required\r\n                name=\"email\"\r\n                errors={formValues.errors}\r\n                onChange={handleChange}\r\n                value={formValues.values.email}\r\n                size=\"small\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                InputProps={{\r\n                  style: {\r\n                    background: \"rgba(255, 255, 255, 0.5)\",\r\n                    color: \"black\",\r\n                  },\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <PersonIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n              <FormField\r\n                required\r\n                onKeyPress={handleKeyPress}\r\n                name=\"password\"\r\n                errors={formValues.errors}\r\n                value={formValues.values.password}\r\n                onChange={handleChange}\r\n                size=\"small\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                label=\"Password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                InputProps={{\r\n                  style: {\r\n                    background: \"rgba(255, 255, 255, 0.5)\",\r\n                    coor: \"black\",\r\n                  },\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <LockIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                      >\r\n                        {showPassword ? (\r\n                          <VisibilityOffIcon />\r\n                        ) : (\r\n                          <VisibilityIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={checkStatus}\r\n                      onChange={handleCheckChange}\r\n                    />\r\n                  }\r\n                  label=\"Remember me\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </FormGroup>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={styles.loginSubmitButton}\r\n                onClick={handleValidate}\r\n                disabled={loading}\r\n              >\r\n                {loading ? <CircularProgress size={24} /> : \"Login\"}\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link href=\"/forgot-password\" variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"/register\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n          <Copyright />\r\n        </Grid>\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const login = (params) => {\r\n  return axios.post(`${process.env.REACT_APP_API_DOMAIN}/login`, params, {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst Http = axios.create();\r\n\r\nHttp.defaults.baseURL = process.env.REACT_APP_API_DOMAIN;\r\nHttp.defaults.headers.common[\"Accept\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Content-Type\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Authorization\"] = `Bearer ${localStorage.getItem(\r\n  \"accessToken\"\r\n)}`;\r\n\r\nHttp.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    if (error.message === \"Network Error\") {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    switch (error.response && error.response.status) {\r\n      case 401:\r\n        localStorage.removeItem(\"accessToken\");\r\n        window.location.href = \"/login\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default Http;\r\n"],"names":["props","errors","name","customError","rest","_objectWithoutProperties","_excluded","error","helperText","has","first","fieldProps","_objectSpread","value","_jsx","TextField","size","variant","ToastNotification","status","message","options","toast","ToastNotificationContainer","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","draggableDirection","draggablePercent","validator","ReeValidate","email","password","Copyright","_jsxs","Typography","color","align","children","Link","href","Date","getFullYear","createTheme","LoginSide","history","useHistory","dispatch","useDispatch","_React$useState","React","_React$useState2","_slicedToArray","showPassword","setShowPassword","_React$useState3","_React$useState4","loading","setLoading","_React$useState5","values","_React$useState6","formValues","setFormValues","_React$useState7","_React$useState8","checkStatus","setCheckStatus","isAuth","push","handleChange","e","target","prev","_defineProperty","validate","then","handleValidate","validateAll","success","service","res","data","code","Http","concat","access_token","user","localStorage","setItem","expires_in","setUser","role","catch","err","handleKeyPress","key","ThemeProvider","Grid","container","component","sx","height","mt","CssBaseline","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","Box","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","styles","FormField","onKeyPress","required","onChange","margin","fullWidth","id","label","autoComplete","autoFocus","InputProps","style","background","startAdornment","InputAdornment","PersonIcon","type","coor","LockIcon","endAdornment","IconButton","onClick","onMouseDown","event","preventDefault","VisibilityOffIcon","VisibilityIcon","FormGroup","FormControlLabel","control","Checkbox","checked","labelPlacement","Button","disabled","CircularProgress","login","params","axios","process","headers","Accept","defaults","baseURL","common","getItem","interceptors","response","use","Promise","reject","removeItem","window","location"],"sourceRoot":""}