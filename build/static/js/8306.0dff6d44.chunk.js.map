{"version":3,"file":"static/js/8306.0dff6d44.chunk.js","mappings":"uOA8BA,UA3BA,SAAmBA,GACjB,IAAQC,EAAuCD,EAAvCC,OAAQC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,YAAgBC,GAAIC,EAAAA,EAAAA,GAAKL,EAAKM,GAEhDC,GAAQ,EACRC,EAAa,GAEbL,IACFI,GAAQ,EACRC,EAAaL,GAGXF,IACFM,EAASN,GAAUA,EAAOQ,IAAIP,KAAU,EACxCM,EAAcP,GAAUA,EAAOS,MAAMR,IAAU,IAGjD,IAAMS,GAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACdL,MAAAA,EACAL,KAAAA,EACAM,WAAAA,GACGJ,GAAI,IACPS,MAAOT,EAAKS,OAAS,KAGvB,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,GAASH,EAAAA,EAAAA,GAAA,CAACI,KAAK,QAAQC,QAAQ,YAAeN,GACxD,C,0NCoDA,UArEA,SAAwBX,GACtB,IACEkB,EAOElB,EAPFkB,MACAjB,EAMED,EANFC,OAAMkB,EAMJnB,EALFoB,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EAAAE,EAKVrB,EAJFsB,WAAAA,OAAU,IAAAD,EAAG,GAAEA,EAAAE,EAIbvB,EAHFwB,cAAAA,OAAa,IAAAD,EAAG,GAAEA,EAClBpB,EAEEH,EAFFG,YACGC,GAAIC,EAAAA,EAAAA,GACLL,EAAKM,GAELC,GAAQ,EACRC,EAAa,GAGbL,IACFI,EAAQJ,EAAYI,QAAS,EAC7BC,EAAaL,EAAYsB,SAAW,IAGlCxB,IACFM,EAASN,GAAUA,EAAOQ,IAAIT,EAAME,QAAU,EAC9CM,EAAcP,GAAUA,EAAOS,MAAMV,EAAME,OAAU,IAGvD,IAAMwB,GAAQd,EAAAA,EAAAA,GAAA,CACZe,OAAQ,QACRpB,MAAAA,GACGH,GAGL,OACEwB,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CACVb,KAAK,QACLc,GAAI,CACFC,MAAO,OACPC,GAAI,GACJC,GAAI,IACJC,SAAA,EAEFpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAU,CAACC,GAAG,iBAAgBF,SAAEhB,KACjCU,EAAAA,EAAAA,MAACS,EAAAA,GAAMzB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACL0B,QAAQ,iBACRC,OAAOzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAa,CAACtB,MAAOA,KACzBQ,GAAQ,IAAAQ,SAAA,CAEXd,EAAQqB,KAAI,SAACC,EAAQC,GAAC,OACrB7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAQ,CAAS/B,MAAO6B,EAAOR,SAC7BQ,GADYC,EAEJ,IAEZrB,EAAWmB,KAAI,SAACI,EAAUF,GAAC,OAC1B7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAQ,CAAS/B,MAAOgC,EAAS3C,KAAKgC,SACpCW,EAAS3C,MADGyC,EAEJ,IAEZnB,EAAciB,KAAI,SAACI,GAAQ,OAC1BA,EAASX,SAASO,KAAI,SAACK,EAAOH,GAAC,OAC7B7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAQ,CAAS/B,MAAOiC,EAAM5C,KAAKgC,SACjCY,EAAM5C,MADMyC,EAEJ,GACX,SAGN7B,EAAAA,EAAAA,KAACiC,EAAAA,EAAc,CAACxC,OAAK,EAAA2B,SAAE1B,MAG7B,C,mFC5Ee,SAASwC,EAAkBC,EAAQxB,EAASL,GACzD,MAAe,YAAX6B,EACKC,EAAAA,GAAAA,QAAczB,EAASL,GAEzB8B,EAAAA,GAAAA,MAAYzB,EAASL,EAC9B,C,yGCJe,SAAS+B,IACtB,OACErC,EAAAA,EAAAA,KAACsC,EAAAA,GAAc,CACbC,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,MAAM,WAGZ,C,qEClBO,IAAM1C,EAAU,CACrBiC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBK,WAAW,EACXG,mBAAoB,EACpBC,iBAAkB,GAClBF,MAAO,U,2gBCmCHG,EAAY,IAAIC,EAAAA,GAAAA,UAAsB,CAC1CC,KAAM,WACNC,KAAM,WACNC,OAAQ,WACRC,KAAM,WACNC,MAAO,iBAGHD,EAAO,CACX,WACA,aACA,aACA,aACA,aAGIE,EAAS,CACbC,QAAS,CAAEzC,GAAI,EAAG0C,EAAG,GACrBC,KAAM,CACJC,SAAU,IACVC,gBAAiB,UACjBC,EAAG,YACHC,UAAW,GAEbC,aAAc,CACZhD,GAAI,EACJC,GAAI,EAEJ,aAAc,CACZgD,OAAQ,MAGZC,iBAAkB,CAAElD,GAAI,EAAGC,GAAI,GAC/BkD,iBAAkB,CAChBpD,MAAO,OACPqD,OAAQ,qBACRV,EAAG,EACHW,OAAQ,UACRC,aAAc,EAEd,UAAW,CACTF,OAAQ,mBAEVP,gBAAiB,SAEnBU,oBAAqB,CACnBC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,SAAU,CAAEC,GAAI,OAAQC,GAAI,WAE9BC,aAAc,CACZC,SAAU,GACVC,UAAW,UAEbC,OAAQ,CACNC,GAAI,CAAEN,GAAI,EAAGO,GAAI,EAAGN,GAAI,GACxB9D,MAAO,CAAE6D,GAAI,OAAQO,GAAI,OAAQN,GAAI,SAEvCO,qBAAsB,CAAEL,SAAU,GAAIM,MAAO,QAC7CC,YAAa,CAAEP,SAAU,UAAW9D,GAAI,EAAGoE,MAAO,WAClDE,SAAU,CAAER,SAAU,UAAWM,MAAO,WACxCG,2BAA4B,CAAEhB,QAAS,OAAQC,WAAY,SAAUzD,GAAI,GACzEyE,YAAa,CAAEV,SAAU,GAAIM,MAAO,WACpCK,UAAW,CAAE5B,EAAG,GAAKiB,SAAU,UAAWM,MAAO,WACjDM,sBAAuB,CACrBnB,QAAS,OACToB,UAAW,SACXlC,EAAG,EAEH,sBAAuB,CACrBc,QAAS,SAGbqB,WAAY,CACVR,MAAO,MACPb,QAAS,QAEXsB,aAAc,CACZZ,GAAI,EACJ,UAAW,CACT,UAAW,CACTV,QAAS,WAIfuB,MAAO,CACLhF,MAAO,IACPkD,OAAQ,IACRG,OAAQ,oBACRE,aAAc,EAEd,UAAW,CACTF,OAAQ,kBACRL,UAAW,KAGfiC,mBAAoB,CAClBd,GAAI,EACJnE,MAAO,IACPkF,SAAU,IACVhC,OAAQ,IACRG,OAAQ,qBACRV,EAAG,EACHW,OAAQ,UACRC,aAAc,EACdE,QAAS,OACTC,WAAY,SACZC,eAAgB,SAEhB,UAAW,CACTN,OAAQ,kBAER,aAAc,CACZiB,MAAO,SAGXxB,gBAAiB,YAIfqC,EAAa,GAguBnB,UA9tBA,WAAwB,IAADC,EAAAC,EACfC,EAAqD,QAAhDF,GAAGG,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,MAAMC,KAAKC,IAAI,WAAC,IAAAP,EAAAA,EAAI,GAEzDQ,GAAUC,EAAAA,EAAAA,MAEVC,IADWC,EAAAA,EAAAA,OACSC,EAAAA,EAAAA,QAAO,OAEjCC,EAA4BC,EAAAA,SAAe,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,GAAFF,EAAA,GAAWA,EAAA,IACxBG,GAA8BJ,EAAAA,SAAe,IAAGK,IAAAH,EAAAA,EAAAA,GAAAE,GAAA,GAAzCE,GAAOD,GAAA,GAAEE,GAAUF,GAAA,GAC1BG,GAA8CR,EAAAA,UAAe,GAAMS,IAAAP,EAAAA,EAAAA,GAAAM,GAAA,GAA5DE,GAAeD,GAAA,GAAEE,GAAkBF,GAAA,GAC1CG,GAA8BZ,EAAAA,UAAe,GAAMa,IAAAX,EAAAA,EAAAA,GAAAU,GAAA,GAA5CE,GAAOD,GAAA,GAAEE,GAAUF,GAAA,GAC1BG,GAA0ChB,EAAAA,UAAe,GAAMiB,IAAAf,EAAAA,EAAAA,GAAAc,GAAA,GAAxDE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GACtCG,GAAwCpB,EAAAA,SAAe,CAAC,GAAEqB,IAAAnB,EAAAA,EAAAA,GAAAkB,GAAA,GAAnDE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,GAAsCxB,EAAAA,SAAe,IAAGyB,IAAAvB,EAAAA,EAAAA,GAAAsB,GAAA,GAAjDE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,GAA4B5B,EAAAA,SAAe,IAAG6B,IAAA3B,EAAAA,EAAAA,GAAA0B,GAAA,GAAvCE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GACxBG,GAAoChC,EAAAA,SAAe,CACjDiC,OAAQ,CACNC,WAAY,GACZC,KAAM,GACN7F,MAAO,GACPH,KAAM,GACNE,KAAM,GACNH,KAAM,cAERlE,OAAQgE,EAAUhE,SAClBoK,IAAAlC,EAAAA,EAAAA,GAAA8B,GAAA,GAVKK,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAWhCG,GAA4BvC,EAAAA,UAAe,GAAMwC,IAAAtC,EAAAA,EAAAA,GAAAqC,GAAA,GAA1CE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GAExBxC,EAAAA,WAAgB,WACd2C,IACF,GAAG,IAEH,IAAMA,GAAe,WACnBxB,IAAiB,GACjByB,EAAAA,QAAAA,IACO,iBACJC,MAAK,SAACC,GACDA,EAAIC,KAAKA,MACXxC,GAAWuC,EAAIC,KAAKA,MAEtB5B,IAAiB,EACnB,IACC6B,OAAM,SAACC,GACN9B,IAAiB,GACjB+B,QAAQC,KAAKF,EAAIzJ,QACnB,GACJ,EAEM0C,GAAOmG,GAAWJ,OAAO/F,KAC/B8D,EAAAA,WAAgB,WACD,eAAT9D,IACFoG,IAAc,SAACc,GAAI,OAAAzK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdyK,GAAI,IACPnB,OAAQ,CACNC,WAAYkB,EAAKnB,OAAOC,WACxBC,KAAMiB,EAAKnB,OAAOE,KAClB7F,MAAO8G,EAAKnB,OAAO3F,MACnBH,KAAMiH,EAAKnB,OAAO9F,KAClBE,KAAM+G,EAAKnB,OAAO5F,KAClBH,KAAMkH,EAAKnB,OAAO/F,OACnB,IAGQ,eAATA,IACFoG,IAAc,SAACc,GAAI,OAAAzK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdyK,GAAI,IACPnB,OAAQ,CACNC,WAAYkB,EAAKnB,OAAOC,WACxBC,KAAMiB,EAAKnB,OAAOE,KAClB7F,MAAO8G,EAAKnB,OAAO3F,MACnBJ,KAAMkH,EAAKnB,OAAO/F,KAClBE,OAAQ,KACT,GAGP,GAAG,CAACF,KAEJ,IAAMmH,GAAyB,SAACC,GAC9B,IAAMrL,EAAOqL,EAAEC,OAAOtL,KAChBW,EAAQ0K,EAAEC,OAAO3K,MAEvB0J,IAAc,SAACc,GAAI,OAAAzK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdyK,GAAI,IACPnB,QAAMtJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDyK,EAAKnB,QAAM,IAAAuB,EAAAA,EAAAA,GAAA,GACbvL,EAAOW,KACT,IAGH,IAAQZ,EAAWgE,EAAXhE,OAERgE,EAAUyH,SAASxL,EAAMW,GAAOiK,MAAK,SAACa,GAC/BA,GACHpB,IAAc,SAACc,GAAI,OAAAzK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdyK,GAAI,IACPpL,OAAQA,GAAM,GAGpB,GACF,EA0DM2L,GAAc,SAACC,GACnB,IAAMC,GAASC,EAAAA,EAAAA,GAAOhC,IACtB+B,EAAUE,OAAOH,EAAO,GACxB7B,GAAU8B,EACZ,EAEMG,GAAqB,SAACC,EAAOrL,GACjCuH,EAAUvH,EACZ,EAgBMsL,GAAa,SAACC,GAClB,IAAMC,GAAiBC,EAAAA,EAAAA,aAAYhC,GAAWJ,OAAOkC,IACrD7B,IAAc,SAACgC,GAAS,OAAA3L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnB2L,GAAS,IACZrC,QAAMtJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACD2L,EAAUrC,QAAM,IAAAuB,EAAAA,EAAAA,GAAA,GAClBW,EAAYC,KACd,GAEL,EAEMG,GAAuB,WAC3B7B,IAAWD,GACb,EAkEM+B,GAA6B,QAAvBrF,EAAGmC,GAAamD,eAAO,IAAAtF,OAAA,EAApBA,EAAsBqF,OAC/BE,GACJF,GAAS,EACLlD,GAAamD,QAAQE,QAAO,SAACC,EAAKC,GAAM,OAAKD,EAAMC,EAAOA,MAAM,GAAE,GAClEL,GACA,EAEN,OACE7K,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI0C,EAAOC,QAAQvC,SAAA,EACtBpB,EAAAA,EAAAA,KAACkM,EAAAA,QAAiB,CAChBC,KAAMtE,GACNuE,QAAS,kBAAMtE,IAAmB,EAAM,EACxCnH,QAAQ,kCACR0L,UAAW,kBAAMxF,EAAQyF,QAAQ,EACjC7I,MAAM,gBAERzD,EAAAA,EAAAA,KAACqC,EAAAA,QAA0B,KAC3BvB,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI0C,EAAOG,KAAKzC,SAAA,EACnBN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI,CAAE4C,EAAG,GAAIxC,SAAA,EAChBpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACvL,GAAI,CAAEwL,WAAY,OAAQvH,SAAU,CAAEH,GAAI,GAAIC,GAAI,KAAO3D,SAAC,kBAGtEN,EAAAA,EAAAA,MAACyL,EAAAA,EAAU,CAAAnL,SAAA,CAAC,gCACoBqL,aAA2B,WAG7DzM,EAAAA,EAAAA,KAACiM,EAAAA,EAAG,CAACjL,GAAI,CAAE+C,gBAAiB,UAAWH,EAAG,GAAIxC,UAC5CpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAAAnL,SAAC,yBAEdN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI,CAAEE,GAAI,EAAG0C,EAAG,GAAIxC,SAAA,EACvBpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAAAnL,SAAC,kBACZpB,EAAAA,EAAAA,KAAC0M,EAAAA,EAAY,CACXtN,KAAK,aACLc,KAAK,QACL+H,QAASI,GACT/H,QAASmH,GACTkF,eAAgB,SAACC,GAAM,OAAKA,EAAOC,QAAQ,EAC3CC,YAAa,SAACC,GAAM,OAClB/M,EAAAA,EAAAA,KAACgN,EAAAA,SAASlN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACRI,KAAK,SACD6M,GAAM,IACV3M,MAAM,aACND,QAAQ,WACRJ,MAAO0I,GAAeA,GAAaoE,SAAW,KAC9C,EAEJI,SA3IuB,SAACxC,EAAGyC,GACnCxE,GAAgBwE,EAClB,IA2ISzE,IAAgBA,GAAa0E,UAC5BrM,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CACFjL,GAAI,CACFE,GAAI,EACJC,GAAI,EACJuD,QAAS,OACTE,eAAgB,iBAChBxD,SAAA,EAEFN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI,CAAE0D,QAAS,QAAStD,SAAA,EAC3BpB,EAAAA,EAAAA,KAACoN,EAAAA,EAAM,CACLC,IAAK5E,IAAgBA,GAAaoE,SAClCS,IACE7E,IACAA,GAAa0E,SACb1E,GAAa0E,QAAQ,IACrB1E,GAAa0E,QAAQ,GAAGI,eAG5BzM,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI,CAAEoE,GAAI,GAAIhE,SAAA,EACjBpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACvL,GAAI,CAAEwL,WAAY,OAAQvH,SAAU,IAAK7D,SAClDqH,IAAgBA,GAAaoE,WAE/BpE,IACCA,GAAa0E,SACb1E,GAAa0E,QAAQK,QACnBxN,EAAAA,EAAAA,KAAA,OACEyN,MAAO,CAAExI,SAAU,IACnByI,wBAAyB,CACvBC,OACElF,IACAA,GAAa0E,SACb1E,GAAa0E,QAAQK,SAI9B/E,IACCA,GAAa0E,SACkB,OAA/B1E,GAAa0E,QAAQK,QACnBxN,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACvL,GAAI,CAAEiE,SAAU,IAAK7D,SAAC,0CAM1CN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI,CAAE0D,QAAS,QAAStD,SAAA,EAC3BN,EAAAA,EAAAA,MAACyL,EAAAA,EAAU,CAACvL,GAAI,CAAE4M,GAAI,EAAGpB,WAAY,QAASpL,SAAA,CAC3CqH,IACDA,GAAa0E,SACb1E,GAAa0E,QAAQU,WACjBpF,GAAa0E,QAAQU,WACrB,EAAG,IAAI,UAGb/M,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI,CAAE0D,QAAS,QAAStD,SAAA,EAC3BpB,EAAAA,EAAAA,KAAC8N,EAAAA,EAAc,KACf9N,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACvL,GAAI,CAAEwL,WAAY,QAASpL,SACpCyK,IAAgC,cAM3C7L,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAAAnL,SAAC,mBACZpB,EAAAA,EAAAA,KAAC0M,EAAAA,EAAY,CACXtN,KAAK,OACLc,KAAK,QACLI,QAASiG,EACToG,eAAgB,SAACrD,GAAI,OAAKA,EAAK7F,KAAK,EACpCqJ,YAAa,SAACC,GAAM,OAClB/M,EAAAA,EAAAA,KAACgN,EAAAA,SAASlN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACRI,KAAK,SACD6M,GAAM,IACV3M,MAAM,cACNhB,KAAK,OACLe,QAAQ,WACRJ,MAAOyJ,GAAWJ,OAAOE,KACzB2D,SAAU9B,KACV,EAEJ8B,SAzNe,SAACxC,EAAGyC,GAC3BzD,IAAc,SAACc,GAAI,OAAAzK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdyK,GAAI,IACPnB,QAAMtJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDyK,EAAKnB,QAAM,IACdE,KAAM4D,EAAOA,EAAK5L,GAAK,QACxB,GAEL,KAmNQtB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAAAnL,SAAC,aACZpB,EAAAA,EAAAA,KAACgN,EAAAA,QAAS,CACR5N,KAAK,QACLgB,MACEoJ,GAAWJ,OAAOE,KAAO,4BAA8B,QAEzDyE,WAAS,EACThO,MAAOyJ,GAAWJ,OAAOE,KAAO,GAAKE,GAAWJ,OAAO3F,MACvDtE,OAAQqK,GAAWrK,OACnB8N,SAAUzC,GACVwD,WAAUxE,GAAWJ,OAAOE,WAGhCtJ,EAAAA,EAAAA,KAACiM,EAAAA,EAAG,CAACjL,GAAI,CAAE+C,gBAAiB,UAAWH,EAAG,GAAIxC,UAC5CpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAAAnL,SAAC,qBAGdN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI,CAAE4C,EAAG,GAAIxC,SAAA,EAChBN,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAAAK,SAAA,EACVpB,EAAAA,EAAAA,KAACiO,EAAAA,EAAS,CAAC3M,GAAG,YAAWF,SAAC,oBAC1BN,EAAAA,EAAAA,MAACoN,EAAAA,EAAU,CACTC,KAAG,EACH,kBAAgB,YAChB/O,KAAK,OACLW,MAAOyJ,GAAWJ,OAAO/F,KACzB4J,SAAUzC,GAAuBpJ,SAAA,EAEjCpB,EAAAA,EAAAA,KAACoO,EAAAA,EAAgB,CACfrO,MAAM,aACNsO,SAASrO,EAAAA,EAAAA,KAACsO,EAAAA,EAAK,IACflO,MAAM,oBAERJ,EAAAA,EAAAA,KAACoO,EAAAA,EAAgB,CACfrO,MAAM,aACNsO,SAASrO,EAAAA,EAAAA,KAACsO,EAAAA,EAAK,IACflO,MAAM,sBAIXoJ,IAAyC,eAA3BA,GAAWJ,OAAO/F,OAC/BvC,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CACFjL,GAAI,CACF+C,gBAAiB,UACjBS,aAAc,EACdP,UAAW,EACXL,EAAG,GACHxC,SAAA,EAEFpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAAAnL,SAAC,sHAIZN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI,CAAEoE,GAAI,GAAIhE,SAAA,EACjBpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACgC,UAAU,KAAInN,SAAC,2CAG3BpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACgC,UAAU,KAAInN,SAAC,8CAG3BpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACgC,UAAU,KAAInN,SAAC,yGAI3BpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACgC,UAAU,KAAInN,SAAC,uGAOhCoI,IAAyC,eAA3BA,GAAWJ,OAAO/F,OAC/BrD,EAAAA,EAAAA,KAACiM,EAAAA,EAAG,CACFjL,GAAI,CACF+C,gBAAiB,UACjBS,aAAc,EACdP,UAAW,EACXL,EAAG,GACHxC,UAEFpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAAAnL,SAAC,gMASlBpB,EAAAA,EAAAA,KAACiM,EAAAA,EAAG,CAACjL,GAAI,CAAE4C,EAAG,GAAIxC,UAChBN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAAA7K,SAAA,CACDoI,IAAyC,eAA3BA,GAAWJ,OAAO/F,OAC/BrD,EAAAA,EAAAA,KAACiM,EAAAA,EAAG,CAACjL,GAAI,CAAEE,GAAI,EAAGC,GAAI,GAAIC,UACxBN,EAAAA,EAAAA,MAAC0N,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEtN,SAAA,EACzBpB,EAAAA,EAAAA,KAACwO,EAAAA,GAAI,CAACtB,MAAI,EAACpI,GAAI,GAAIO,GAAI,EAAGN,GAAI,EAAE3D,UAC9BN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAAA7K,SAAA,EACFpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAAAnL,SAAC,sBACZpB,EAAAA,EAAAA,KAACiC,EAAAA,EAAc,CAAAb,SAAC,iCAGhBpB,EAAAA,EAAAA,KAAC2O,EAAAA,QAAc,CACbvO,MAAM,kBACNhB,KAAK,OACLD,OAAQqK,GAAWrK,OACnBY,MAAOyJ,GAAWJ,OAAO5F,KACzByJ,SAAUzC,GACVlK,QAASkD,EACToL,UAAQ,UAId5O,EAAAA,EAAAA,KAACwO,EAAAA,GAAI,CAACtB,MAAI,EAACpI,GAAI,GAAIO,GAAI,EAAGN,GAAI,EAAE3D,UAC9BN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI,CAAEE,GAAI,IAAME,SAAA,EACnBpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAAAnL,SAAC,sBACZpB,EAAAA,EAAAA,KAACiC,EAAAA,EAAc,CAAAb,SAAC,yCAGhBpB,EAAAA,EAAAA,KAACgN,EAAAA,QAAS,CACRe,WAAS,EACT3N,MAAM,iBACNhB,KAAK,OACLD,OAAQqK,GAAWrK,OACnBY,MAAOyJ,GAAWJ,OAAO9F,KACzBuL,OAAQ,kBAAMxD,GAAW,OAAO,EAChC4B,SAAUzC,GACVoE,UAAQ,EACRE,WAAY,CACVC,gBACE/O,EAAAA,EAAAA,KAACgP,EAAAA,EAAc,CAACzM,SAAS,QAAOnB,SAAC,wBAShDoI,IAAyC,eAA3BA,GAAWJ,OAAO/F,OAC/BvC,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI,CAAEE,GAAI,GAAIE,SAAA,EACjBpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAAAnL,SAAC,wBACZpB,EAAAA,EAAAA,KAACiC,EAAAA,EAAc,CAAAb,SAAC,iDAGhBpB,EAAAA,EAAAA,KAACgN,EAAAA,QAAS,CACR5N,KAAK,SACLgB,MAAM,mBACNL,MAAOyJ,GAAWJ,OAAO7F,OACzBsL,OAAQ,kBAAMxD,GAAW,SAAS,EAClC4B,SAAUzC,GACVrL,OAAQqK,GAAWrK,OACnB2P,WAAY,CACVC,gBACE/O,EAAAA,EAAAA,KAACgP,EAAAA,EAAc,CAACzM,SAAS,QAAOnB,SAAC,kBAO3CN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI,CAAEE,GAAI,EAAGwD,QAAS,OAAQC,WAAY,UAAWvD,SAAA,EACxDpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CACTvL,GAAI,CAAEuD,OAAQ,WACd0K,QAASvD,GAAqBtK,SAC/B,4BAGDpB,EAAAA,EAAAA,KAAA,QACEyN,MAAO,CACLyB,WAAY,sBACZC,UAAWvF,GAAS,iBAAmB,eACvCwF,WAAY,OACZhO,UAEFpB,EAAAA,EAAAA,KAACqP,EAAAA,EAAU,CAACJ,QAASvD,GAAqBtK,SACtCwI,IAAiC5J,EAAAA,EAAAA,KAACsP,EAAAA,EAAe,KAAxCtP,EAAAA,EAAAA,KAACuP,EAAAA,EAAiB,WAKlC3F,KACC9I,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAAA7K,SAAA,EACFN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI0C,EAAOQ,aAAa9C,SAAA,EAC3BpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAAAnL,SAAC,uBACZpB,EAAAA,EAAAA,KAACiC,EAAAA,EAAc,CAACjB,GAAI0C,EAAOU,iBAAiBhD,SAAC,sGAI7CpB,EAAAA,EAAAA,KAACwP,IAAU,CACTxM,MAAM,OACN5D,KAAK,kBACLW,MAAO8I,GACPoE,SAheiB,SAACwC,EAASC,EAAOC,EAAQC,GAC1D9G,GAAe2G,EACjB,EA+dkBI,YAAY,kDACZpC,MAAO,CAAE1J,gBAAiB,eAI9BjD,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CACFsC,UAAU,OACVuB,QAAQ,sBACR9O,GAAI0C,EAAOW,iBACX0L,WApcO,SAACtF,GACtBA,EAAEuF,gBACJ,EAmcgBC,OAjcG,SAACxF,GAClBA,EAAEuF,iBACF,IAAME,EAAWC,MAAMC,KAAK3F,EAAE4F,aAAaC,OACvBrH,GAAO0C,OAASuE,EAASvE,OAC3BvF,GAChBlE,EAAAA,EAAAA,SACE,QAAQ,uBAADqO,OACgBnK,EAAU,YACjC9F,EAAAA,SAIJ4I,IAAU,SAACsH,GAAS,SAAAD,QAAAtF,EAAAA,EAAAA,GAASuF,GAAcN,EAAQ,GACrD,EAobmC9O,SAAA,EAEnBpB,EAAAA,EAAAA,KAAA,SACEsB,GAAG,kBACH+B,KAAK,OACLoN,OAAO,UACPC,UAAQ,EACRjD,MAAO,CAAE/I,QAAS,QAClBuI,SA/eiB,SAACxC,GAClC,IAAM6F,EAAQ7F,EAAEC,OAAO4F,MACjBtF,EAAY,GAClB,GAAIsF,GAASA,EAAM3E,OAAS,EAAG,CAI7B,IAHA,IAAMgF,EAAc1H,GAAO0C,OAAS2E,EAAM3E,OACpCiF,EACJD,EAAcvK,EAAaA,EAAa6C,GAAO0C,OAAS2E,EAAM3E,OAAOkF,EAAA,SAAAhP,GAErE,IAAMiP,EAAS,IAAIC,WACnBD,EAAOE,cAAcV,EAAMzO,IAC3BiP,EAAOG,OAAS,WACd,IAAMC,EAAWJ,EAAOK,OAClBC,EAAY,IAAIC,KAAK,CAACf,EAAMzO,IAAKyO,EAAMzO,GAAGzC,KAAM,CACpDiE,KAAM,eAER2H,EAAUsG,KAAK,CACbC,KAAMH,EACNI,IAAKN,IAEHlG,EAAUW,SAAWiF,GACvB1H,GAAU,GAADqH,QAAAtF,EAAAA,EAAAA,GAAKhC,IAAW+B,GAE7B,CACF,EAhBSnJ,EAAI,EAAGA,EAAI+O,EAAO/O,IAAGgP,EAAAhP,GAiB1B8O,EAAcvK,IAChBlE,EAAAA,EAAAA,SACE,QAAQ,uBAADqO,OACgBnK,EAAU,YACjC9F,EAAAA,QAGN,CACF,KAidgBN,EAAAA,EAAAA,KAACiM,EAAAA,EAAG,CACFsC,UAAU,QACVkD,QAAQ,kBACRzQ,GAAI,CAAEuD,OAAQ,WAAYnD,SAEzB6H,IAA4B,IAAlBA,GAAO0C,SAChB7K,EAAAA,EAAAA,MAAC0N,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG1N,GAAI,CAAE2D,WAAY,UAAWvD,SAAA,EACvDpB,EAAAA,EAAAA,KAACwO,EAAAA,GAAI,CAACtB,MAAI,EAACpI,GAAI,GAAIO,GAAI,EAAGN,GAAI,EAAE3D,UAC9BN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACyF,MAAM,SAAQtQ,SAAA,EACjBpB,EAAAA,EAAAA,KAAC2R,EAAAA,EAAe,CACd3Q,GAAI,CAAEiE,SAAU,GAAIM,MAAO,WAE7BzE,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI0C,EAAOe,oBAAqBiN,MAAM,SAAQtQ,SAAA,EACjDpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACvL,GAAI0C,EAAOsB,aAAa5D,SAAC,2BAGrCpB,EAAAA,EAAAA,KAAC4R,EAAAA,EAAM,CACL1R,KAAK,QACLC,QAAQ,YACRoF,MAAM,UACNvE,GAAI0C,EAAOyB,OACXoJ,UAAU,QACVkD,QAAQ,kBAAiBrQ,SAC1B,oBAMPpB,EAAAA,EAAAA,KAACwO,EAAAA,GAAI,CAACtB,MAAI,EAACpI,GAAI,GAAIO,GAAI,EAAGN,GAAI,EAAE3D,UAC9BN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI0C,EAAO4B,qBAAqBlE,SAAA,EACnCpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACvL,GAAI0C,EAAO8B,YAAYpE,SAAC,4BAGpCN,EAAAA,EAAAA,MAACyL,EAAAA,EAAU,CAACvL,GAAI0C,EAAO+B,SAASrE,SAAA,CAAC,yGAG3BpB,EAAAA,EAAAA,KAAA,QAAAoB,SAAM,yBAGZN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI0C,EAAOgC,2BAA2BtE,SAAA,EACzCpB,EAAAA,EAAAA,KAAC6R,EAAAA,EAAW,CAAC7Q,GAAI0C,EAAOiC,eACxB7E,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAAA7K,SAAA,EACFpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACvL,GAAI0C,EAAO+B,SAASrE,SAAC,yBAGjCN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI,CAAE0D,QAAS,QAAStD,SAAA,EAC3BpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACvL,GAAI0C,EAAOkC,UAAUxE,SAAC,UAGlCpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACvL,GAAI0C,EAAOkC,UAAUxE,SAAC,SAGlCpB,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACvL,GAAI0C,EAAOkC,UAAUxE,SAAC,4BAYlDN,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CACFjL,GAAI0C,EAAOmC,sBACXiM,IAAK/K,EAAkB3F,SAAA,CAEtB6H,IACCA,GAAO0C,OAAS,GAChB1C,GAAOtH,KAAI,SAACsE,EAAOpE,GAAC,OAClB7B,EAAAA,EAAAA,KAAC+R,EAAAA,EAAK,CACJ9C,QAAS,kBAAMnE,GAAYjJ,EAAE,EAE7BmQ,cACEhS,EAAAA,EAAAA,KAACiS,EAAAA,EAAgB,CACfC,UAAU,SACVlR,GAAI0C,EAAOqC,WACXkJ,QAAS,kBAAMnE,GAAYjJ,EAAE,IAGjCb,GAAI0C,EAAOsC,aAAa5E,UAExBpB,EAAAA,EAAAA,KAAA,OACEyN,MAAO/J,EAAOuC,MAEdqH,IAAKrH,EAAMuL,IACXnE,IAAKpH,EAAM7G,MAFNyC,IAZFA,EAgBC,IAEXoH,IAAUA,GAAO0C,OAAS,IACzB3L,EAAAA,EAAAA,KAACiM,EAAAA,EAAG,CAACjL,GAAI0C,EAAOwC,mBAAmB9E,UACjCpB,EAAAA,EAAAA,KAACiM,EAAAA,EAAG,CAACsC,UAAU,QAAQkD,QAAQ,kBAAiBrQ,UAC9CpB,EAAAA,EAAAA,KAACmS,EAAAA,EAAe,CACdD,UAAU,YACVlR,GAAI,CAAEiE,SAAU,yBAYpCjF,EAAAA,EAAAA,KAACoS,EAAAA,EAAO,KACRtR,EAAAA,EAAAA,MAACmL,EAAAA,EAAG,CAACjL,GAAI,CAAE4C,EAAG,GAAK8N,MAAM,QAAOtQ,SAAA,EAC9BpB,EAAAA,EAAAA,KAAC4R,EAAAA,EAAM,CACLzR,QAAQ,WACRoF,MAAM,UACNvE,GAAI,CAAE4M,GAAI,GACVqB,QA7cW,WACnBnH,IAAmB,EACrB,EA2cgC1G,SACvB,YAGDpB,EAAAA,EAAAA,KAAC4R,EAAAA,EAAM,CACL5D,SAAU/F,GACV9H,QAAQ,YACRoF,MAAM,UACN0J,QA9ea,WACrB9L,EAAUkP,YAAY7I,GAAWJ,QAAQY,MAAK,SAACa,GACzCA,EACEpC,GACEe,GAAWJ,OAAOE,MAAQE,GAAWJ,OAAO3F,MAtCnC,WACnByE,IAAW,GACX,IAAMoK,EAAW,IAAIC,SACrBD,EAASE,OAAO,aAAcC,KAAKC,UAAU,CAAClJ,GAAWJ,UACzDkJ,EAASE,OAAO,SAAUC,KAAKC,UAAU,CAACjK,MACtCQ,IAAUA,GAAO0C,OAAS,GAC5B1C,GAAO0J,SAAQ,SAAC1M,GACdqM,EAASE,OAAO,WAAYvM,EAAMsL,KACpC,IAEE1I,IAAeA,GAAY+J,OAAOjH,OAAS,GAC7C2G,EAASE,OAAO,cAAe3J,IAGjCgK,EAAAA,QAAAA,KAAU,iBAAkBP,EAAU,CACpCQ,QAAS,CACP,eAAgB,yBAGjB9I,MAAK,SAACC,GACiB,MAAlBA,EAAIC,KAAK6I,OACX7Q,EAAAA,EAAAA,SAAkB,UAAW+H,EAAIC,KAAKvJ,QAASL,EAAAA,SAC/C0S,YAAW,kBAAMnM,EAAQyK,KAAK,aAAa,GAAE,OAE7CpP,EAAAA,EAAAA,SAAkB,QAAS+H,EAAIC,KAAKvJ,QAASL,EAAAA,SAE/C4H,IAAW,EACb,IACCiC,OAAM,SAACC,GACNlC,IAAW,IACXhG,EAAAA,EAAAA,SAAkB,QAASkI,EAAIzJ,QAASL,EAAAA,QAC1C,GACJ,CAOU2S,IAEA/Q,EAAAA,EAAAA,SACE,QACA,oCACA5B,EAAAA,UAIJ4B,EAAAA,EAAAA,SAAkB,QAAS,0BAA2B5B,EAAAA,SAGxDmJ,IAAc,SAACc,GAAI,OAAAzK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdyK,GAAI,IACPpL,OAAQgE,EAAUhE,QAAM,GAG9B,GACF,EAudkCiC,SAEvB6G,IAAUjI,EAAAA,EAAAA,KAACkT,EAAAA,EAAgB,CAAChT,KAAM,KAAS,uBAMxD,C,mCC/3BM2S,E,SAAOM,EAAAA,SAEbN,EAAKO,SAASC,QAAU5G,qDACxBoG,EAAKO,SAASN,QAAQQ,OAAe,OAAI,mBACzCT,EAAKO,SAASN,QAAQQ,OAAO,gBAAkB,mBAC/CT,EAAKO,SAASN,QAAQQ,OAAsB,cAAC,UAAA/C,OAAagD,aAAaC,QACrE,gBAGFX,EAAKY,aAAaC,SAASC,KACzB,SAAUD,GACR,OAAOA,CACT,IACA,SAAUjU,GACR,GAAsB,kBAAlBA,EAAMkB,QACR,OAAOiT,QAAQC,OAAOpU,GAGxB,GACO,OADCA,EAAMiU,UAAYjU,EAAMiU,SAASvR,QAErCoR,aAAaO,WAAW,eACxBC,OAAOC,SAASC,KAAO,SAM3B,OAAOL,QAAQC,OAAOpU,EACxB,IAGF,W,kCC/BMsK,E,SAAaoJ,EAAAA,SAEnBpJ,EAAWqJ,SAASC,QAAU5G,qDAC9B1C,EAAWqJ,SAASN,QAAQQ,OAAe,OAAI,mBAC/CvJ,EAAWqJ,SAASN,QAAQQ,OAAO,gBAAkB,mBAKrDvJ,EAAW0J,aAAaC,SAASC,KAC/B,SAAUD,GACR,OAAOA,CACT,IACA,SAAUjU,GACR,GAAsB,kBAAlBA,EAAMkB,QACR,OAAOiT,QAAQC,OAAOpU,GAGxB,GACO,OADCA,EAAMiU,UAAYjU,EAAMiU,SAASvR,QAGrC4R,OAAOC,SAASC,KAAO,IAM3B,OAAOL,QAAQC,OAAOpU,EACxB,IAGF,W","sources":["components/FormField.js","components/SelectDropdown.js","components/ToastNotification.js","components/ToastNotificationContainer.js","components/options.js","modules/users/pages/worker/NewJobOffer.js","utils/Http.js","utils/publicHttp.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction FormField(props) {\r\n  const { errors, name, customError, ...rest } = props;\r\n\r\n  let error = false;\r\n  let helperText = \"\";\r\n\r\n  if (customError) {\r\n    error = true;\r\n    helperText = customError;\r\n  }\r\n\r\n  if (errors) {\r\n    error = (errors && errors.has(name)) || false;\r\n    helperText = (errors && errors.first(name)) || \"\";\r\n  }\r\n\r\n  const fieldProps = {\r\n    error,\r\n    name,\r\n    helperText,\r\n    ...rest,\r\n    value: rest.value || \"\",\r\n  };\r\n\r\n  return <TextField size=\"small\" variant=\"outlined\" {...fieldProps} />;\r\n}\r\n\r\nexport default FormField;\r\n","import React from \"react\";\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  InputLabel,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nfunction SelectDropdown(props) {\r\n  const {\r\n    label,\r\n    errors,\r\n    options = [],\r\n    categories = [],\r\n    subCategories = [],\r\n    customError,\r\n    ...rest\r\n  } = props;\r\n\r\n  let error = false;\r\n  let helperText = \"\";\r\n\r\n  // handle customError\r\n  if (customError) {\r\n    error = customError.error || false;\r\n    helperText = customError.message || \"\";\r\n  }\r\n\r\n  if (errors) {\r\n    error = (errors && errors.has(props.name)) || false;\r\n    helperText = (errors && errors.first(props.name)) || \"\";\r\n  }\r\n\r\n  const newProps = {\r\n    margin: \"dense\",\r\n    error,\r\n    ...rest,\r\n  };\r\n\r\n  return (\r\n    <FormControl\r\n      size=\"small\"\r\n      sx={{\r\n        width: \"100%\",\r\n        mt: 0.5,\r\n        mb: 0.5,\r\n      }}\r\n    >\r\n      <InputLabel id=\"dropdown-label\">{label}</InputLabel>\r\n      <Select\r\n        labelId=\"dropdown-label\"\r\n        input={<OutlinedInput label={label} />}\r\n        {...newProps}\r\n      >\r\n        {options.map((option, i) => (\r\n          <MenuItem key={i} value={option}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n        {categories.map((category, i) => (\r\n          <MenuItem key={i} value={category.name}>\r\n            {category.name}\r\n          </MenuItem>\r\n        ))}\r\n        {subCategories.map((category) =>\r\n          category.children.map((child, i) => (\r\n            <MenuItem key={i} value={child.name}>\r\n              {child.name}\r\n            </MenuItem>\r\n          ))\r\n        )}\r\n      </Select>\r\n      <FormHelperText error>{helperText}</FormHelperText>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default SelectDropdown;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport default function ToastNotification(status, message, options) {\r\n  if (status === \"success\") {\r\n    return toast.success(message, options);\r\n  }\r\n  return toast.error(message, options);\r\n}\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function ToastNotificationContainer() {\r\n  return (\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n      theme=\"colored\"\r\n    />\r\n  );\r\n}\r\n","export const options = {\r\n  position: \"top-right\",\r\n  autoClose: 3000,\r\n  hideProgressBar: false,\r\n  draggable: true,\r\n  draggableDirection: \"x\" | \"y\",\r\n  draggablePercent: 60,\r\n  theme: \"colored\",\r\n};\r\n","import {\r\n  Autocomplete,\r\n  Avatar,\r\n  Badge,\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  Radio,\r\n  RadioGroup,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useRef } from \"react\";\r\nimport FormField from \"../../../../components/FormField\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\";\r\nimport Reevalidate from \"ree-validate-18\";\r\nimport SelectDropdown from \"../../../../components/SelectDropdown\";\r\nimport { formatValue } from \"../../../../utils/helpers\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport ToastNotification from \"../../../../components/ToastNotification\";\r\nimport { options } from \"../../../../components/options\";\r\nimport ToastNotificationContainer from \"../../../../components/ToastNotificationContainer\";\r\nimport ArticleIcon from \"@mui/icons-material/Article\";\r\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\r\nimport RemoveCircleIcon from \"@mui/icons-material/RemoveCircle\";\r\nimport AddToPhotosIcon from \"@mui/icons-material/AddToPhotos\";\r\nimport Http from \"../../../../utils/Http\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConfirmationModal from \"../../../../components/ConfirmationModal\";\r\nimport publicHttp from \"../../../../utils/publicHttp\";\r\n\r\nconst validator = new Reevalidate.Validator({\r\n  type: \"required\",\r\n  rate: \"required\",\r\n  budget: \"required\",\r\n  days: \"required\",\r\n  title: \"min:5|max:20\",\r\n});\r\n\r\nconst days = [\r\n  \"41+ days\",\r\n  \"31-40 days\",\r\n  \"21-30 days\",\r\n  \"11-20 days\",\r\n  \"1-10 days\",\r\n];\r\n\r\nconst styles = {\r\n  wrapper: { mt: 8, p: 3 },\r\n  main: {\r\n    maxWidth: 800,\r\n    backgroundColor: \"#EEEEEE\",\r\n    m: \"20px auto\",\r\n    boxShadow: 5,\r\n  },\r\n  titleWrapper: {\r\n    mt: 2,\r\n    mb: 2,\r\n\r\n    \".ql-editor\": {\r\n      height: 200,\r\n    },\r\n  },\r\n  jobDesHelperText: { mt: 1, mb: 1 },\r\n  addImagesWrapper: {\r\n    width: \"100%\",\r\n    border: \"2px dashed #BEBEBE\",\r\n    p: 2,\r\n    cursor: \"pointer\",\r\n    borderRadius: 3,\r\n\r\n    \"&:hover\": {\r\n      border: \"2px dashed blue\",\r\n    },\r\n    backgroundColor: \"white\",\r\n  },\r\n  addImageLeftWrapper: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexWrap: { xs: \"wrap\", md: \"noWrap\" },\r\n  },\r\n  dragDropText: {\r\n    fontSize: 12,\r\n    textAlign: \"center\",\r\n  },\r\n  browse: {\r\n    ml: { xs: 0, sm: 1, md: 1 },\r\n    width: { xs: \"100%\", sm: \"auto\", md: \"auto\" },\r\n  },\r\n  addImageRightWrapper: { fontSize: 12, color: \"blue\" },\r\n  attachments: { fontSize: \"inherit\", mb: 1, color: \"inherit\" },\r\n  addFiles: { fontSize: \"inherit\", color: \"inherit\" },\r\n  addImageRightBottomWrapper: { display: \"flex\", alignItems: \"center\", mt: 1 },\r\n  articleIcon: { fontSize: 24, color: \"inherit\" },\r\n  fileTypes: { m: 0.5, fontSize: \"inherit\", color: \"inherit\" },\r\n  selectedImagesWrapper: {\r\n    display: \"flex\",\r\n    overflowX: \"scroll\",\r\n    p: 2,\r\n\r\n    \"::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  removeIcon: {\r\n    color: \"red\",\r\n    display: \"none\",\r\n  },\r\n  imageWrapper: {\r\n    ml: 2,\r\n    \"&:hover\": {\r\n      \".remove\": {\r\n        display: \"block\",\r\n      },\r\n    },\r\n  },\r\n  image: {\r\n    width: 200,\r\n    height: 120,\r\n    border: \"1px solid #BEBEBE\",\r\n    borderRadius: 5,\r\n\r\n    \"&:hover\": {\r\n      border: \"1px solid black\",\r\n      boxShadow: 10,\r\n    },\r\n  },\r\n  addNewImageWrapper: {\r\n    ml: 2,\r\n    width: 200,\r\n    minWidth: 200,\r\n    height: 120,\r\n    border: \"2px dashed #BEBEBE\",\r\n    p: 2,\r\n    cursor: \"pointer\",\r\n    borderRadius: 3,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n\r\n    \"&:hover\": {\r\n      border: \"2px dashed blue\",\r\n\r\n      \".add-photo\": {\r\n        color: \"blue\",\r\n      },\r\n    },\r\n    backgroundColor: \"#EEEEEE\",\r\n  },\r\n};\r\n\r\nconst MAX_IMAGES = 10;\r\n\r\nfunction NewJobOffer() {\r\n  const posts = useSelector((state) => state.users.user.jobs) ?? [];\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const imageContainerRef = useRef(null);\r\n\r\n  const [search, setSearch] = React.useState(\"\");\r\n  const [workers, setWorkers] = React.useState([]);\r\n  const [openCancelModal, setOpenCancelModal] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [loadingOnLoad, setLoadingOnLoad] = React.useState(false);\r\n  const [selectedItem, setSelectedItem] = React.useState({});\r\n  const [instruction, setInstruction] = React.useState(\"\");\r\n  const [images, setImages] = React.useState([]);\r\n  const [formValues, setFormValues] = React.useState({\r\n    values: {\r\n      contractor: \"\",\r\n      post: \"\",\r\n      title: \"\",\r\n      rate: \"\",\r\n      days: \"\",\r\n      type: \"Daily Rate\",\r\n    },\r\n    errors: validator.errors,\r\n  });\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    fetchWorkers();\r\n  }, []);\r\n\r\n  const fetchWorkers = () => {\r\n    setLoadingOnLoad(true);\r\n    publicHttp\r\n      .get(\"/user/workers\")\r\n      .then((res) => {\r\n        if (res.data.data) {\r\n          setWorkers(res.data.data);\r\n        }\r\n        setLoadingOnLoad(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoadingOnLoad(false);\r\n        console.warn(err.message);\r\n      });\r\n  };\r\n\r\n  const type = formValues.values.type;\r\n  React.useEffect(() => {\r\n    if (type === \"Daily Rate\") {\r\n      setFormValues((prev) => ({\r\n        ...prev,\r\n        values: {\r\n          contractor: prev.values.contractor,\r\n          post: prev.values.post,\r\n          title: prev.values.title,\r\n          rate: prev.values.rate,\r\n          days: prev.values.days,\r\n          type: prev.values.type,\r\n        },\r\n      }));\r\n    }\r\n    if (type === \"Fixed Cost\") {\r\n      setFormValues((prev) => ({\r\n        ...prev,\r\n        values: {\r\n          contractor: prev.values.contractor,\r\n          post: prev.values.post,\r\n          title: prev.values.title,\r\n          type: prev.values.type,\r\n          budget: \"\",\r\n        },\r\n      }));\r\n    }\r\n  }, [type]);\r\n\r\n  const handleChangeFormValues = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setFormValues((prev) => ({\r\n      ...prev,\r\n      values: {\r\n        ...prev.values,\r\n        [name]: value,\r\n      },\r\n    }));\r\n\r\n    const { errors } = validator;\r\n\r\n    validator.validate(name, value).then((success) => {\r\n      if (!success) {\r\n        setFormValues((prev) => ({\r\n          ...prev,\r\n          errors: errors,\r\n        }));\r\n      }\r\n    });\r\n  };\r\n  const handleChangeJobDescription = (content, delta, source, editor) => {\r\n    setInstruction(content);\r\n  };\r\n\r\n  const handleChangeMultipleImages = (e) => {\r\n    const files = e.target.files;\r\n    const newImages = [];\r\n    if (files && files.length > 0) {\r\n      const totalImages = images.length + files.length;\r\n      const limit =\r\n        totalImages > MAX_IMAGES ? MAX_IMAGES - images.length : files.length;\r\n      for (let i = 0; i < limit; i++) {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(files[i]);\r\n        reader.onload = () => {\r\n          const imageUrl = reader.result;\r\n          const fileImage = new File([files[i]], files[i].name, {\r\n            type: \"image/jpeg\",\r\n          });\r\n          newImages.push({\r\n            file: fileImage,\r\n            url: imageUrl,\r\n          }); // add URL to image object\r\n          if (newImages.length === limit) {\r\n            setImages([...images, ...newImages]);\r\n          }\r\n        };\r\n      }\r\n      if (totalImages > MAX_IMAGES) {\r\n        ToastNotification(\r\n          \"error\",\r\n          `You can only upload ${MAX_IMAGES} images.`,\r\n          options\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const newFiles = Array.from(e.dataTransfer.files);\r\n    const totalImages = images.length + newFiles.length;\r\n    if (totalImages > MAX_IMAGES) {\r\n      ToastNotification(\r\n        \"error\",\r\n        `You can only upload ${MAX_IMAGES} images.`,\r\n        options\r\n      );\r\n      return;\r\n    }\r\n    setImages((prevFiles) => [...prevFiles, ...newFiles]);\r\n  };\r\n\r\n  const removeImage = (index) => {\r\n    const newImages = [...images];\r\n    newImages.splice(index, 1);\r\n    setImages(newImages);\r\n  };\r\n\r\n  const handleChangeSearch = (event, value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const handleChangeSelectedItem = (e, item) => {\r\n    setSelectedItem(item);\r\n  };\r\n\r\n  const handleChangePost = (e, item) => {\r\n    setFormValues((prev) => ({\r\n      ...prev,\r\n      values: {\r\n        ...prev.values,\r\n        post: item ? item.id : null,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleBlur = (fieldName) => {\r\n    const formattedValue = formatValue(formValues.values[fieldName]);\r\n    setFormValues((prevState) => ({\r\n      ...prevState,\r\n      values: {\r\n        ...prevState.values,\r\n        [fieldName]: formattedValue,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleDropdownToggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n    const formData = new FormData();\r\n    formData.append(\"formValues\", JSON.stringify([formValues.values]));\r\n    formData.append(\"worker\", JSON.stringify([selectedItem]));\r\n    if (images && images.length > 0) {\r\n      images.forEach((image) => {\r\n        formData.append(`images[]`, image.file);\r\n      });\r\n    }\r\n    if (instruction && instruction.trim().length > 0) {\r\n      formData.append(\"instruction\", instruction);\r\n    }\r\n\r\n    Http.post(\"/new/job-offer\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.code === 200) {\r\n          ToastNotification(\"success\", res.data.message, options);\r\n          setTimeout(() => history.push('/my-offers'), 500);\r\n        } else {\r\n          ToastNotification(\"error\", res.data.message, options);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        ToastNotification(\"error\", err.message, options);\r\n      });\r\n  };\r\n\r\n  const handleValidate = () => {\r\n    validator.validateAll(formValues.values).then((success) => {\r\n      if (success) {\r\n        if (selectedItem) {\r\n          if (formValues.values.post || formValues.values.title) {\r\n            handleSubmit();\r\n          } else {\r\n            ToastNotification(\r\n              \"error\",\r\n              \"Either Post or Title is required!\",\r\n              options\r\n            );\r\n          }\r\n        } else {\r\n          ToastNotification(\"error\", \"Contractor is required!\", options);\r\n        }\r\n      } else {\r\n        setFormValues((prev) => ({\r\n          ...prev,\r\n          errors: validator.errors,\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpenCancelModal(true);\r\n  };\r\n\r\n  // Calculate the average rating\r\n  const length = selectedItem.ratings?.length;\r\n  const averageRating =\r\n    length > 0\r\n      ? selectedItem.ratings.reduce((sum, rating) => sum + rating.rating, 0) /\r\n        length\r\n      : 0;\r\n\r\n  return (\r\n    <Box sx={styles.wrapper}>\r\n      <ConfirmationModal\r\n        open={openCancelModal}\r\n        onClose={() => setOpenCancelModal(false)}\r\n        message=\"Your activity will not be save!\"\r\n        onConfirm={() => history.goBack()}\r\n        title=\"Exit Offer\"\r\n      />\r\n      <ToastNotificationContainer />\r\n      <Box sx={styles.main}>\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography sx={{ fontWeight: \"bold\", fontSize: { xs: 24, md: 30 } }}>\r\n            Create Offer\r\n          </Typography>\r\n          <Typography>\r\n            Send an offer to a worker on {process.env.REACT_APP_NAME}.\r\n          </Typography>\r\n        </Box>\r\n        <Box sx={{ backgroundColor: \"#CCCCCC\", p: 2 }}>\r\n          <Typography>Basic Information</Typography>\r\n        </Box>\r\n        <Box sx={{ mt: 2, p: 3 }}>\r\n          <Typography>Contractor *</Typography>\r\n          <Autocomplete\r\n            name=\"contractor\"\r\n            size=\"small\"\r\n            loading={loadingOnLoad}\r\n            options={workers}\r\n            getOptionLabel={(worker) => worker.fullname}\r\n            renderInput={(params) => (\r\n              <FormField\r\n                size=\"small\"\r\n                {...params}\r\n                label=\"Contractor\"\r\n                variant=\"outlined\"\r\n                value={selectedItem ? selectedItem.fullname : \"\"}\r\n              />\r\n            )}\r\n            onChange={handleChangeSelectedItem}\r\n          />\r\n          {selectedItem && selectedItem.profile && (\r\n            <Box\r\n              sx={{\r\n                mt: 2,\r\n                mb: 2,\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <Box sx={{ display: \"flex\" }}>\r\n                <Avatar\r\n                  alt={selectedItem && selectedItem.fullname}\r\n                  src={\r\n                    selectedItem &&\r\n                    selectedItem.profile &&\r\n                    selectedItem.profile[0] &&\r\n                    selectedItem.profile[0].profile_url\r\n                  }\r\n                />\r\n                <Box sx={{ ml: 1 }}>\r\n                  <Typography sx={{ fontWeight: \"bold\", fontSize: 12 }}>\r\n                    {selectedItem && selectedItem.fullname}\r\n                  </Typography>\r\n                  {selectedItem &&\r\n                    selectedItem.profile &&\r\n                    selectedItem.profile.about && (\r\n                      <div\r\n                        style={{ fontSize: 11 }}\r\n                        dangerouslySetInnerHTML={{\r\n                          __html:\r\n                            selectedItem &&\r\n                            selectedItem.profile &&\r\n                            selectedItem.profile.about,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  {selectedItem &&\r\n                    selectedItem.profile &&\r\n                    selectedItem.profile.about === null && (\r\n                      <Typography sx={{ fontSize: 11 }}>\r\n                        The user has no background set\r\n                      </Typography>\r\n                    )}\r\n                </Box>\r\n              </Box>\r\n              <Box sx={{ display: \"flex\" }}>\r\n                <Typography sx={{ mr: 2, fontWeight: \"bold\" }}>\r\n                  {selectedItem &&\r\n                  selectedItem.profile &&\r\n                  selectedItem.profile.daily_rate\r\n                    ? selectedItem.profile.daily_rate\r\n                    : 0}{\" \"}\r\n                  /hr\r\n                </Typography>\r\n                <Box sx={{ display: \"flex\" }}>\r\n                  <StarBorderIcon />\r\n                  <Typography sx={{ fontWeight: \"bold\" }}>\r\n                    {averageRating ? averageRating : 0}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n          <Typography>Posted Jobs *</Typography>\r\n          <Autocomplete\r\n            name=\"post\"\r\n            size=\"small\"\r\n            options={posts}\r\n            getOptionLabel={(post) => post.title}\r\n            renderInput={(params) => (\r\n              <FormField\r\n                size=\"small\"\r\n                {...params}\r\n                label=\"Posted Jobs\"\r\n                name=\"post\"\r\n                variant=\"outlined\"\r\n                value={formValues.values.post}\r\n                onChange={handleChangeSearch}\r\n              />\r\n            )}\r\n            onChange={handleChangePost}\r\n          />\r\n          <Typography>Title *</Typography>\r\n          <FormField\r\n            name=\"title\"\r\n            label={\r\n              formValues.values.post ? \"You selected a posted job\" : \"Title\"\r\n            }\r\n            fullWidth\r\n            value={formValues.values.post ? \"\" : formValues.values.title}\r\n            errors={formValues.errors}\r\n            onChange={handleChangeFormValues}\r\n            disabled={formValues.values.post ? true : false}\r\n          />\r\n        </Box>\r\n        <Box sx={{ backgroundColor: \"#CCCCCC\", p: 2 }}>\r\n          <Typography>Offer Details</Typography>\r\n        </Box>\r\n\r\n        <Box sx={{ p: 3 }}>\r\n          <FormControl>\r\n            <FormLabel id=\"rate-type\">Payment Type *</FormLabel>\r\n            <RadioGroup\r\n              row\r\n              aria-labelledby=\"rate-type\"\r\n              name=\"type\"\r\n              value={formValues.values.type}\r\n              onChange={handleChangeFormValues}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Daily Rate\"\r\n                control={<Radio />}\r\n                label=\"Pay by the day\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Fixed Cost\"\r\n                control={<Radio />}\r\n                label=\"Fixed price\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {formValues && formValues.values.type === \"Daily Rate\" && (\r\n            <Box\r\n              sx={{\r\n                backgroundColor: \"#BEBEBE\",\r\n                borderRadius: 3,\r\n                boxShadow: 5,\r\n                p: 2,\r\n              }}\r\n            >\r\n              <Typography>\r\n                For pay by the day contracts, your freelancer should provide you\r\n                with accurate time tracking details so you can:\r\n              </Typography>\r\n              <Box sx={{ ml: 2 }}>\r\n                <Typography component=\"li\">\r\n                  Track your freelancer's working hours\r\n                </Typography>\r\n                <Typography component=\"li\">\r\n                  Stay informed about their activity level\r\n                </Typography>\r\n                <Typography component=\"li\">\r\n                  If you have specific requirements or tasks for the freelancer,\r\n                  ensure they provide progress updates\r\n                </Typography>\r\n                <Typography component=\"li\">\r\n                  For accurate payment, you may request the freelancer to\r\n                  provide manual time tracking details\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n          {formValues && formValues.values.type === \"Fixed Cost\" && (\r\n            <Box\r\n              sx={{\r\n                backgroundColor: \"#BEBEBE\",\r\n                borderRadius: 3,\r\n                boxShadow: 5,\r\n                p: 2,\r\n              }}\r\n            >\r\n              <Typography>\r\n                Fixed price contracts require a refundable deposit. The budget\r\n                below is an estimate. You can change the deposit amount after\r\n                the contract is created and before you make the deposit.\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n\r\n        <Box sx={{ p: 2 }}>\r\n          <Box>\r\n            {formValues && formValues.values.type === \"Daily Rate\" && (\r\n              <Box sx={{ mt: 2, mb: 2 }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <Box>\r\n                      <Typography>Estimated Days *</Typography>\r\n                      <FormHelperText>\r\n                        What is the estimated days?\r\n                      </FormHelperText>\r\n                      <SelectDropdown\r\n                        label=\"Estiimated Days\"\r\n                        name=\"days\"\r\n                        errors={formValues.errors}\r\n                        value={formValues.values.days}\r\n                        onChange={handleChangeFormValues}\r\n                        options={days}\r\n                        required\r\n                      />\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <Box sx={{ mt: 0.5 }}>\r\n                      <Typography>Estimated Rate *</Typography>\r\n                      <FormHelperText>\r\n                        What is the estimated rate per day?\r\n                      </FormHelperText>\r\n                      <FormField\r\n                        fullWidth\r\n                        label=\"Estimated Rate\"\r\n                        name=\"rate\"\r\n                        errors={formValues.errors}\r\n                        value={formValues.values.rate}\r\n                        onBlur={() => handleBlur(\"rate\")}\r\n                        onChange={handleChangeFormValues}\r\n                        required\r\n                        InputProps={{\r\n                          startAdornment: (\r\n                            <InputAdornment position=\"start\">₱</InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            )}\r\n            {formValues && formValues.values.type === \"Fixed Cost\" && (\r\n              <Box sx={{ mt: 2 }}>\r\n                <Typography>Estimated Budget *</Typography>\r\n                <FormHelperText>\r\n                  What is your estimated budget for this job?\r\n                </FormHelperText>\r\n                <FormField\r\n                  name=\"budget\"\r\n                  label=\"Estimated Budget\"\r\n                  value={formValues.values.budget}\r\n                  onBlur={() => handleBlur(\"budget\")}\r\n                  onChange={handleChangeFormValues}\r\n                  errors={formValues.errors}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">₱</InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Box>\r\n            )}\r\n\r\n            <Box sx={{ mt: 2, display: \"flex\", alignItems: \"center\" }}>\r\n              <Typography\r\n                sx={{ cursor: \"pointer\" }}\r\n                onClick={handleDropdownToggle}\r\n              >\r\n                Instuctions (optional)\r\n              </Typography>\r\n              <span\r\n                style={{\r\n                  transition: \"transform 0.3s ease\",\r\n                  transform: isOpen ? \"rotate(180deg)\" : \"rotate(0deg)\",\r\n                  marginLeft: \"4px\",\r\n                }}\r\n              >\r\n                <IconButton onClick={handleDropdownToggle}>\r\n                  {!isOpen ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}\r\n                </IconButton>\r\n              </span>\r\n            </Box>\r\n\r\n            {isOpen && (\r\n              <Box>\r\n                <Box sx={styles.titleWrapper}>\r\n                  <Typography>Job Description *</Typography>\r\n                  <FormHelperText sx={styles.jobDesHelperText}>\r\n                    Use job requirements, desired experience, expectations, a\r\n                    company bio or details about yourself.\r\n                  </FormHelperText>\r\n                  <ReactQuill\r\n                    theme=\"snow\"\r\n                    name=\"job_description\"\r\n                    value={instruction}\r\n                    onChange={handleChangeJobDescription}\r\n                    placeholder=\"Describe your job. The more details the better.\"\r\n                    style={{ backgroundColor: \"white\" }}\r\n                  />\r\n                </Box>\r\n\r\n                <Box\r\n                  component=\"form\"\r\n                  encType=\"multipart/form-data\"\r\n                  sx={styles.addImagesWrapper}\r\n                  onDragOver={handleDragOver}\r\n                  onDrop={handleDrop}\r\n                >\r\n                  <input\r\n                    id=\"multiple-images\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    multiple\r\n                    style={{ display: \"none\" }}\r\n                    onChange={handleChangeMultipleImages}\r\n                  />\r\n                  <Box\r\n                    component=\"label\"\r\n                    htmlFor=\"multiple-images\"\r\n                    sx={{ cursor: \"pointer\" }}\r\n                  >\r\n                    {images && images.length === 0 && (\r\n                      <Grid container spacing={1} sx={{ alignItems: \"center\" }}>\r\n                        <Grid item xs={12} sm={6} md={6}>\r\n                          <Box align=\"center\">\r\n                            <ContentCopyIcon\r\n                              sx={{ fontSize: 36, color: \"blue\" }}\r\n                            />\r\n                            <Box sx={styles.addImageLeftWrapper} align=\"center\">\r\n                              <Typography sx={styles.dragDropText}>\r\n                                Drag and Drop file or\r\n                              </Typography>\r\n                              <Button\r\n                                size=\"small\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                sx={styles.browse}\r\n                                component=\"label\"\r\n                                htmlFor=\"multiple-images\"\r\n                              >\r\n                                Browse\r\n                              </Button>\r\n                            </Box>\r\n                          </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={6}>\r\n                          <Box sx={styles.addImageRightWrapper}>\r\n                            <Typography sx={styles.attachments}>\r\n                              Attachments (optional)\r\n                            </Typography>\r\n                            <Typography sx={styles.addFiles}>\r\n                              Add files to help describe what needs to be done\r\n                              and for the workers' visual references. You can\r\n                              add <span>up to 10 photos.</span>\r\n                            </Typography>\r\n\r\n                            <Box sx={styles.addImageRightBottomWrapper}>\r\n                              <ArticleIcon sx={styles.articleIcon} />\r\n                              <Box>\r\n                                <Typography sx={styles.addFiles}>\r\n                                  Max. size: 2mb each\r\n                                </Typography>\r\n                                <Box sx={{ display: \"flex\" }}>\r\n                                  <Typography sx={styles.fileTypes}>\r\n                                    JPEG\r\n                                  </Typography>\r\n                                  <Typography sx={styles.fileTypes}>\r\n                                    PNG\r\n                                  </Typography>\r\n                                  <Typography sx={styles.fileTypes}>\r\n                                    JPG\r\n                                  </Typography>\r\n                                </Box>\r\n                              </Box>\r\n                            </Box>\r\n                          </Box>\r\n                        </Grid>\r\n                      </Grid>\r\n                    )}\r\n                  </Box>\r\n\r\n                  <Box\r\n                    sx={styles.selectedImagesWrapper}\r\n                    ref={imageContainerRef}\r\n                  >\r\n                    {images &&\r\n                      images.length > 0 &&\r\n                      images.map((image, i) => (\r\n                        <Badge\r\n                          onClick={() => removeImage(i)}\r\n                          key={i}\r\n                          badgeContent={\r\n                            <RemoveCircleIcon\r\n                              className=\"remove\"\r\n                              sx={styles.removeIcon}\r\n                              onClick={() => removeImage(i)}\r\n                            />\r\n                          }\r\n                          sx={styles.imageWrapper}\r\n                        >\r\n                          <img\r\n                            style={styles.image}\r\n                            key={i}\r\n                            src={image.url}\r\n                            alt={image.name}\r\n                          />\r\n                        </Badge>\r\n                      ))}\r\n                    {images && images.length > 0 && (\r\n                      <Box sx={styles.addNewImageWrapper}>\r\n                        <Box component=\"label\" htmlFor=\"multiple-images\">\r\n                          <AddToPhotosIcon\r\n                            className=\"add-photo\"\r\n                            sx={{ fontSize: 50 }}\r\n                          />\r\n                        </Box>\r\n                      </Box>\r\n                    )}\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n\r\n        <Divider />\r\n        <Box sx={{ p: 2 }} align=\"right\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            sx={{ mr: 2 }}\r\n            onClick={handleCancel}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            disabled={loading}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleValidate}\r\n          >\r\n            {loading ? <CircularProgress size={24} /> : \"Send Offer\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NewJobOffer;\r\n","import axios from \"axios\";\r\n\r\nconst Http = axios.create();\r\n\r\nHttp.defaults.baseURL = process.env.REACT_APP_API_DOMAIN;\r\nHttp.defaults.headers.common[\"Accept\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Content-Type\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Authorization\"] = `Bearer ${localStorage.getItem(\r\n  \"accessToken\"\r\n)}`;\r\n\r\nHttp.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    if (error.message === \"Network Error\") {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    switch (error.response && error.response.status) {\r\n      case 401:\r\n        localStorage.removeItem(\"accessToken\");\r\n        window.location.href = \"/login\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default Http;\r\n","import axios from \"axios\";\r\n\r\nconst publicHttp = axios.create();\r\n\r\npublicHttp.defaults.baseURL = process.env.REACT_APP_API_DOMAIN;\r\npublicHttp.defaults.headers.common[\"Accept\"] = \"application/json\";\r\npublicHttp.defaults.headers.common[\"Content-Type\"] = \"application/json\";\r\n// publicHttp.defaults.headers.common[\r\n//   \"Authorization\"\r\n// ] = `Bearer ${localStorage.getItem(\"clientToken\")}`;\r\n\r\npublicHttp.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    if (error.message === \"Network Error\") {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    switch (error.response && error.response.status) {\r\n      case 401:\r\n        // localStorage.removeItem(\"clientToken\");\r\n        window.location.href = \"/\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default publicHttp;\r\n"],"names":["props","errors","name","customError","rest","_objectWithoutProperties","_excluded","error","helperText","has","first","fieldProps","_objectSpread","value","_jsx","TextField","size","variant","label","_props$options","options","_props$categories","categories","_props$subCategories","subCategories","message","newProps","margin","_jsxs","FormControl","sx","width","mt","mb","children","InputLabel","id","Select","labelId","input","OutlinedInput","map","option","i","MenuItem","category","child","FormHelperText","ToastNotification","status","toast","ToastNotificationContainer","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","draggableDirection","draggablePercent","validator","Reevalidate","type","rate","budget","days","title","styles","wrapper","p","main","maxWidth","backgroundColor","m","boxShadow","titleWrapper","height","jobDesHelperText","addImagesWrapper","border","cursor","borderRadius","addImageLeftWrapper","display","alignItems","justifyContent","flexWrap","xs","md","dragDropText","fontSize","textAlign","browse","ml","sm","addImageRightWrapper","color","attachments","addFiles","addImageRightBottomWrapper","articleIcon","fileTypes","selectedImagesWrapper","overflowX","removeIcon","imageWrapper","image","addNewImageWrapper","minWidth","MAX_IMAGES","_useSelector","_selectedItem$ratings","posts","useSelector","state","users","user","jobs","history","useHistory","imageContainerRef","useDispatch","useRef","_React$useState","React","_React$useState2","_slicedToArray","setSearch","_React$useState3","_React$useState4","workers","setWorkers","_React$useState5","_React$useState6","openCancelModal","setOpenCancelModal","_React$useState7","_React$useState8","loading","setLoading","_React$useState9","_React$useState10","loadingOnLoad","setLoadingOnLoad","_React$useState11","_React$useState12","selectedItem","setSelectedItem","_React$useState13","_React$useState14","instruction","setInstruction","_React$useState15","_React$useState16","images","setImages","_React$useState17","values","contractor","post","_React$useState18","formValues","setFormValues","_React$useState19","_React$useState20","isOpen","setIsOpen","fetchWorkers","publicHttp","then","res","data","catch","err","console","warn","prev","handleChangeFormValues","e","target","_defineProperty","validate","success","removeImage","index","newImages","_toConsumableArray","splice","handleChangeSearch","event","handleBlur","fieldName","formattedValue","formatValue","prevState","handleDropdownToggle","length","ratings","averageRating","reduce","sum","rating","Box","ConfirmationModal","open","onClose","onConfirm","goBack","Typography","fontWeight","process","Autocomplete","getOptionLabel","worker","fullname","renderInput","params","FormField","onChange","item","profile","Avatar","alt","src","profile_url","about","style","dangerouslySetInnerHTML","__html","mr","daily_rate","StarBorderIcon","fullWidth","disabled","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","component","Grid","container","spacing","SelectDropdown","required","onBlur","InputProps","startAdornment","InputAdornment","onClick","transition","transform","marginLeft","IconButton","ArrowDropUpIcon","ArrowDropDownIcon","ReactQuill","content","delta","source","editor","placeholder","encType","onDragOver","preventDefault","onDrop","newFiles","Array","from","dataTransfer","files","concat","prevFiles","accept","multiple","totalImages","limit","_loop","reader","FileReader","readAsDataURL","onload","imageUrl","result","fileImage","File","push","file","url","htmlFor","align","ContentCopyIcon","Button","ArticleIcon","ref","Badge","badgeContent","RemoveCircleIcon","className","AddToPhotosIcon","Divider","validateAll","formData","FormData","append","JSON","stringify","forEach","trim","Http","headers","code","setTimeout","handleSubmit","CircularProgress","axios","defaults","baseURL","common","localStorage","getItem","interceptors","response","use","Promise","reject","removeItem","window","location","href"],"sourceRoot":""}