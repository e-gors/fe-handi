{"version":3,"file":"static/js/4623.bfe25a0a.chunk.js","mappings":"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","sources":["modules/users/pages/Dashboard.js","modules/users/pages/worker/WDashboard.js","../node_modules/@mui/icons-material/PlaylistAddCheckCircleRounded.js"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport WDashboard from \"./worker/WDashboard\";\r\nimport CDashboard from \"./client/CDashboard\";\r\n\r\nfunction Dashboard() {\r\n  const user = useSelector((state) => state.users.user);\r\n\r\n  return (\r\n    <Box>\r\n      {user && user.role === \"Worker\" && <WDashboard />}\r\n      {user && user.role === \"Client\" && <CDashboard />}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Pagination,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport PlaylistAddCheckCircleRoundedIcon from \"@mui/icons-material/PlaylistAddCheckCircleRounded\";\r\nimport WorkIcon from \"@mui/icons-material/Work\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Http from \"../../../../utils/Http\";\r\nimport ToastNotificationContainer from \"../../../../components/ToastNotificationContainer\";\r\nimport FindJobCard from \"../../components/worker/FindJobCard\";\r\n\r\nconst convertToPercentage = (num) => {\r\n  return `${(num / 10) * 100}%`;\r\n};\r\n\r\nfunction WDashboard() {\r\n  const history = useHistory();\r\n  const user = useSelector((state) => state.users.user);\r\n\r\n  const { role, uuid, profile } = user;\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [onLoadLoading, setOnLoadLoading] = React.useState(false);\r\n\r\n  const [jobs, setJobs] = React.useState({\r\n    data: [],\r\n    meta: {},\r\n  });\r\n  const [limit, setLimit] = React.useState({\r\n    limit: 10,\r\n    page: 1,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    optimizedFn();\r\n  }, []); // eslint-disable-line\r\n\r\n  const fetchingData = (params = {}) => {\r\n    setLoading(true);\r\n    Http.get(\"/recommended/jobs\", {\r\n      params: {\r\n        ...limit,\r\n        ...params,\r\n      },\r\n    }).then((res) => {\r\n      if (res.data.data) {\r\n        setJobs({\r\n          data: res.data.data,\r\n          meta: res.data.meta,\r\n        });\r\n      }\r\n      setLoading(false);\r\n      setOnLoadLoading(false);\r\n    });\r\n  };\r\n\r\n  const debounce = (func) => {\r\n    let timer;\r\n    return function (...args) {\r\n      const context = this;\r\n      if (timer) clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        timer = null;\r\n        func.apply(context, args);\r\n      }, 700);\r\n    };\r\n  };\r\n\r\n  const optimizedFn = React.useCallback(debounce(fetchingData), []); // eslint-disable-line\r\n\r\n  const handleChangePage = (e, newPage) => {\r\n    if (limit.page !== newPage) {\r\n      setOnLoadLoading(true);\r\n      setLimit((prev) => ({\r\n        limit: prev.limit,\r\n        page: newPage,\r\n      }));\r\n      optimizedFn({ page: newPage });\r\n    }\r\n  };\r\n\r\n  const handleNavigate = (link) => {\r\n    history.push(link);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 8, p: 2 }}>\r\n      <ToastNotificationContainer />\r\n      <Box\r\n        sx={{\r\n          borderRadius: 5,\r\n          maxWidth: 1000,\r\n          backgroundColor: \"#F4F5F8\",\r\n          margin: \"30px auto\",\r\n          boxShadow: 10,\r\n          p: 2,\r\n        }}\r\n      >\r\n        <Typography sx={{ fontWeight: \"bold\" }}>Profile Insights</Typography>\r\n        <Divider />\r\n        <Grid container spacing={2} sx={{ p: \"10px 30px\" }}>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={3}\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              maxHeight: { xs: \"100%\", md: 75 },\r\n            }}\r\n          >\r\n            <VisibilityIcon\r\n              sx={{ p: 1, backgroundColor: \"#EDF3FF\", width: 50, height: 50 }}\r\n              color=\"primary\"\r\n            />\r\n            <Box sx={{ ml: 2 }}>\r\n              <Typography>Monthly view</Typography>\r\n              <Typography sx={{ fontWeight: \"bold\", fontSize: 24 }}>\r\n                0\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={3}\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              maxHeight: { xs: \"100%\", md: 75 },\r\n            }}\r\n          >\r\n            <PlaylistAddCheckCircleRoundedIcon\r\n              sx={{ p: 1, backgroundColor: \"#EDF3FF\", width: 50, height: 50 }}\r\n              color=\"primary\"\r\n            />\r\n            <Box sx={{ ml: 2 }}>\r\n              <Typography>Profile Completeness</Typography>\r\n              <Typography sx={{ fontWeight: \"bold\", fontSize: 24 }}>\r\n                {profile &&\r\n                  convertToPercentage(profile[0].profile_completeness)}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography sx={{ fontWeight: \"bold\" }}>\r\n              When you complete all required fields in your Profile:\r\n            </Typography>\r\n            <Typography component=\"li\">\r\n              Clients will see you in their search results if your profile is\r\n              public.\r\n            </Typography>\r\n            <Typography component=\"li\">\r\n              You will be able to apply for posted Jobs.\r\n            </Typography>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              sx={{ mt: 3 }}\r\n              onClick={() => handleNavigate(`/edit/profile/worker`)}\r\n            >\r\n              Complete Profile\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          borderRadius: 5,\r\n          maxWidth: 1000,\r\n          backgroundColor: \"#F4F5F8\",\r\n          margin: \"30px auto\",\r\n          boxShadow: 10,\r\n          p: 2,\r\n        }}\r\n      >\r\n        <Typography sx={{ fontWeight: \"bold\" }}>Recommended Jobs</Typography>\r\n        {jobs.data &&\r\n          jobs.data.length > 0 &&\r\n          profile[0].profile_completeness > 7 && (\r\n            <FindJobCard jobs={jobs.data} loading={loading} />\r\n          )}\r\n        {jobs.data &&\r\n          jobs.data.length > 0 &&\r\n          profile[0].profile_completeness > 7 && (\r\n            <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 5 }}>\r\n              <Pagination\r\n                count={Math.ceil(jobs.meta.total / limit.limit)}\r\n                page={limit.page}\r\n                onChange={handleChangePage}\r\n                disabled={onLoadLoading} // Disable pagination when loading more jobs\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                shape=\"rounded\"\r\n              />\r\n            </Box>\r\n          )}\r\n        {(jobs.data.length === 0 || profile[0].profile_completeness < 6) && (\r\n          <Box>\r\n            <Box sx={{ maxWidth: 600, margin: \"10px auto\", p: 2 }}>\r\n              <Box sx={{ textAlign: \"center\" }}>\r\n                <WorkIcon sx={{ height: 100, width: 100 }} color=\"primary\" />\r\n              </Box>\r\n              <Typography sx={{ textAlign: { xs: \"center\", md: \"left\" } }}>\r\n                Sorry, we can’t find relevant jobs for you. We will send you a\r\n                note as soon as a new job is posted. Please make sure to turn\r\n                email or Telegram notifications on. Or try to add more\r\n                Categories and Skills so we could recommend you more jobs.\r\n              </Typography>\r\n\r\n              <Box sx={{ width: \"100%\", mt: 2, p: 3 }} align=\"center\">\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={5} md={5}>\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        handleNavigate(`/account/settings`)\r\n                      }\r\n                    >\r\n                      Notifications Settings\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={5} md={5}>\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => handleNavigate(`/edit/profile/worker`)}\r\n                    >\r\n                      Edit Profile\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default WDashboard;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7 8c0-.55.45-1 1-1h5c.55 0 1 .45 1 1s-.45 1-1 1H8c-.55 0-1-.45-1-1zm0 3c0-.55.45-1 1-1h5c.55 0 1 .45 1 1s-.45 1-1 1H8c-.55 0-1-.45-1-1zm3 3c0 .55-.45 1-1 1H8c-.55 0-1-.45-1-1s.45-1 1-1h1c.55 0 1 .45 1 1zm8.29.12-3.54 3.54c-.39.39-1.02.39-1.41 0l-1.41-1.41a.9959.9959 0 0 1 0-1.41c.39-.39 1.02-.39 1.41 0l.71.71 2.83-2.83c.39-.39 1.02-.39 1.41 0 .39.38.39 1.01 0 1.4z\"\n}), 'PlaylistAddCheckCircleRounded');\nexports.default = _default;"],"names":["user","useSelector","state","users","_jsxs","Box","children","role","_jsx","WDashboard","CDashboard","convertToPercentage","num","concat","history","useHistory","profile","uuid","_React$useState","React","_React$useState2","_slicedToArray","loading","setLoading","_React$useState3","_React$useState4","onLoadLoading","setOnLoadLoading","_React$useState5","data","meta","_React$useState6","jobs","setJobs","_React$useState7","limit","page","_React$useState8","setLimit","optimizedFn","func","timer","_len","arguments","length","args","Array","_key","context","this","clearTimeout","setTimeout","apply","debounce","params","undefined","Http","_objectSpread","then","res","handleNavigate","link","push","sx","mt","p","ToastNotificationContainer","borderRadius","maxWidth","backgroundColor","margin","boxShadow","Typography","fontWeight","Divider","Grid","container","spacing","item","xs","md","display","alignItems","maxHeight","VisibilityIcon","width","height","color","ml","fontSize","PlaylistAddCheckCircleRoundedIcon","profile_completeness","component","Button","variant","onClick","FindJobCard","justifyContent","Pagination","count","Math","ceil","total","onChange","e","newPage","prev","disabled","shape","textAlign","WorkIcon","align","sm","fullWidth","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}