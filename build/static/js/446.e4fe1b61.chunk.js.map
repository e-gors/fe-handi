{"version":3,"file":"static/js/446.e4fe1b61.chunk.js","mappings":"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","sources":["components/FormField.js","components/SelectDropdown.js","modules/users/components/jobs/OptionalFields.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/ArrowBack.js","../node_modules/@mui/icons-material/SaveAlt.js","../node_modules/@mui/material/TextField/TextField.js","../node_modules/@mui/material/TextField/textFieldClasses.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction FormField(props) {\r\n  const { errors, name, customError, ...rest } = props;\r\n\r\n  let error = false;\r\n  let helperText = \"\";\r\n\r\n  if (customError) {\r\n    error = true;\r\n    helperText = customError;\r\n  }\r\n\r\n  if (errors) {\r\n    error = (errors && errors.has(name)) || false;\r\n    helperText = (errors && errors.first(name)) || \"\";\r\n  }\r\n\r\n  const fieldProps = {\r\n    error,\r\n    name,\r\n    helperText,\r\n    ...rest,\r\n    value: rest.value || \"\",\r\n  };\r\n\r\n  return <TextField size=\"small\" variant=\"outlined\" {...fieldProps} />;\r\n}\r\n\r\nexport default FormField;\r\n","import React from \"react\";\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  InputLabel,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nfunction SelectDropdown(props) {\r\n  const {\r\n    label,\r\n    errors,\r\n    options = [],\r\n    categories = [],\r\n    subCategories = [],\r\n    customError,\r\n    ...rest\r\n  } = props;\r\n\r\n  let error = false;\r\n  let helperText = \"\";\r\n\r\n  // handle customError\r\n  if (customError) {\r\n    error = customError.error || false;\r\n    helperText = customError.message || \"\";\r\n  }\r\n\r\n  if (errors) {\r\n    error = (errors && errors.has(props.name)) || false;\r\n    helperText = (errors && errors.first(props.name)) || \"\";\r\n  }\r\n\r\n  const newProps = {\r\n    margin: \"dense\",\r\n    error,\r\n    ...rest,\r\n  };\r\n\r\n  return (\r\n    <FormControl\r\n      size=\"small\"\r\n      sx={{\r\n        width: \"100%\",\r\n        mt: 0.5,\r\n        mb: 0.5,\r\n      }}\r\n    >\r\n      <InputLabel id=\"dropdown-label\">{label}</InputLabel>\r\n      <Select\r\n        labelId=\"dropdown-label\"\r\n        input={<OutlinedInput label={label} />}\r\n        {...newProps}\r\n      >\r\n        {options.map((option, i) => (\r\n          <MenuItem key={i} value={option}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n        {categories.map((category, i) => (\r\n          <MenuItem key={i} value={category.name}>\r\n            {category.name}\r\n          </MenuItem>\r\n        ))}\r\n        {subCategories.map((category) =>\r\n          category.children.map((child, i) => (\r\n            <MenuItem key={i} value={child.name}>\r\n              {child.name}\r\n            </MenuItem>\r\n          ))\r\n        )}\r\n      </Select>\r\n      <FormHelperText error>{helperText}</FormHelperText>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default SelectDropdown;\r\n","import {\r\n  Box,\r\n  Button,\r\n  FormHelperText,\r\n  IconButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport FormField from \"../../../../components/FormField\";\r\nimport SelectDropdown from \"../../../../components/SelectDropdown\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport SaveAltIcon from \"@mui/icons-material/SaveAlt\";\r\n\r\nconst places = [\"Hilongos\", \"Matalom\", \"Hindang\", \"Inopacan\", \"Bato\"];\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    mt: 5,\r\n  },\r\n  titleWrapper: {\r\n    mt: 2,\r\n    mb: 2,\r\n  },\r\n\r\n  buttonWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    mt: 5,\r\n  },\r\n  back: {\r\n    transition: \"0.5s\",\r\n\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  backArrow: {\r\n    mr: 1,\r\n  },\r\n  cancel: {\r\n    mr: 2,\r\n  },\r\n  next: {\r\n    maxWidth: 200,\r\n    background: `linear-gradient(0deg, rgba(0,3,255,1) 0%, rgba(2,126,251,1) 100%)`,\r\n    margin: \"0 auto\",\r\n    transition: \"1s\",\r\n\r\n    \"&:hover\": {\r\n      background: `linear-gradient(0deg, rgba(0,3,255,1) 50%, rgba(2,126,251,1) 100%)`,\r\n    },\r\n  },\r\n  rightButtons: { display: \"flex\", justifyContent: \"space-between\" },\r\n};\r\n\r\nfunction OptionalFields(props) {\r\n  const {\r\n    category,\r\n    steps,\r\n    activeStep,\r\n    handleCancel,\r\n    handleNext,\r\n    handleBack,\r\n    locations,\r\n    setLocations,\r\n    skillses,\r\n    setSkills,\r\n    ques,\r\n    setQues,\r\n  } = props;\r\n\r\n  const skills = useSelector((state) => state.skills.skills);\r\n\r\n  const [selectedLocations, setSelectedLocations] = React.useState([]);\r\n  const [selectedSkills, setSelectedSkills] = React.useState([]);\r\n  const [questions, setQuestions] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    if (locations) {\r\n      setSelectedLocations(locations);\r\n    }\r\n    if (skillses) {\r\n      setSelectedSkills(skillses);\r\n    }\r\n    if (ques) {\r\n      setQuestions(ques);\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (state, value) => {\r\n    const newValue = typeof value === \"string\" ? value.split(\",\") : value;\r\n    if (state === \"locations\") {\r\n      setSelectedLocations(newValue);\r\n    } else {\r\n      setSelectedSkills(newValue);\r\n    }\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    setQuestions([...questions, { text: \"\", readonly: false }]);\r\n  };\r\n\r\n  const handleSaveQuestion = (index) => {\r\n    const newQuestions = [...questions];\r\n    newQuestions[index].readonly = true;\r\n    setQuestions(newQuestions);\r\n  };\r\n\r\n  const handleDeleteQuestion = (index) => {\r\n    const newQuestions = [...questions];\r\n    newQuestions.splice(index, 1);\r\n    setQuestions(newQuestions);\r\n  };\r\n\r\n  const handleQuestionChange = (event, index) => {\r\n    const newQuestions = [...questions];\r\n    newQuestions[index].text = event.target.value;\r\n    setQuestions(newQuestions);\r\n  };\r\n\r\n  const handleKeyPress = (event, index) => {\r\n    if (event.key === \"Enter\") {\r\n      handleSaveQuestion(index);\r\n    }\r\n  };\r\n\r\n  const filteredSkill = skills.filter((skill) => category.includes(skill.name));\r\n\r\n  const handleValidate = () => {\r\n    if (selectedLocations.length > 0) {\r\n      setLocations(selectedLocations);\r\n    }\r\n    if (selectedSkills.length > 0) {\r\n      setSkills(selectedSkills);\r\n    }\r\n    if (questions && questions.length > 0) {\r\n      setQues(questions);\r\n    }\r\n    handleNext();\r\n  };\r\n\r\n  return (\r\n    <Box sx={styles.wrapper}>\r\n      <Box>\r\n        <Typography sx={{ fontSize: 24, mb: 2 }}>About Applicants</Typography>\r\n        <Box>\r\n          <Typography>Prefered Worker Location</Typography>\r\n          <FormHelperText>You can select 1 or more locations</FormHelperText>\r\n          <SelectDropdown\r\n            label=\"Prefered Location\"\r\n            name=\"locations\"\r\n            onChange={(e) => handleChange(\"locations\", e.target.value)}\r\n            value={selectedLocations}\r\n            multiple\r\n            options={places}\r\n          />\r\n        </Box>\r\n        <Box sx={styles.titleWrapper}>\r\n          <Typography>Required Skills</Typography>\r\n          <FormHelperText>\r\n            Select the professional skills and software tools required to\r\n            complete this job successfully.\r\n          </FormHelperText>\r\n          <SelectDropdown\r\n            value={selectedSkills}\r\n            name=\"skills\"\r\n            label=\"Required Skills\"\r\n            subCategories={filteredSkill}\r\n            onChange={(e) => handleChange(\"skills\", e.target.value)}\r\n            multiple\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <Typography>Questions</Typography>\r\n          <FormHelperText>\r\n            Add questions applicants should answer to stand out. Applicants who\r\n            with great answers should be shortlisted.\r\n          </FormHelperText>\r\n          {questions &&\r\n            questions.map((question, i) => (\r\n              <Box key={i} sx={{ display: \"flex\", m: 1 }}>\r\n                <FormField\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  label=\"Question\"\r\n                  placeholder=\"Add some questions to be answered by the applicants\"\r\n                  value={question.text}\r\n                  onChange={(event) => handleQuestionChange(event, i)}\r\n                  onKeyPress={(event) => handleKeyPress(event, i)}\r\n                  disabled={question.readonly}\r\n                />\r\n                {!question.readonly && (\r\n                  <IconButton onClick={() => handleSaveQuestion(i)}>\r\n                    <SaveAltIcon color=\"primary\" />\r\n                  </IconButton>\r\n                )}\r\n                {question.readonly && (\r\n                  <IconButton onClick={() => handleDeleteQuestion(i)}>\r\n                    <DeleteIcon color=\"error\" />\r\n                  </IconButton>\r\n                )}\r\n              </Box>\r\n            ))}\r\n          <Button\r\n            variant=\"text\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleAddQuestion}\r\n          >\r\n            Add question\r\n          </Button>\r\n        </Box>\r\n\r\n        <Box sx={styles.buttonWrapper}>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={handleBack}\r\n            size=\"small\"\r\n            sx={styles.back}\r\n            disabled={activeStep === 0 ? true : false}\r\n            type=\"text\"\r\n          >\r\n            <ArrowBackIcon sx={styles.backArrow} />\r\n            <span>Back</span>\r\n          </Button>\r\n          <Box sx={styles.rightButtons}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={handleCancel}\r\n              size=\"small\"\r\n              sx={styles.cancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => handleValidate()}\r\n              size=\"small\"\r\n              sx={styles.next}\r\n            >\r\n              {activeStep + 1 === steps.length ? \"Post my job\" : \"Next Step\"}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default OptionalFields;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67 2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/material-ui/api/form-control/)\n * - [InputLabel](/material-ui/api/input-label/)\n * - [FilledInput](/material-ui/api/filled-input/)\n * - [OutlinedInput](/material-ui/api/outlined-input/)\n * - [Input](/material-ui/api/input/)\n * - [FormHelperText](/material-ui/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n  const {\n      autoComplete,\n      autoFocus = false,\n      children,\n      className,\n      color = 'primary',\n      defaultValue,\n      disabled = false,\n      error = false,\n      FormHelperTextProps,\n      fullWidth = false,\n      helperText,\n      id: idOverride,\n      InputLabelProps,\n      inputProps,\n      InputProps,\n      inputRef,\n      label,\n      maxRows,\n      minRows,\n      multiline = false,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      required = false,\n      rows,\n      select = false,\n      SelectProps,\n      type,\n      value,\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n  const InputMore = {};\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n    InputMore.label = label;\n  }\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n    InputMore['aria-describedby'] = undefined;\n  }\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label != null && label !== '' && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n  /**\n   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.\n   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.\n   */\n  InputLabelProps: PropTypes.object,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/material-ui/api/filled-input/),\n   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n  /**\n   * Props applied to the [`Select`](/material-ui/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * The size of the component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;"],"names":["props","errors","name","customError","rest","_objectWithoutProperties","_excluded","error","helperText","has","first","fieldProps","_objectSpread","value","_jsx","TextField","size","variant","label","_props$options","options","_props$categories","categories","_props$subCategories","subCategories","message","newProps","margin","_jsxs","FormControl","sx","width","mt","mb","children","InputLabel","id","Select","labelId","input","OutlinedInput","map","option","i","MenuItem","category","child","FormHelperText","places","styles","wrapper","titleWrapper","buttonWrapper","display","justifyContent","back","transition","textDecoration","backArrow","mr","cancel","next","maxWidth","background","rightButtons","steps","activeStep","handleCancel","handleNext","handleBack","locations","setLocations","skillses","setSkills","ques","setQues","skills","useSelector","state","_React$useState","React","_React$useState2","_slicedToArray","selectedLocations","setSelectedLocations","_React$useState3","_React$useState4","selectedSkills","setSelectedSkills","_React$useState5","_React$useState6","questions","setQuestions","handleChange","newValue","split","handleSaveQuestion","index","newQuestions","_toConsumableArray","readonly","filteredSkill","filter","skill","includes","Box","Typography","fontSize","SelectDropdown","onChange","e","target","multiple","question","m","FormField","fullWidth","placeholder","text","event","handleQuestionChange","onKeyPress","key","handleKeyPress","disabled","IconButton","onClick","SaveAltIcon","color","splice","handleDeleteQuestion","DeleteIcon","Button","startIcon","AddIcon","concat","type","ArrowBackIcon","length","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","variantComponent","standard","Input","filled","FilledInput","outlined","TextFieldRoot","styled","slot","overridesResolver","root","inProps","ref","useThemeProps","autoComplete","_props$autoFocus","autoFocus","className","_props$color","defaultValue","_props$disabled","_props$error","FormHelperTextProps","_props$fullWidth","idOverride","InputLabelProps","inputProps","InputProps","inputRef","maxRows","minRows","_props$multiline","multiline","onBlur","onFocus","_props$required","required","rows","_props$select","select","SelectProps","_props$variant","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","getTextFieldUtilityClass","useUtilityClasses","InputMore","shrink","notched","native","undefined","useId","helperTextId","inputLabelId","InputComponent","InputElement","clsx","htmlFor","generateUtilityClass","textFieldClasses","generateUtilityClasses"],"sourceRoot":""}