{"version":3,"file":"static/js/2447.1c55769b.chunk.js","mappings":"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","sources":["components/FormField.js","components/ToastNotification.js","components/ToastNotificationContainer.js","components/options.js","modules/users/components/UpdateSocialNetwork.js","utils/Http.js","../node_modules/@mui/icons-material/FacebookRounded.js","../node_modules/@mui/material/TextField/TextField.js","../node_modules/@mui/material/TextField/textFieldClasses.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction FormField(props) {\r\n  const { errors, name, customError, ...rest } = props;\r\n\r\n  let error = false;\r\n  let helperText = \"\";\r\n\r\n  if (customError) {\r\n    error = true;\r\n    helperText = customError;\r\n  }\r\n\r\n  if (errors) {\r\n    error = (errors && errors.has(name)) || false;\r\n    helperText = (errors && errors.first(name)) || \"\";\r\n  }\r\n\r\n  const fieldProps = {\r\n    error,\r\n    name,\r\n    helperText,\r\n    ...rest,\r\n    value: rest.value || \"\",\r\n  };\r\n\r\n  return <TextField size=\"small\" variant=\"outlined\" {...fieldProps} />;\r\n}\r\n\r\nexport default FormField;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport default function ToastNotification(status, message, options) {\r\n  if (status === \"success\") {\r\n    return toast.success(message, options);\r\n  }\r\n  return toast.error(message, options);\r\n}\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function ToastNotificationContainer() {\r\n  return (\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n      theme=\"colored\"\r\n    />\r\n  );\r\n}\r\n","export const options = {\r\n  position: \"top-right\",\r\n  autoClose: 3000,\r\n  hideProgressBar: false,\r\n  draggable: true,\r\n  draggableDirection: \"x\" | \"y\",\r\n  draggablePercent: 60,\r\n  theme: \"colored\",\r\n};\r\n","import {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Typography,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport FormField from \"../../../components/FormField\";\r\nimport FacebookRoundedIcon from \"@mui/icons-material/FacebookRounded\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport InstagramIcon from \"@mui/icons-material/Instagram\";\r\nimport Http from \"../../../utils/Http\";\r\nimport ToastNotification from \"../../../components/ToastNotification\";\r\nimport { options } from \"../../../components/options\";\r\nimport ToastNotificationContainer from \"../../../components/ToastNotificationContainer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateUser } from \"../../../redux/actions/userActions\";\r\nimport { SocialLinkRegex } from \"../../../utils/helpers\";\r\n\r\nconst styles = {\r\n  iconTextWrapper: { mb: 5 },\r\n  links: {\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n  facebookIcon: { fontSize: { xs: 50, sm: 80, md: 120 }, color: \"blue\" },\r\n  instagramIcon: { fontSize: { xs: 50, sm: 80, md: 120 }, color: \"#F04C66\" },\r\n};\r\nfunction UpdateSocialNetwork(props) {\r\n  const { handleClose, onConfirm, type } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [url, setUrl] = React.useState({\r\n    values: {\r\n      facebook: \"\",\r\n    },\r\n  });\r\n\r\n  const [error, setError] = React.useState(null);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (type === \"Instagram\") {\r\n      setUrl({\r\n        values: {\r\n          instagram: \"\",\r\n        },\r\n      });\r\n    }\r\n    if (type === \"Twitter\") {\r\n      setUrl({\r\n        values: {\r\n          twitter: \"\",\r\n        },\r\n      });\r\n    }\r\n  }, [type]);\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setUrl((prev) => ({\r\n      ...prev,\r\n      values: {\r\n        ...prev.values,\r\n        [name]: value,\r\n      },\r\n    }));\r\n\r\n    if (!SocialLinkRegex(value, name)) {\r\n      return setError(`Invalid ${name} url`);\r\n    } else {\r\n      setError(null);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n    if (error) {\r\n      ToastNotification(\"error\", error, options);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    Http.post(\"/update/social-networks\", url.values)\r\n      .then((res) => {\r\n        if (res.data.code === 200) {\r\n          ToastNotification(\"success\", res.data.message, options);\r\n          dispatch(updateUser(res.data.user));\r\n          onConfirm();\r\n        } else {\r\n          ToastNotification(\"error\", res.data.message, options);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        ToastNotification(\"error\", err.message, options);\r\n      });\r\n  };\r\n\r\n  const handleValidate = () => {\r\n    if (type === \"Instagram\") {\r\n      if (url.values.instagram || url.values.instagram.length > 0) {\r\n        handleSubmit();\r\n      } else {\r\n        ToastNotification(\"error\", `${type} Url is required!`, options);\r\n      }\r\n    } else if (type === \"Twitter\") {\r\n      if (url.values.twitter || url.values.twitter.length > 0) {\r\n        handleSubmit();\r\n      } else {\r\n        ToastNotification(\"error\", `${type} Url is required!`, options);\r\n      }\r\n    } else {\r\n      if (url.values.facebook || url.values.facebook.length > 0) {\r\n        handleSubmit();\r\n      } else {\r\n        ToastNotification(\"error\", `${type} Url is required!`, options);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <ToastNotificationContainer />\r\n      {type === \"Facebook\" && (\r\n        <Box>\r\n          <Box align=\"center\" sx={styles.iconTextWrapper}>\r\n            <FacebookRoundedIcon sx={styles.facebookIcon} />\r\n            <Typography sx={styles.links}>\r\n              Please enter url like: https://www.facebook.com/your_username\r\n            </Typography>\r\n          </Box>\r\n          <Box>\r\n            <FormField\r\n              fullWidth\r\n              name=\"facebook\"\r\n              label=\"Facebook Link\"\r\n              value={url.values.facebook}\r\n              onChange={handleChange}\r\n            />\r\n            {error && <FormHelperText error>{error}</FormHelperText>}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n      {type === \"Instagram\" && (\r\n        <Box>\r\n          <Box align=\"center\" sx={styles.iconTextWrapper}>\r\n            <InstagramIcon sx={styles.instagramIcon} />\r\n            <Typography sx={styles.links}>\r\n              Please enter url like: https://www.instagram.com/your_username\r\n            </Typography>\r\n          </Box>\r\n          <Box>\r\n            <FormField\r\n              fullWidth\r\n              name=\"instagram\"\r\n              label=\"Instagram Link\"\r\n              value={url.values.instagram}\r\n              onChange={handleChange}\r\n            />\r\n            {error && <FormHelperText error>{error}</FormHelperText>}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n      {type === \"Twitter\" && (\r\n        <Box>\r\n          <Box align=\"center\" sx={styles.iconTextWrapper}>\r\n            <TwitterIcon sx={styles.facebookIcon} />\r\n            <Typography sx={styles.links}>\r\n              Please enter url like: https://twitter.com/your_username\r\n            </Typography>\r\n          </Box>\r\n          <Box>\r\n            <FormField\r\n              fullWidth\r\n              name=\"twitter\"\r\n              label=\"Twitter Link\"\r\n              value={url.values.twitter}\r\n              onChange={handleChange}\r\n            />\r\n            {error && <FormHelperText error>{error}</FormHelperText>}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n      <Box\r\n        align=\"right\"\r\n        sx={{ backgroundColor: \"#F4F5FB\", p: 2, borderRadius: 3, mt: 5 }}\r\n      >\r\n        <Button size=\"small\" variant=\"outlined\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          sx={{ ml: 1 }}\r\n          onClick={handleValidate}\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <CircularProgress size={24} sx={{ color: \"white\" }} thickness={5} />\r\n          ) : (\r\n            \"Save\"\r\n          )}\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default UpdateSocialNetwork;\r\n","import axios from \"axios\";\r\n\r\nconst Http = axios.create();\r\n\r\nHttp.defaults.baseURL = process.env.REACT_APP_API_DOMAIN;\r\nHttp.defaults.headers.common[\"Accept\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Content-Type\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Authorization\"] = `Bearer ${localStorage.getItem(\r\n  \"accessToken\"\r\n)}`;\r\n\r\nHttp.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    if (error.message === \"Network Error\") {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    switch (error.response && error.response.status) {\r\n      case 401:\r\n        localStorage.removeItem(\"accessToken\");\r\n        window.location.href = \"/login\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default Http;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 12c0-5.52-4.48-10-10-10S2 6.48 2 12c0 4.84 3.44 8.87 8 9.8V15H8v-3h2V9.5C10 7.57 11.57 6 13.5 6H16v3h-2c-.55 0-1 .45-1 1v2h3v3h-3v6.95c5.05-.5 9-4.76 9-9.95z\"\n}), 'FacebookRounded');\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/material-ui/api/form-control/)\n * - [InputLabel](/material-ui/api/input-label/)\n * - [FilledInput](/material-ui/api/filled-input/)\n * - [OutlinedInput](/material-ui/api/outlined-input/)\n * - [Input](/material-ui/api/input/)\n * - [FormHelperText](/material-ui/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n  const {\n      autoComplete,\n      autoFocus = false,\n      children,\n      className,\n      color = 'primary',\n      defaultValue,\n      disabled = false,\n      error = false,\n      FormHelperTextProps,\n      fullWidth = false,\n      helperText,\n      id: idOverride,\n      InputLabelProps,\n      inputProps,\n      InputProps,\n      inputRef,\n      label,\n      maxRows,\n      minRows,\n      multiline = false,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      required = false,\n      rows,\n      select = false,\n      SelectProps,\n      type,\n      value,\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n  const InputMore = {};\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n    InputMore.label = label;\n  }\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n    InputMore['aria-describedby'] = undefined;\n  }\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label != null && label !== '' && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n  /**\n   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.\n   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.\n   */\n  InputLabelProps: PropTypes.object,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/material-ui/api/filled-input/),\n   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n  /**\n   * Props applied to the [`Select`](/material-ui/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * The size of the component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;"],"names":["props","errors","name","customError","rest","_objectWithoutProperties","_excluded","error","helperText","has","first","fieldProps","_objectSpread","value","_jsx","TextField","size","variant","ToastNotification","status","message","options","toast","ToastNotificationContainer","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","draggableDirection","draggablePercent","styles","iconTextWrapper","mb","links","overflow","textOverflow","facebookIcon","fontSize","xs","sm","md","color","instagramIcon","handleClose","onConfirm","type","dispatch","useDispatch","_React$useState","React","values","facebook","_React$useState2","_slicedToArray","url","setUrl","_React$useState3","_React$useState4","setError","_React$useState5","_React$useState6","loading","setLoading","instagram","twitter","handleChange","e","target","prev","_defineProperty","SocialLinkRegex","concat","handleSubmit","Http","then","res","data","code","updateUser","user","catch","err","_jsxs","Box","children","align","sx","FacebookRoundedIcon","Typography","FormField","fullWidth","label","onChange","FormHelperText","InstagramIcon","TwitterIcon","backgroundColor","p","borderRadius","mt","Button","onClick","ml","length","disabled","CircularProgress","thickness","axios","defaults","baseURL","process","headers","common","localStorage","getItem","interceptors","response","use","Promise","reject","removeItem","window","location","href","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","TextFieldRoot","styled","FormControl","slot","overridesResolver","root","inProps","ref","useThemeProps","autoComplete","_props$autoFocus","autoFocus","className","_props$color","defaultValue","_props$disabled","_props$error","FormHelperTextProps","_props$fullWidth","idOverride","id","InputLabelProps","inputProps","InputProps","inputRef","maxRows","minRows","_props$multiline","multiline","onBlur","onFocus","placeholder","_props$required","required","rows","_props$select","select","SelectProps","_props$variant","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","getTextFieldUtilityClass","useUtilityClasses","InputMore","shrink","notched","native","undefined","useId","helperTextId","inputLabelId","InputComponent","InputElement","clsx","InputLabel","htmlFor","Select","labelId","input","generateUtilityClass","textFieldClasses","generateUtilityClasses"],"sourceRoot":""}