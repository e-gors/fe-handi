{"version":3,"file":"static/js/4551.b4f56971.chunk.js","mappings":"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","sources":["modules/users/components/worker/FindJobCard.js","modules/users/pages/worker/WDashboard.js","../node_modules/@mui/icons-material/PlaylistAddCheckCircleRounded.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../node_modules/@mui/material/internal/svg-icons/LastPage.js"],"sourcesContent":["import {\r\n  Avatar,\r\n  Box,\r\n  Chip,\r\n  CircularProgress,\r\n  Grid,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport FindJobCardModal from \"./FindJobCardModal\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { formatValue } from \"../../../../utils/helpers\";\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    mt: 5,\r\n  },\r\n  cardWrapper: {\r\n    backgroundColor: \"#EBEBEB\",\r\n    p: 2,\r\n    borderRadius: 3,\r\n    cursor: \"pointer\",\r\n\r\n    \"&:hover\": {\r\n      boxShadow: 5,\r\n\r\n      \".position\": {\r\n        color: \"blue\",\r\n      },\r\n    },\r\n  },\r\n  jobCategoryText: {\r\n    fontWeight: \"bold\",\r\n    fontSize: { xs: 14, md: 16 },\r\n    mb: 1,\r\n  },\r\n  cardTop: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  categoryWrapper: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  fullname: {\r\n    ml: 1,\r\n  },\r\n  fullnameText: { fontWeight: \"bold\" },\r\n  categoryMainWrapper: { display: \"flex\", flexWrap: \"wrap\" },\r\n  category: {\r\n    m: 0.3,\r\n    fontSize: { xs: 12, md: 14 },\r\n    backgroundColor: \"white\",\r\n    boxShadow: 1,\r\n  },\r\n  moreCategory: { border: \"2px solid white\", boxShadow: 1 },\r\n  bookmark: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": { color: \"blue\" },\r\n  },\r\n  backgroundText: {\r\n    mt: 1,\r\n    mb: 1,\r\n    display: \"-webkit-box\",\r\n    WebkitLineClamp: 3,\r\n    WebkitBoxOrient: \"vertical\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n  skillWrapper: {\r\n    mt: 2,\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  skill: {\r\n    m: 0.3,\r\n    fontSize: { xs: 12, md: 14 },\r\n    border: \"2px solid white\",\r\n    boxShadow: 1,\r\n  },\r\n  moreSkill: { border: \"2px solid white\", boxShadow: 1 },\r\n  cardBottom: { mt: 1 },\r\n  cardBottomWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    p: 2,\r\n  },\r\n};\r\n\r\nconst skillLimit = 2;\r\n\r\nconst newPosts = (date) => {\r\n  const oneWeekAgo = new Date();\r\n  oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n  const isOlderThanOneWeek = date < oneWeekAgo;\r\n\r\n  if (isOlderThanOneWeek) {\r\n    return null;\r\n  } else {\r\n    return date;\r\n  }\r\n};\r\nfunction FindJobCard(props) {\r\n  const { jobs, loading, handleForceUpdate } = props;\r\n\r\n  const user = useSelector((state) => state.users.user);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedItem, setSelectedItem] = React.useState({});\r\n\r\n  const handleOpen = (value) => {\r\n    setSelectedItem(value);\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <Box sx={styles.wrapper}>\r\n      {loading && (\r\n        <Box align=\"center\">\r\n          <CircularProgress size={40} />\r\n        </Box>\r\n      )}\r\n      <FindJobCardModal\r\n        open={open}\r\n        handleClose={handleOpen}\r\n        selectedItem={selectedItem}\r\n        user={user && user}\r\n        handleForceUpdate={handleForceUpdate}\r\n      />\r\n      <Grid container spacing={1}>\r\n        {!loading &&\r\n          jobs &&\r\n          jobs.map((job, postIndex) => {\r\n            const limitedSkills =\r\n              job.skills &&\r\n              job.skills?.length > 2 &&\r\n              jobs.skills?.length > skillLimit &&\r\n              jobs.skills.slice(0, skillLimit);\r\n            return (\r\n              <Grid key={postIndex} item xs={12} sm={12} md={6}>\r\n                <Box sx={styles.cardWrapper} onClick={() => handleOpen(job)}>\r\n                  <Box sx={{ display: \"flex\" }}>\r\n                    <Typography\r\n                      sx={styles.jobCategoryText}\r\n                      className=\"position\"\r\n                    >\r\n                      {job.position}\r\n                    </Typography>\r\n                    <Typography sx={{ ml: 1, color: \"green\" }}>•</Typography>\r\n                    <Typography\r\n                      sx={{ ml: 1, color: \"green\", fontSize: 12, mt: 0.5 }}\r\n                    >\r\n                      Posted {newPosts(job.created_at)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box sx={styles.cardTop}>\r\n                    <Avatar\r\n                      alt={job.client.fullname}\r\n                      src={\r\n                        job.client.profile &&\r\n                        job.client.profile[0][\"profile_url\"]\r\n                      }\r\n                    />\r\n                    <Box sx={styles.categoryWrapper}>\r\n                      <Box sx={styles.fullname}>\r\n                        <Typography sx={styles.fullnameText}>\r\n                          {job.client.fullname}\r\n                        </Typography>\r\n\r\n                        <Box sx={styles.categoryMainWrapper}>\r\n                          <Chip\r\n                            size=\"small\"\r\n                            key={postIndex}\r\n                            label={job.category}\r\n                            variant=\"contained\"\r\n                            sx={styles.category}\r\n                          />\r\n                        </Box>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <div\r\n                    style={styles.backgroundText}\r\n                    dangerouslySetInnerHTML={{ __html: job.description }}\r\n                  />\r\n                  <Stack sx={styles.skillWrapper}>\r\n                    {limitedSkills &&\r\n                      limitedSkills.map((skill, skillIndex) => (\r\n                        <Chip\r\n                          size=\"small\"\r\n                          key={skillIndex}\r\n                          label={skill}\r\n                          variant=\"contained\"\r\n                          sx={styles.skill}\r\n                        />\r\n                      ))}\r\n                    {job.skills &&\r\n                      job.skills?.length > 2 &&\r\n                      jobs.skils?.length > skillLimit && (\r\n                        <Chip\r\n                          size=\"small\"\r\n                          key={`${postIndex}-more`}\r\n                          label={`+${job.skills.length - skillLimit}`}\r\n                          variant=\"contained\"\r\n                          sx={styles.moreSkill}\r\n                        />\r\n                      )}\r\n                  </Stack>\r\n\r\n                  <Box sx={styles.cardBottom}>\r\n                    <Box sx={styles.cardBottomWrapper}>\r\n                      <Typography>\r\n                        ₱{\" \"}\r\n                        {job.rate\r\n                          ? `${formatValue(job.rate)} / day`\r\n                          : formatValue(job.budget)}\r\n                      </Typography>\r\n                      <Typography>{job.job_type}</Typography>\r\n                      {job.job_type === \"Daily Rate\" && (\r\n                        <Typography>{job.days}</Typography>\r\n                      )}\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              </Grid>\r\n            );\r\n          })}\r\n      </Grid>\r\n\r\n      {!loading && jobs && jobs.length === 0 && (\r\n        <Box align=\"center\">\r\n          <Typography>No Jobs found!</Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default FindJobCard;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Pagination,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport PlaylistAddCheckCircleRoundedIcon from \"@mui/icons-material/PlaylistAddCheckCircleRounded\";\r\nimport WorkIcon from \"@mui/icons-material/Work\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Http from \"../../../../utils/Http\";\r\nimport ToastNotificationContainer from \"../../../../components/ToastNotificationContainer\";\r\nimport FindJobCard from \"../../components/worker/FindJobCard\";\r\n\r\nconst convertToPercentage = (num) => {\r\n  return `${(num / 10) * 100}%`;\r\n};\r\n\r\nfunction WDashboard() {\r\n  const history = useHistory();\r\n  const user = useSelector((state) => state.users.user);\r\n\r\n  const { role, uuid, profile } = user;\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [onLoadLoading, setOnLoadLoading] = React.useState(false);\r\n\r\n  const [jobs, setJobs] = React.useState({\r\n    data: [],\r\n    meta: {},\r\n  });\r\n  const [limit, setLimit] = React.useState({\r\n    limit: 10,\r\n    page: 1,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    optimizedFn();\r\n  }, []); // eslint-disable-line\r\n\r\n  const fetchingData = (params = {}) => {\r\n    setLoading(true);\r\n    Http.get(\"/recommended/jobs\", {\r\n      params: {\r\n        ...limit,\r\n        ...params,\r\n      },\r\n    }).then((res) => {\r\n      if (res.data.data) {\r\n        setJobs({\r\n          data: res.data.data,\r\n          meta: res.data.meta,\r\n        });\r\n      }\r\n      setLoading(false);\r\n      setOnLoadLoading(false);\r\n    });\r\n  };\r\n\r\n  const debounce = (func) => {\r\n    let timer;\r\n    return function (...args) {\r\n      const context = this;\r\n      if (timer) clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        timer = null;\r\n        func.apply(context, args);\r\n      }, 700);\r\n    };\r\n  };\r\n\r\n  const optimizedFn = React.useCallback(debounce(fetchingData), []); // eslint-disable-line\r\n\r\n  const handleChangePage = (e, newPage) => {\r\n    if (limit.page !== newPage) {\r\n      setOnLoadLoading(true);\r\n      setLimit((prev) => ({\r\n        limit: prev.limit,\r\n        page: newPage,\r\n      }));\r\n      optimizedFn({ page: newPage });\r\n    }\r\n  };\r\n\r\n  const handleNavigate = (link) => {\r\n    history.push(link);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 8, p: 2 }}>\r\n      <ToastNotificationContainer />\r\n      <Box\r\n        sx={{\r\n          borderRadius: 5,\r\n          maxWidth: 1000,\r\n          backgroundColor: \"#F4F5F8\",\r\n          margin: \"30px auto\",\r\n          boxShadow: 10,\r\n          p: 2,\r\n        }}\r\n      >\r\n        <Typography sx={{ fontWeight: \"bold\" }}>Profile Insights</Typography>\r\n        <Divider />\r\n        <Grid container spacing={2} sx={{ p: \"10px 30px\" }}>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={3}\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              maxHeight: { xs: \"100%\", md: 75 },\r\n            }}\r\n          >\r\n            <VisibilityIcon\r\n              sx={{ p: 1, backgroundColor: \"#EDF3FF\", width: 50, height: 50 }}\r\n              color=\"primary\"\r\n            />\r\n            <Box sx={{ ml: 2 }}>\r\n              <Typography>Monthly view</Typography>\r\n              <Typography sx={{ fontWeight: \"bold\", fontSize: 24 }}>\r\n                0\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={3}\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              maxHeight: { xs: \"100%\", md: 75 },\r\n            }}\r\n          >\r\n            <PlaylistAddCheckCircleRoundedIcon\r\n              sx={{ p: 1, backgroundColor: \"#EDF3FF\", width: 50, height: 50 }}\r\n              color=\"primary\"\r\n            />\r\n            <Box sx={{ ml: 2 }}>\r\n              <Typography>Profile Completeness</Typography>\r\n              <Typography sx={{ fontWeight: \"bold\", fontSize: 24 }}>\r\n                {profile &&\r\n                  convertToPercentage(profile[0].profile_completeness)}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography sx={{ fontWeight: \"bold\" }}>\r\n              When you complete all required fields in your Profile:\r\n            </Typography>\r\n            <Typography component=\"li\">\r\n              Clients will see you in their search results if your profile is\r\n              public.\r\n            </Typography>\r\n            <Typography component=\"li\">\r\n              You will be able to apply for posted Jobs.\r\n            </Typography>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              sx={{ mt: 3 }}\r\n              onClick={() => handleNavigate(`/edit/profile/worker`)}\r\n            >\r\n              Complete Profile\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          borderRadius: 5,\r\n          maxWidth: 1000,\r\n          backgroundColor: \"#F4F5F8\",\r\n          margin: \"30px auto\",\r\n          boxShadow: 10,\r\n          p: 2,\r\n        }}\r\n      >\r\n        <Typography sx={{ fontWeight: \"bold\" }}>Recommended Jobs</Typography>\r\n        {jobs.data &&\r\n          jobs.data.length > 0 &&\r\n          profile[0].profile_completeness > 7 && (\r\n            <FindJobCard jobs={jobs.data} loading={loading} />\r\n          )}\r\n        {jobs.data &&\r\n          jobs.data.length > 0 &&\r\n          profile[0].profile_completeness > 7 && (\r\n            <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 5 }}>\r\n              <Pagination\r\n                count={Math.ceil(jobs.meta.total / limit.limit)}\r\n                page={limit.page}\r\n                onChange={handleChangePage}\r\n                disabled={onLoadLoading} // Disable pagination when loading more jobs\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                shape=\"rounded\"\r\n              />\r\n            </Box>\r\n          )}\r\n        {(jobs.data.length === 0 || profile[0].profile_completeness < 6) && (\r\n          <Box>\r\n            <Box sx={{ maxWidth: 600, margin: \"10px auto\", p: 2 }}>\r\n              <Box sx={{ textAlign: \"center\" }}>\r\n                <WorkIcon sx={{ height: 100, width: 100 }} color=\"primary\" />\r\n              </Box>\r\n              <Typography sx={{ textAlign: { xs: \"center\", md: \"left\" } }}>\r\n                Sorry, we can’t find relevant jobs for you. We will send you a\r\n                note as soon as a new job is posted. Please make sure to turn\r\n                email or Telegram notifications on. Or try to add more\r\n                Categories and Skills so we could recommend you more jobs.\r\n              </Typography>\r\n\r\n              <Box sx={{ width: \"100%\", mt: 2, p: 3 }} align=\"center\">\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={5} md={5}>\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        handleNavigate(`/account/settings`)\r\n                      }\r\n                    >\r\n                      Notifications Settings\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={5} md={5}>\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => handleNavigate(`/edit/profile/worker`)}\r\n                    >\r\n                      Edit Profile\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default WDashboard;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7 8c0-.55.45-1 1-1h5c.55 0 1 .45 1 1s-.45 1-1 1H8c-.55 0-1-.45-1-1zm0 3c0-.55.45-1 1-1h5c.55 0 1 .45 1 1s-.45 1-1 1H8c-.55 0-1-.45-1-1zm3 3c0 .55-.45 1-1 1H8c-.55 0-1-.45-1-1s.45-1 1-1h1c.55 0 1 .45 1 1zm8.29.12-3.54 3.54c-.39.39-1.02.39-1.41 0l-1.41-1.41a.9959.9959 0 0 1 0-1.41c.39-.39 1.02-.39 1.41 0l.71.71 2.83-2.83c.39-.39 1.02-.39 1.41 0 .39.38.39 1.01 0 1.4z\"\n}), 'PlaylistAddCheckCircleRounded');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');"],"names":["styles","wrapper","mt","cardWrapper","backgroundColor","p","borderRadius","cursor","boxShadow","color","jobCategoryText","fontWeight","fontSize","xs","md","mb","cardTop","display","alignItems","categoryWrapper","width","justifyContent","fullname","ml","fullnameText","categoryMainWrapper","flexWrap","category","m","moreCategory","border","bookmark","backgroundText","WebkitLineClamp","WebkitBoxOrient","overflow","textOverflow","skillWrapper","flexDirection","skill","moreSkill","cardBottom","cardBottomWrapper","skillLimit","newPosts","date","oneWeekAgo","Date","setDate","getDate","props","jobs","loading","handleForceUpdate","user","useSelector","state","users","_React$useState","React","_React$useState2","_slicedToArray","open","setOpen","_React$useState3","_React$useState4","selectedItem","setSelectedItem","handleOpen","value","_jsxs","Box","sx","children","_jsx","align","CircularProgress","size","FindJobCardModal","handleClose","Grid","container","spacing","map","job","postIndex","_job$skills","_jobs$skills","_job$skills2","_jobs$skils","limitedSkills","skills","length","slice","item","sm","onClick","Typography","className","position","created_at","Avatar","alt","client","src","profile","Chip","label","variant","style","dangerouslySetInnerHTML","__html","description","Stack","skillIndex","skils","concat","rate","formatValue","budget","job_type","days","convertToPercentage","num","history","useHistory","role","uuid","setLoading","onLoadLoading","setOnLoadLoading","_React$useState5","data","meta","_React$useState6","setJobs","_React$useState7","limit","page","_React$useState8","setLimit","optimizedFn","func","timer","_len","arguments","args","Array","_key","context","this","clearTimeout","setTimeout","apply","debounce","params","undefined","Http","_objectSpread","then","res","handleNavigate","link","push","ToastNotificationContainer","maxWidth","margin","Divider","maxHeight","VisibilityIcon","height","PlaylistAddCheckCircleRoundedIcon","profile_completeness","component","Button","FindJobCard","Pagination","count","Math","ceil","total","onChange","e","newPage","prev","disabled","shape","textAlign","WorkIcon","fullWidth","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon"],"sourceRoot":""}