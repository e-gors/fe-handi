{"version":3,"file":"static/js/2306.e6dfbe9d.chunk.js","mappings":"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","sources":["components/FormField.js","components/ToastNotification.js","components/ToastNotificationContainer.js","components/options.js","modules/users/pages/MyAccountSettings.js","modules/users/pages/NotificationSettings.js","modules/users/pages/Security.js","modules/users/pages/Settings.js","utils/Http.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction FormField(props) {\r\n  const { errors, name, customError, ...rest } = props;\r\n\r\n  let error = false;\r\n  let helperText = \"\";\r\n\r\n  if (customError) {\r\n    error = true;\r\n    helperText = customError;\r\n  }\r\n\r\n  if (errors) {\r\n    error = (errors && errors.has(name)) || false;\r\n    helperText = (errors && errors.first(name)) || \"\";\r\n  }\r\n\r\n  const fieldProps = {\r\n    error,\r\n    name,\r\n    helperText,\r\n    ...rest,\r\n    value: rest.value || \"\",\r\n  };\r\n\r\n  return <TextField size=\"small\" variant=\"outlined\" {...fieldProps} />;\r\n}\r\n\r\nexport default FormField;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport default function ToastNotification(status, message, options) {\r\n  if (status === \"success\") {\r\n    return toast.success(message, options);\r\n  }\r\n  return toast.error(message, options);\r\n}\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function ToastNotificationContainer() {\r\n  return (\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n      theme=\"colored\"\r\n    />\r\n  );\r\n}\r\n","export const options = {\r\n  position: \"top-right\",\r\n  autoClose: 3000,\r\n  hideProgressBar: false,\r\n  draggable: true,\r\n  draggableDirection: \"x\" | \"y\",\r\n  draggablePercent: 60,\r\n  theme: \"colored\",\r\n};\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport {\r\n  Box,\r\n  CircularProgress,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\r\nimport AccountCircleOutlinedIcon from \"@mui/icons-material/AccountCircleOutlined\";\r\nimport BuildCircleOutlinedIcon from \"@mui/icons-material/BuildCircleOutlined\";\r\nimport DeleteForeverOutlinedIcon from \"@mui/icons-material/DeleteForeverOutlined\";\r\nimport FormField from \"../../../components/FormField\";\r\nimport ReeValidate from \"ree-validate-18\";\r\nimport Http from \"../../../utils/Http\";\r\nimport ToastNotificationContainer from \"../../../components/ToastNotificationContainer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { options } from \"../../../components/options\";\r\nimport ToastNotification from \"../../../components/ToastNotification\";\r\nimport { updateUser } from \"../../../redux/actions/userActions\";\r\nimport ConfirmationModal from \"../../../components/ConfirmationModal\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst emailValidator = new ReeValidate.Validator({\r\n  email: \"required|email|regex:^[a-zA-Z0-9]+.[^s@]+@gmail.com$\",\r\n});\r\n\r\nconst addressValidator = new ReeValidate.Validator({\r\n  address: \"required\",\r\n});\r\n\r\nconst numberValidator = new ReeValidate.Validator({\r\n  contact_number: \"required|max:11|numeric|regex:^09[0-9]{9}$\",\r\n});\r\n\r\nconst styles = {\r\n  mainWrapper: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  bigIcon: { mr: 2, color: \"green\", fontSize: { xs: 30, md: 40 } },\r\n  editIcon: { fontSize: 18, color: \"blue\" },\r\n  iconButton: { ml: 0.5 },\r\n  left: {\r\n    display: \"flex\",\r\n    width: { xs: \"100%\", sm: \"50%\", md: \"50%\" },\r\n    alignItems: \"center\",\r\n    justifyContent: { xs: \"center\", sm: \"left\", md: \"left\" },\r\n    mb: { xs: 2, md: 0 },\r\n  },\r\n  right: { width: { xs: \"100%\", sm: \"50%\", md: \"50%\" } },\r\n  title: { fontWeight: 700, fontSize: { xs: 14, md: 18 } },\r\n  dataWrapper: {\r\n    mt: 1,\r\n  },\r\n  data: { display: \"flex\", alignItems: \"center\" },\r\n  center: { textAlign: { xs: \"center\", sm: \"left\", md: \"left\" } },\r\n  divider: {\r\n    mt: 5,\r\n    mb: 5,\r\n    boxShaodw: 3,\r\n  },\r\n};\r\n\r\nfunction MyAccountSettings(props) {\r\n  const { user } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [openConfirm, setOpenConfirm] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState(\"\");\r\n\r\n  const [newEmail, setNewEmail] = React.useState({\r\n    values: {\r\n      email: \"\",\r\n    },\r\n    errors: emailValidator.errors,\r\n  });\r\n\r\n  const [newPhone, setNewPhone] = React.useState({\r\n    values: {\r\n      contact_number: \"\",\r\n    },\r\n    errors: numberValidator.errors,\r\n  });\r\n\r\n  const [newAddress, setNewAddress] = React.useState({\r\n    values: {\r\n      address: \"\",\r\n    },\r\n    errors: addressValidator.errors,\r\n  });\r\n\r\n  const handleOpenForm = (type) => {\r\n    setOpen(!open);\r\n    setType(type);\r\n  };\r\n\r\n  const handleChangeEMail = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setNewEmail((prev) => ({\r\n      ...prev,\r\n      values: {\r\n        ...prev.values,\r\n        [name]: value,\r\n      },\r\n    }));\r\n\r\n    const { errors } = emailValidator;\r\n\r\n    emailValidator.validate(name, value).then(() => {\r\n      setNewEmail((prev) => ({\r\n        ...prev,\r\n        errors,\r\n      }));\r\n    });\r\n  };\r\n\r\n  const handleChangeNumber = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setNewPhone((prev) => ({\r\n      ...prev,\r\n      values: {\r\n        ...prev.values,\r\n        [name]: value,\r\n      },\r\n    }));\r\n\r\n    const { errors } = numberValidator;\r\n\r\n    numberValidator.validate(name, value).then(() => {\r\n      setNewPhone((prev) => ({\r\n        ...prev,\r\n        errors,\r\n      }));\r\n    });\r\n  };\r\n\r\n  const handleChangeAddress = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setNewAddress((prev) => ({\r\n      ...prev,\r\n      values: {\r\n        ...prev.values,\r\n        [name]: value,\r\n      },\r\n    }));\r\n\r\n    const { errors } = addressValidator;\r\n\r\n    addressValidator.validate(name, value).then(() => {\r\n      setNewAddress((prev) => ({\r\n        ...prev,\r\n        errors,\r\n      }));\r\n    });\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      if (type === \"email\") {\r\n        handleValidate(newEmail.values, emailValidator, \"email\");\r\n      } else if (type === \"phone\") {\r\n        handleValidate(newPhone.values, numberValidator, \"email\");\r\n      } else {\r\n        handleValidate(newAddress.values, addressValidator, \"email\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmitEmail = () => {\r\n    setLoading(true);\r\n    Http.post(\"/account/update/email\", newEmail.values)\r\n      .then((res) => {\r\n        if (res.data.code === 200) {\r\n          dispatch(updateUser(res.data.user));\r\n          setOpen(false);\r\n          setType(\"\");\r\n          setNewEmail({\r\n            values: {\r\n              email: \"\",\r\n            },\r\n          });\r\n          ToastNotification(\"success\", res.data.message, options);\r\n        } else {\r\n          ToastNotification(\"error\", res.data.message, options);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        ToastNotification(\"error\", err.message, options);\r\n      });\r\n  };\r\n\r\n  const handleSubmitNumber = () => {\r\n    setLoading(true);\r\n    Http.post(\"/account/update/phone\", newPhone.values)\r\n      .then((res) => {\r\n        if (res.data.code === 200) {\r\n          dispatch(updateUser(res.data.user));\r\n          setOpen(false);\r\n          setType(\"\");\r\n          setNewPhone({\r\n            values: {\r\n              contact_number: \"\",\r\n            },\r\n          });\r\n          ToastNotification(\"success\", res.data.message, options);\r\n        } else {\r\n          ToastNotification(\"error\", res.data.message, options);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        ToastNotification(\"error\", err.message, options);\r\n      });\r\n  };\r\n\r\n  const handleSubmitAddress = () => {\r\n    setLoading(true);\r\n    Http.post(\"/update/address\", newAddress.values)\r\n      .then((res) => {\r\n        if (res.data.code === 200) {\r\n          dispatch(updateUser(res.data.user));\r\n          setOpen(false);\r\n          setType(\"\");\r\n          setNewAddress({\r\n            values: {\r\n              address: \"\",\r\n            },\r\n          });\r\n          ToastNotification(\"success\", res.data.message, options);\r\n        } else {\r\n          ToastNotification(\"error\", res.data.message, options);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        ToastNotification(\"error\", err.message, options);\r\n      });\r\n  };\r\n\r\n  const handleRemoveAccount = () => {\r\n    Http.delete(\"/account/terminate\")\r\n      .then((res) => {\r\n        if (res.data.code === 200) {\r\n          ToastNotification(\"success\", res.data.message, options);\r\n          localStorage.clear();\r\n          setTimeout(() => history.push(\"/login\", 300));\r\n        } else {\r\n          ToastNotification(\"error\", res.data.message, options);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        ToastNotification(\"error\", err.message, options);\r\n      });\r\n  };\r\n\r\n  const handleValidate = (data, validator, type) => {\r\n    validator.validateAll(data).then((success) => {\r\n      if (success) {\r\n        if (type === \"email\") {\r\n          handleSubmitEmail();\r\n        } else if (type === \"phone\") {\r\n          handleSubmitNumber();\r\n        } else {\r\n          handleSubmitAddress();\r\n        }\r\n      } else {\r\n        if (type === \"email\") {\r\n          setNewEmail((prev) => ({\r\n            ...prev,\r\n            errors: emailValidator.errors,\r\n          }));\r\n        } else if (type === \"phone\") {\r\n          setNewPhone((prev) => ({\r\n            ...prev,\r\n            errors: numberValidator.errors,\r\n          }));\r\n        } else {\r\n          setNewAddress((prev) => ({\r\n            ...prev,\r\n            errors: addressValidator.errors,\r\n          }));\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <ToastNotificationContainer />\r\n      <ConfirmationModal\r\n        open={openConfirm}\r\n        title=\"Delete you account?\"\r\n        message=\"This will delete your account forever.\"\r\n        onClose={() => setOpenConfirm(false)}\r\n        onConfirm={handleRemoveAccount}\r\n      />\r\n      <Box sx={styles.mainWrapper}>\r\n        <Box sx={styles.left}>\r\n          <AccountCircleOutlinedIcon sx={styles.bigIcon} />\r\n          <Typography sx={styles.title}>BASIC INFO</Typography>\r\n        </Box>\r\n\r\n        <Box sx={styles.right}>\r\n          <Box sx={styles.dataWrapper}>\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Typography>Email</Typography>\r\n              <IconButton\r\n                sx={styles.iconButton}\r\n                onClick={() => handleOpenForm(\"email\")}\r\n              >\r\n                <EditOutlinedIcon sx={styles.editIcon} />\r\n              </IconButton>\r\n            </Box>\r\n            <Box sx={styles.data}>\r\n              <Typography>{user?.email}</Typography>\r\n            </Box>\r\n\r\n            {open && type === \"email\" && (\r\n              <Box>\r\n                <Box sx={{ mb: 1 }}>\r\n                  <Typography sx={{ fontSize: 12 }}>New Email *</Typography>\r\n                  <FormField\r\n                    name=\"email\"\r\n                    label=\"New Email\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    onKeyPress={handleKeyPress}\r\n                    value={newEmail.values.email}\r\n                    onChange={handleChangeEMail}\r\n                    errors={newEmail.errors}\r\n                    InputProps={{\r\n                      style: {\r\n                        background: \"rgba(255, 255, 255, 0.5)\",\r\n                        coor: \"black\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Box>\r\n                <Box sx={{ display: \"flex\", justifyContent: \"right\" }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={() => handleOpenForm(\"email\")}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"error\"\r\n                    size=\"small\"\r\n                    sx={{ ml: 1 }}\r\n                    onClick={() =>\r\n                      handleValidate(newEmail.values, emailValidator, \"email\")\r\n                    }\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? <CircularProgress size={24} /> : \"Submit\"}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Box sx={styles.dataWrapper}>\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Typography>Phone</Typography>\r\n              <IconButton\r\n                sx={styles.iconButton}\r\n                onClick={() => handleOpenForm(\"phone\")}\r\n              >\r\n                <EditOutlinedIcon sx={styles.editIcon} />\r\n              </IconButton>\r\n            </Box>\r\n            <Box sx={styles.data}>\r\n              {user.contact_number && (\r\n                <Typography>{user?.contact_number}</Typography>\r\n              )}\r\n              {!user.contact_number && <Typography>Not Set</Typography>}\r\n            </Box>\r\n            {open && type === \"phone\" && (\r\n              <Box>\r\n                <Box sx={{ mb: 1 }}>\r\n                  <Typography sx={{ fontSize: 12 }}>\r\n                    New phone number *\r\n                  </Typography>\r\n                  <FormField\r\n                    name=\"contact_number\"\r\n                    label=\"Phone Number\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    onKeyPress={handleKeyPress}\r\n                    value={newPhone.values.contact_number}\r\n                    onChange={handleChangeNumber}\r\n                    errors={newPhone.errors}\r\n                    InputProps={{\r\n                      style: {\r\n                        background: \"rgba(255, 255, 255, 0.5)\",\r\n                        coor: \"black\",\r\n                      },\r\n                    }}\r\n                    inputProps={{\r\n                      inputMode: \"numeric\",\r\n                      pattern: \"[0-9]*\",\r\n                      maxLength: 11,\r\n                    }}\r\n                  />\r\n                </Box>\r\n                <Box sx={{ display: \"flex\", justifyContent: \"right\" }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={() => handleOpenForm(\"phone\")}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"error\"\r\n                    size=\"small\"\r\n                    sx={{ ml: 1 }}\r\n                    onClick={() =>\r\n                      handleValidate(newPhone.values, numberValidator, \"phone\")\r\n                    }\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? <CircularProgress size={24} /> : \"Submit\"}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Box sx={styles.dataWrapper}>\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Typography>Location</Typography>\r\n              <IconButton\r\n                sx={styles.iconButton}\r\n                onClick={() => handleOpenForm(\"address\")}\r\n              >\r\n                <EditOutlinedIcon sx={styles.editIcon} />\r\n              </IconButton>\r\n            </Box>\r\n            <Box sx={styles.data}>\r\n              {user.profile[0].address && (\r\n                <Typography>{user.profile[0].address}</Typography>\r\n              )}\r\n              {!user.profile[0].address && <Typography>Not Set</Typography>}\r\n            </Box>\r\n            {open && type === \"address\" && (\r\n              <Box>\r\n                <Box sx={{ mb: 1 }}>\r\n                  <Typography sx={{ fontSize: 12 }}>New Address *</Typography>\r\n                  <FormField\r\n                    name=\"address\"\r\n                    label=\"New Address\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    onKeyPress={handleKeyPress}\r\n                    value={newAddress.values.address}\r\n                    onChange={handleChangeAddress}\r\n                    errors={newAddress.errors}\r\n                    InputProps={{\r\n                      style: {\r\n                        background: \"rgba(255, 255, 255, 0.5)\",\r\n                        coor: \"black\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Box>\r\n                <Box sx={{ display: \"flex\", justifyContent: \"right\" }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={() => handleOpenForm(\"address\")}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"error\"\r\n                    size=\"small\"\r\n                    sx={{ ml: 1 }}\r\n                    onClick={() =>\r\n                      handleValidate(\r\n                        newAddress.values,\r\n                        addressValidator,\r\n                        \"address\"\r\n                      )\r\n                    }\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? <CircularProgress size={24} /> : \"Submit\"}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Divider sx={styles.divider} />\r\n      <Box sx={styles.mainWrapper}>\r\n        <Box sx={styles.left}>\r\n          <BuildCircleOutlinedIcon sx={styles.bigIcon} />\r\n          <Typography sx={styles.title}> SYSTEM USAGE</Typography>\r\n        </Box>\r\n\r\n        <Box sx={styles.right}>\r\n          <Box sx={styles.center}>\r\n            <Typography>\r\n              {user.role === \"client\" ? \"Hire only\" : \"Work only\"}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Divider sx={styles.divider} />\r\n      <Box sx={styles.mainWrapper}>\r\n        <Box sx={styles.left}>\r\n          <DeleteForeverOutlinedIcon sx={styles.bigIcon} />\r\n          <Typography sx={styles.title}>DELETE ACCOUNT</Typography>\r\n        </Box>\r\n\r\n        <Box sx={styles.right}>\r\n          <Box sx={styles.center}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"error\"\r\n              size=\"small\"\r\n              onClick={() => setOpenConfirm(true)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Divider sx={styles.divider} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MyAccountSettings;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport EmailRoundedIcon from \"@mui/icons-material/EmailRounded\";\r\n\r\nfunction NotificationSettings() {\r\n  const [state, setState] = React.useState({\r\n    contact: true,\r\n    offers: false,\r\n    proposals: false,\r\n    jobpost: false,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n\r\n  const { gilad, jason, antoine } = state;\r\n  const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\r\n\r\n  return (\r\n    <Box sx={{ p: 2 }}>\r\n      <Box sx={{ display: \"flex\", mb: 1 }}>\r\n        <MailIcon sx={{ mr: 2, color: \"green\" }} />\r\n        <Typography sx={{ fontWeight: 700 }}>EMAIL NOTIFICATIONS</Typography>\r\n      </Box>\r\n      <Box sx={{ display: \"flex\" }}>\r\n        <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\r\n          <FormLabel component=\"legend\"> Subscribe to:</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={gilad}\r\n                  onChange={handleChange}\r\n                  name=\"contact\"\r\n                />\r\n              }\r\n              label=\"Contact Email\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={jason}\r\n                  onChange={handleChange}\r\n                  name=\"offers\"\r\n                />\r\n              }\r\n              label=\"Offer Email\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={antoine}\r\n                  onChange={handleChange}\r\n                  name=\"proposals\"\r\n                />\r\n              }\r\n              label=\"Proposal Email\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={antoine}\r\n                  onChange={handleChange}\r\n                  name=\"jobpost\"\r\n                />\r\n              }\r\n              label=\"New Job Posting Email\"\r\n            />\r\n          </FormGroup>\r\n          <FormHelperText>\r\n            Or{\" \"}\r\n            <span\r\n              style={{\r\n                textDecoration: \"underline\",\r\n                cursor: \"pointer\",\r\n                color: \"blue\",\r\n              }}\r\n            >\r\n              unsubscribe\r\n            </span>{\" \"}\r\n            from all email at once.\r\n          </FormHelperText>\r\n        </FormControl>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\nexport default NotificationSettings;\r\n","import {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Divider,\r\n  IconButton,\r\n  InputAdornment,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport LockResetRoundedIcon from \"@mui/icons-material/LockResetRounded\";\r\nimport FormField from \"../../../components/FormField\";\r\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\r\nimport ReeValidate from \"ree-validate-18\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport Http from \"../../../utils/Http\";\r\nimport ToastNotification from \"../../../components/ToastNotification\";\r\nimport { options } from \"../../../components/options\";\r\nimport ToastNotificationContainer from \"../../../components/ToastNotificationContainer\";\r\nimport ConfirmationModal from \"../../../components/ConfirmationModal\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst passwordValidator = new ReeValidate.Validator({\r\n  password: \"required|min:5|max:20\",\r\n});\r\n\r\nconst styles = {\r\n  mainWrapper: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  bigIcon: { mr: 2, color: \"green\", fontSize: { xs: 30, md: 40 } },\r\n  editIcon: { fontSize: 18, color: \"blue\" },\r\n  iconButton: { ml: 0.5 },\r\n  left: {\r\n    display: \"flex\",\r\n    width: { xs: \"100%\", sm: \"50%\", md: \"50%\" },\r\n    alignItems: \"center\",\r\n    justifyContent: { xs: \"center\", sm: \"left\", md: \"left\" },\r\n    mb: { xs: 2, md: 0 },\r\n  },\r\n  right: { width: { xs: \"100%\", sm: \"50%\", md: \"50%\" } },\r\n  title: { fontWeight: 700, fontSize: { xs: 14, md: 18 } },\r\n  dataWrapper: {\r\n    mt: 1,\r\n  },\r\n  data: { display: \"flex\", alignItems: \"center\" },\r\n  center: { textAlign: { xs: \"center\", sm: \"left\", md: \"left\" } },\r\n  divider: {\r\n    mt: 5,\r\n    mb: 5,\r\n    boxShaodw: 3,\r\n  },\r\n};\r\n\r\nfunction Security() {\r\n  const history = useHistory();\r\n\r\n  const [openConfirm, setOpenConfirm] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [newPassword, setNewPassword] = React.useState({\r\n    values: {\r\n      password: \"\",\r\n    },\r\n    errors: passwordValidator.errors,\r\n  });\r\n\r\n  const handleOpenForm = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleChangePassword = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setNewPassword((prev) => ({\r\n      ...prev,\r\n      values: {\r\n        ...prev.values,\r\n        [name]: value,\r\n      },\r\n    }));\r\n\r\n    const { errors } = passwordValidator;\r\n\r\n    passwordValidator.validate(name, value).then(() => {\r\n      setNewPassword((prev) => ({\r\n        ...prev,\r\n        errors,\r\n      }));\r\n    });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleValidate();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n    Http.post(\"account/update/password\", newPassword.values)\r\n      .then((res) => {\r\n        if (res.data.code === 200) {\r\n          ToastNotification(\"success\", res.data.message, options);\r\n          setOpenConfirm(true);\r\n        } else {\r\n          ToastNotification(\"success\", res.data.message, options);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n\r\n        ToastNotification(\"success\", err.message, options);\r\n      });\r\n  };\r\n\r\n  const handleValidate = () => {\r\n    passwordValidator.validateAll(newPassword.values).then((success) => {\r\n      if (success) {\r\n        handleSubmit();\r\n      } else {\r\n        setNewPassword((prev) => ({\r\n          ...prev,\r\n          errors: passwordValidator.errors,\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <ToastNotificationContainer />\r\n      <ConfirmationModal\r\n        open={openConfirm}\r\n        title=\"Continue logged in or sign out?\"\r\n        message=\"You will need to login again with your new password if you proceed!\"\r\n        onClose={() => setOpenConfirm(false)}\r\n        onConfirm={handleLogout}\r\n      />\r\n      <Box sx={styles.mainWrapper}>\r\n        <Box sx={styles.left}>\r\n          <LockResetRoundedIcon sx={styles.bigIcon} />\r\n          <Typography sx={styles.title}>PASSWORD</Typography>\r\n        </Box>\r\n\r\n        <Box sx={styles.right}>\r\n          <Box sx={styles.dataWrapper}>\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Typography>change</Typography>\r\n              <IconButton sx={styles.iconButton} onClick={handleOpenForm}>\r\n                <EditOutlinedIcon sx={styles.editIcon} />\r\n              </IconButton>\r\n            </Box>\r\n\r\n            {open && (\r\n              <Box>\r\n                <Box sx={{ mb: 1 }}>\r\n                  <Typography sx={{ fontSize: 12 }}>New Password *</Typography>\r\n                  <FormField\r\n                    required\r\n                    name=\"password\"\r\n                    errors={newPassword.errors}\r\n                    value={newPassword.values.password}\r\n                    onChange={handleChangePassword}\r\n                    onKeyPress={handleKeyPress}\r\n                    size=\"small\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"New Password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    InputProps={{\r\n                      style: {\r\n                        background: \"rgba(255, 255, 255, 0.5)\",\r\n                        coor: \"black\",\r\n                      },\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <LockIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                          >\r\n                            {showPassword ? (\r\n                              <VisibilityOffIcon />\r\n                            ) : (\r\n                              <VisibilityIcon />\r\n                            )}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                </Box>\r\n                <Box sx={{ display: \"flex\", justifyContent: \"right\" }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={handleOpenForm}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"error\"\r\n                    size=\"small\"\r\n                    sx={{ ml: 1 }}\r\n                    onClick={handleValidate}\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? <CircularProgress size={24} /> : \"Submit\"}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Divider sx={styles.divider} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Security;\r\n","/** @format */\r\n\r\nimport { Box, Tab, Tabs, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport MyAccountSettings from \"./MyAccountSettings\";\r\nimport Security from \"./Security\";\r\nimport NotificationSettings from \"./NotificationSettings\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    mt: 10,\r\n    p: 2,\r\n  },\r\n  MyAccountTabsWrapper: {\r\n    backgroundColor: \"#EEEEEE\",\r\n    borderRadius: 3,\r\n    p: 2,\r\n    boxShadow: 5,\r\n    width: { xs: \"95%\", md: \"80%\" },\r\n    m: \"0 auto\",\r\n  },\r\n  main: {\r\n    maxWidth: { xs: \"100%\", md: \"90%\" },\r\n    m: \"0 auto\",\r\n  },\r\n};\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Box\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box>{children}</Box>}\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function Settings() {\r\n  const user = useSelector((state) => state.users.user);\r\n\r\n  const [tab, setTab] = React.useState(0);\r\n  const handleChangeTab = (event, newValue) => {\r\n    setTab(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={styles.wrapper}>\r\n      <Box sx={styles.MyAccountTabsWrapper}>\r\n        <Box>\r\n          <Tabs\r\n            value={tab}\r\n            onChange={handleChangeTab}\r\n            aria-label=\"basic tabs example\"\r\n          >\r\n            <Tab label=\"Settings\" {...a11yProps(0)} />\r\n            <Tab label=\"Security\" {...a11yProps(1)} />\r\n            <Tab label=\"Notifications\" {...a11yProps(2)} />\r\n          </Tabs>\r\n        </Box>\r\n        <Box sx={{ mt: 2 }}>\r\n          <TabPanel value={tab} index={0}>\r\n            <MyAccountSettings user={user} />\r\n          </TabPanel>\r\n          <TabPanel value={tab} index={1}>\r\n            <Security user={user} />\r\n          </TabPanel>\r\n          <TabPanel value={tab} index={2}>\r\n            <NotificationSettings user={user} />\r\n          </TabPanel>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst Http = axios.create();\r\n\r\nHttp.defaults.baseURL = process.env.REACT_APP_API_DOMAIN;\r\nHttp.defaults.headers.common[\"Accept\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Content-Type\"] = \"application/json\";\r\nHttp.defaults.headers.common[\"Authorization\"] = `Bearer ${localStorage.getItem(\r\n  \"accessToken\"\r\n)}`;\r\n\r\nHttp.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    if (error.message === \"Network Error\") {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    switch (error.response && error.response.status) {\r\n      case 401:\r\n        localStorage.removeItem(\"accessToken\");\r\n        window.location.href = \"/login\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default Http;\r\n"],"names":["props","errors","name","customError","rest","_objectWithoutProperties","_excluded","error","helperText","has","first","fieldProps","_objectSpread","value","_jsx","TextField","size","variant","ToastNotification","status","message","options","toast","ToastNotificationContainer","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","draggableDirection","draggablePercent","emailValidator","ReeValidate","email","addressValidator","address","numberValidator","contact_number","styles","mainWrapper","display","alignItems","flexWrap","bigIcon","mr","color","fontSize","xs","md","editIcon","iconButton","ml","left","width","sm","justifyContent","mb","right","title","fontWeight","dataWrapper","mt","data","center","textAlign","divider","boxShaodw","user","dispatch","useDispatch","history","useHistory","_React$useState","React","_React$useState2","_slicedToArray","loading","setLoading","_React$useState3","_React$useState4","openConfirm","setOpenConfirm","_React$useState5","_React$useState6","open","setOpen","_React$useState7","_React$useState8","type","setType","_React$useState9","values","_React$useState10","newEmail","setNewEmail","_React$useState11","_React$useState12","newPhone","setNewPhone","_React$useState13","_React$useState14","newAddress","setNewAddress","handleOpenForm","handleKeyPress","e","key","handleValidate","validator","validateAll","then","success","Http","res","code","updateUser","catch","err","prev","_jsxs","Box","children","ConfirmationModal","onClose","onConfirm","localStorage","clear","setTimeout","push","sx","AccountCircleOutlinedIcon","Typography","IconButton","onClick","EditOutlinedIcon","FormField","label","fullWidth","onKeyPress","onChange","target","_defineProperty","validate","InputProps","style","background","coor","Button","disabled","CircularProgress","inputProps","inputMode","pattern","maxLength","profile","Divider","BuildCircleOutlinedIcon","role","DeleteForeverOutlinedIcon","contact","offers","proposals","jobpost","state","setState","handleChange","event","checked","gilad","jason","antoine","filter","v","length","p","MailIcon","FormControl","m","component","FormLabel","FormGroup","FormControlLabel","control","Checkbox","FormHelperText","textDecoration","cursor","passwordValidator","password","showPassword","setShowPassword","newPassword","setNewPassword","LockResetRoundedIcon","required","margin","startAdornment","InputAdornment","LockIcon","endAdornment","onMouseDown","preventDefault","VisibilityOffIcon","VisibilityIcon","wrapper","MyAccountTabsWrapper","backgroundColor","borderRadius","boxShadow","main","maxWidth","TabPanel","index","other","hidden","id","concat","a11yProps","Settings","useSelector","users","tab","setTab","Tabs","newValue","Tab","MyAccountSettings","Security","NotificationSettings","axios","defaults","baseURL","process","headers","common","getItem","interceptors","response","use","Promise","reject","removeItem","window","location","href"],"sourceRoot":""}