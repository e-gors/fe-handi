{"version":3,"file":"static/js/98.1dabab0c.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["getFormControlLabelUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormControlLabelRoot","styled","name","overridesResolver","props","styles","ownerState","_defineProperty","concat","formControlLabelClasses","label","root","capitalize","labelPlacement","_ref2","theme","_extends","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","flexDirection","color","vars","palette","text","disabled","React","inProps","ref","_slotProps$typography","useThemeProps","className","_props$componentsProp","componentsProps","control","disabledProp","disableTypography","labelProp","_props$labelPlacement","_props$slotProps","slotProps","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","controlProps","forEach","key","fcs","formControlState","states","error","classes","slots","composeClasses","useUtilityClasses","typographySlotProps","typography","type","Typography","_jsx","component","clsx","children","_jsxs","getFormGroupUtilityClass","FormGroupRoot","row","_ref","flexWrap","_props$row","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","padding","borderRadius","edge","size","SwitchBaseInput","position","opacity","width","height","top","left","margin","zIndex","autoFocus","checkedProp","checked","checkedIcon","defaultChecked","_props$disableFocusRi","disableFocusRipple","_props$edge","icon","id","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","_props$required","required","tabIndex","value","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","input","centerRipple","focusRipple","role","undefined","event","nativeEvent","defaultPrevented","newChecked","target"],"sourceRoot":""}